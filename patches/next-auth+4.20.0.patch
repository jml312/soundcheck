diff --git a/node_modules/next-auth/LICENSE b/node_modules/next-auth/LICENSE
index 8075d93..eee418e 100644
--- a/node_modules/next-auth/LICENSE
+++ b/node_modules/next-auth/LICENSE
@@ -1,6 +1,6 @@
 ISC License
 
-Copyright (c) 2022-2023, Balázs Orbán
+Copyright (c) 2018-2021, Iain Collins
 
 Permission to use, copy, modify, and/or distribute this software for any
 purpose with or without fee is hereby granted, provided that the above
diff --git a/node_modules/next-auth/README.md b/node_modules/next-auth/README.md
index fa0995a..282ee9f 100644
--- a/node_modules/next-auth/README.md
+++ b/node_modules/next-auth/README.md
@@ -41,7 +41,7 @@ This is a monorepo containing the following packages / projects:
 ## Getting Started
 
 ```
-npm install next-auth
+npm install --save next-auth
 ```
 
 The easiest way to continue getting started, is to follow the [getting started](https://next-auth.js.org/getting-started/example) section in our docs.
@@ -247,7 +247,7 @@ We're happy to announce we've recently created an [OpenCollective](https://openc
 ## Contributing
 
 We're open to all community contributions! If you'd like to contribute in any way, please first read
-our [Contributing Guide](https://github.com/nextauthjs/.github/blob/main/CONTRIBUTING.md).
+our [Contributing Guide](https://github.com/nextauthjs/next-auth/blob/main/CONTRIBUTING.md).
 
 ## License
 
diff --git a/node_modules/next-auth/adapters.d.ts b/node_modules/next-auth/adapters.d.ts
index e198f17..172756e 100644
--- a/node_modules/next-auth/adapters.d.ts
+++ b/node_modules/next-auth/adapters.d.ts
@@ -54,7 +54,7 @@ export interface VerificationToken {
  * [Adapters Overview](https://next-auth.js.org/adapters/overview) |
  * [Create a custom adapter](https://next-auth.js.org/tutorials/creating-a-database-adapter)
  */
-export type Adapter<WithVerificationToken = boolean> = DefaultAdapter & (WithVerificationToken extends true ? {
+export declare type Adapter<WithVerificationToken = boolean> = DefaultAdapter & (WithVerificationToken extends true ? {
     createVerificationToken: (verificationToken: VerificationToken) => Awaitable<VerificationToken | null | undefined>;
     /**
      * Return verification token from the database
@@ -71,7 +71,7 @@ export interface DefaultAdapter {
     getUserByEmail: (email: string) => Awaitable<AdapterUser | null>;
     /** Using the provider id and the id of the user for a specific account, get the user. */
     getUserByAccount: (providerAccountId: Pick<AdapterAccount, "provider" | "providerAccountId">) => Awaitable<AdapterUser | null>;
-    updateUser: (user: Partial<AdapterUser> & Pick<AdapterUser, 'id'>) => Awaitable<AdapterUser>;
+    updateUser: (user: Partial<AdapterUser>) => Awaitable<AdapterUser>;
     /** @todo Implement */
     deleteUser?: (userId: string) => Promise<void> | Awaitable<AdapterUser | null | undefined>;
     linkAccount: (account: AdapterAccount) => Promise<void> | Awaitable<AdapterAccount | null | undefined>;
@@ -104,4 +104,3 @@ export interface DefaultAdapter {
         token: string;
     }) => Awaitable<VerificationToken | null>;
 }
-//# sourceMappingURL=adapters.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/adapters.d.ts.map b/node_modules/next-auth/adapters.d.ts.map
deleted file mode 100644
index a7dbdc3..0000000
--- a/node_modules/next-auth/adapters.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"adapters.d.ts","sourceRoot":"","sources":["src/adapters.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/client-provider.test.d.ts b/node_modules/next-auth/client/__tests__/client-provider.test.d.ts
index 4e34c7b..cb0ff5c 100644
--- a/node_modules/next-auth/client/__tests__/client-provider.test.d.ts
+++ b/node_modules/next-auth/client/__tests__/client-provider.test.d.ts
@@ -1,2 +1 @@
 export {};
-//# sourceMappingURL=client-provider.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/client-provider.test.d.ts.map b/node_modules/next-auth/client/__tests__/client-provider.test.d.ts.map
deleted file mode 100644
index 527fe46..0000000
--- a/node_modules/next-auth/client/__tests__/client-provider.test.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"client-provider.test.d.ts","sourceRoot":"","sources":["../../src/client/__tests__/client-provider.test.js"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/csrf.test.d.ts b/node_modules/next-auth/client/__tests__/csrf.test.d.ts
index 9ee378e..cb0ff5c 100644
--- a/node_modules/next-auth/client/__tests__/csrf.test.d.ts
+++ b/node_modules/next-auth/client/__tests__/csrf.test.d.ts
@@ -1,2 +1 @@
 export {};
-//# sourceMappingURL=csrf.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/csrf.test.d.ts.map b/node_modules/next-auth/client/__tests__/csrf.test.d.ts.map
deleted file mode 100644
index e072369..0000000
--- a/node_modules/next-auth/client/__tests__/csrf.test.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"csrf.test.d.ts","sourceRoot":"","sources":["../../src/client/__tests__/csrf.test.js"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/helpers/mocks.d.ts b/node_modules/next-auth/client/__tests__/helpers/mocks.d.ts
index 19c342e..4a90916 100644
--- a/node_modules/next-auth/client/__tests__/helpers/mocks.d.ts
+++ b/node_modules/next-auth/client/__tests__/helpers/mocks.d.ts
@@ -75,4 +75,3 @@ export namespace mockSignOutResponse {
     export { url_3 as url };
 }
 export const server: import("msw/lib/glossary-58eca5a8").z;
-//# sourceMappingURL=mocks.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/helpers/mocks.d.ts.map b/node_modules/next-auth/client/__tests__/helpers/mocks.d.ts.map
deleted file mode 100644
index 661a011..0000000
--- a/node_modules/next-auth/client/__tests__/helpers/mocks.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"mocks.d.ts","sourceRoot":"","sources":["../../../src/client/__tests__/helpers/mocks.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,2DAuBC"}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/helpers/utils.d.ts b/node_modules/next-auth/client/__tests__/helpers/utils.d.ts
index c9ff939..82c2055 100644
--- a/node_modules/next-auth/client/__tests__/helpers/utils.d.ts
+++ b/node_modules/next-auth/client/__tests__/helpers/utils.d.ts
@@ -1,3 +1,2 @@
 export function getBroadcastEvents(): any;
 export function printFetchCalls(mockCalls: any): any;
-//# sourceMappingURL=utils.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/helpers/utils.d.ts.map b/node_modules/next-auth/client/__tests__/helpers/utils.d.ts.map
deleted file mode 100644
index 4f2558a..0000000
--- a/node_modules/next-auth/client/__tests__/helpers/utils.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../src/client/__tests__/helpers/utils.js"],"names":[],"mappings":"AAAA,0CAOC;AAED,qDAIC"}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/providers.test.d.ts b/node_modules/next-auth/client/__tests__/providers.test.d.ts
index e121ded..cb0ff5c 100644
--- a/node_modules/next-auth/client/__tests__/providers.test.d.ts
+++ b/node_modules/next-auth/client/__tests__/providers.test.d.ts
@@ -1,2 +1 @@
 export {};
-//# sourceMappingURL=providers.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/providers.test.d.ts.map b/node_modules/next-auth/client/__tests__/providers.test.d.ts.map
deleted file mode 100644
index ba3e467..0000000
--- a/node_modules/next-auth/client/__tests__/providers.test.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"providers.test.d.ts","sourceRoot":"","sources":["../../src/client/__tests__/providers.test.js"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/session.test.d.ts b/node_modules/next-auth/client/__tests__/session.test.d.ts
index 41e3df2..cb0ff5c 100644
--- a/node_modules/next-auth/client/__tests__/session.test.d.ts
+++ b/node_modules/next-auth/client/__tests__/session.test.d.ts
@@ -1,2 +1 @@
 export {};
-//# sourceMappingURL=session.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/session.test.d.ts.map b/node_modules/next-auth/client/__tests__/session.test.d.ts.map
deleted file mode 100644
index 4bae932..0000000
--- a/node_modules/next-auth/client/__tests__/session.test.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"session.test.d.ts","sourceRoot":"","sources":["../../src/client/__tests__/session.test.js"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/sign-in.test.d.ts b/node_modules/next-auth/client/__tests__/sign-in.test.d.ts
index 4429743..cb0ff5c 100644
--- a/node_modules/next-auth/client/__tests__/sign-in.test.d.ts
+++ b/node_modules/next-auth/client/__tests__/sign-in.test.d.ts
@@ -1,2 +1 @@
 export {};
-//# sourceMappingURL=sign-in.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/sign-in.test.d.ts.map b/node_modules/next-auth/client/__tests__/sign-in.test.d.ts.map
deleted file mode 100644
index 134c40f..0000000
--- a/node_modules/next-auth/client/__tests__/sign-in.test.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"sign-in.test.d.ts","sourceRoot":"","sources":["../../src/client/__tests__/sign-in.test.js"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/sign-out.test.d.ts b/node_modules/next-auth/client/__tests__/sign-out.test.d.ts
index 5b94b98..cb0ff5c 100644
--- a/node_modules/next-auth/client/__tests__/sign-out.test.d.ts
+++ b/node_modules/next-auth/client/__tests__/sign-out.test.d.ts
@@ -1,2 +1 @@
 export {};
-//# sourceMappingURL=sign-out.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/sign-out.test.d.ts.map b/node_modules/next-auth/client/__tests__/sign-out.test.d.ts.map
deleted file mode 100644
index 9527a9a..0000000
--- a/node_modules/next-auth/client/__tests__/sign-out.test.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"sign-out.test.d.ts","sourceRoot":"","sources":["../../src/client/__tests__/sign-out.test.js"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/use-session-hook.test.d.ts b/node_modules/next-auth/client/__tests__/use-session-hook.test.d.ts
index fc0127b..cb0ff5c 100644
--- a/node_modules/next-auth/client/__tests__/use-session-hook.test.d.ts
+++ b/node_modules/next-auth/client/__tests__/use-session-hook.test.d.ts
@@ -1,2 +1 @@
 export {};
-//# sourceMappingURL=use-session-hook.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/client/__tests__/use-session-hook.test.d.ts.map b/node_modules/next-auth/client/__tests__/use-session-hook.test.d.ts.map
deleted file mode 100644
index 1e4a21f..0000000
--- a/node_modules/next-auth/client/__tests__/use-session-hook.test.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"use-session-hook.test.d.ts","sourceRoot":"","sources":["../../src/client/__tests__/use-session-hook.test.js"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/_utils.d.ts b/node_modules/next-auth/client/_utils.d.ts
index 759943c..cb6a103 100644
--- a/node_modules/next-auth/client/_utils.d.ts
+++ b/node_modules/next-auth/client/_utils.d.ts
@@ -17,13 +17,9 @@ export interface AuthClientConfig {
     _getSession: (...args: any[]) => any;
 }
 export interface CtxOrReq {
-    req?: Partial<IncomingMessage> & {
-        body?: any;
-    };
+    req?: IncomingMessage;
     ctx?: {
-        req: Partial<IncomingMessage> & {
-            body?: any;
-        };
+        req: IncomingMessage;
     };
 }
 /**
@@ -57,4 +53,3 @@ export declare function BroadcastChannel(name?: string): {
     /** Notify other tabs/windows. */
     post(message: Record<string, unknown>): void;
 };
-//# sourceMappingURL=_utils.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/client/_utils.d.ts.map b/node_modules/next-auth/client/_utils.d.ts.map
deleted file mode 100644
index 71fdd9d..0000000
--- a/node_modules/next-auth/client/_utils.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"_utils.d.ts","sourceRoot":"","sources":["../src/client/_utils.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,MAAM,CAAA;AAC3C,OAAO,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,IAAI,CAAA;AAEjD,MAAM,WAAW,gBAAgB;IAC/B,OAAO,EAAE,MAAM,CAAA;IACf,QAAQ,EAAE,MAAM,CAAA;IAChB,aAAa,EAAE,MAAM,CAAA;IACrB,cAAc,EAAE,MAAM,CAAA;IACtB,mCAAmC;IACnC,QAAQ,CAAC,EAAE,OAAO,GAAG,IAAI,GAAG,SAAS,CAAA;IACrC,wDAAwD;IACxD,SAAS,EAAE,MAAM,CAAA;IACjB;;;OAGG;IACH,WAAW,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,KAAK,GAAG,CAAA;CACrC;AAED,MAAM,WAAW,QAAQ;IACvB,GAAG,CAAC,EAAE,OAAO,CAAC,eAAe,CAAC,GAAG;QAAE,IAAI,CAAC,EAAE,GAAG,CAAA;KAAE,CAAA;IAC/C,GAAG,CAAC,EAAE;QAAE,GAAG,EAAE,OAAO,CAAC,eAAe,CAAC,GAAG;YAAE,IAAI,CAAC,EAAE,GAAG,CAAA;SAAE,CAAA;KAAE,CAAA;CACzD;AAED;;;;;;GAMG;AACH,wBAAsB,SAAS,CAAC,CAAC,GAAG,GAAG,EACrC,IAAI,EAAE,MAAM,EACZ,UAAU,EAAE,gBAAgB,EAC5B,MAAM,EAAE,cAAc,EACtB,EAAE,GAAG,EAAE,GAAc,EAAE,GAAE,QAAa,GACrC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAuBnB;AAED,wBAAgB,UAAU,CAAC,UAAU,EAAE,gBAAgB,UAOtD;AAED,gFAAgF;AAChF,wBAAgB,GAAG,WAElB;AAED,MAAM,WAAW,gBAAgB;IAC/B,KAAK,CAAC,EAAE,SAAS,CAAA;IACjB,IAAI,CAAC,EAAE;QAAE,OAAO,CAAC,EAAE,SAAS,GAAG,YAAY,CAAA;KAAE,CAAA;IAC7C,QAAQ,EAAE,MAAM,CAAA;IAChB,SAAS,EAAE,MAAM,CAAA;CAClB;AAED;;;;;GAKG;AACH,wBAAgB,gBAAgB,CAAC,IAAI,SAAqB;IAEtD,0CAA0C;iCACb,gBAAgB,KAAK,IAAI;IAWtD,iCAAiC;kBACnB,OAAO,MAAM,EAAE,OAAO,CAAC;EAgBxC"}
\ No newline at end of file
diff --git a/node_modules/next-auth/client/_utils.js b/node_modules/next-auth/client/_utils.js
index de4e3c4..6cecb87 100644
--- a/node_modules/next-auth/client/_utils.js
+++ b/node_modules/next-auth/client/_utils.js
@@ -31,7 +31,6 @@ function _fetchData() {
         _ref$req,
         req,
         url,
-        _req$headers,
         options,
         res,
         data,
@@ -44,42 +43,34 @@ function _fetchData() {
             _ref = _args.length > 3 && _args[3] !== undefined ? _args[3] : {}, ctx = _ref.ctx, _ref$req = _ref.req, req = _ref$req === void 0 ? ctx === null || ctx === void 0 ? void 0 : ctx.req : _ref$req;
             url = "".concat(apiBaseUrl(__NEXTAUTH), "/").concat(path);
             _context.prev = 2;
-            options = {
-              headers: _objectSpread({
-                "Content-Type": "application/json"
-              }, req !== null && req !== void 0 && (_req$headers = req.headers) !== null && _req$headers !== void 0 && _req$headers.cookie ? {
+            options = req !== null && req !== void 0 && req.headers.cookie ? {
+              headers: {
                 cookie: req.headers.cookie
-              } : {})
-            };
-
-            if (req !== null && req !== void 0 && req.body) {
-              options.body = JSON.stringify(req.body);
-              options.method = "POST";
-            }
-
-            _context.next = 7;
+              }
+            } : {};
+            _context.next = 6;
             return fetch(url, options);
 
-          case 7:
+          case 6:
             res = _context.sent;
-            _context.next = 10;
+            _context.next = 9;
             return res.json();
 
-          case 10:
+          case 9:
             data = _context.sent;
 
             if (res.ok) {
-              _context.next = 13;
+              _context.next = 12;
               break;
             }
 
             throw data;
 
-          case 13:
+          case 12:
             return _context.abrupt("return", Object.keys(data).length > 0 ? data : null);
 
-          case 16:
-            _context.prev = 16;
+          case 15:
+            _context.prev = 15;
             _context.t0 = _context["catch"](2);
             logger.error("CLIENT_FETCH_ERROR", {
               error: _context.t0,
@@ -87,12 +78,12 @@ function _fetchData() {
             });
             return _context.abrupt("return", null);
 
-          case 20:
+          case 19:
           case "end":
             return _context.stop();
         }
       }
-    }, _callee, null, [[2, 16]]);
+    }, _callee, null, [[2, 15]]);
   }));
   return _fetchData.apply(this, arguments);
 }
diff --git a/node_modules/next-auth/core/errors.d.ts b/node_modules/next-auth/core/errors.d.ts
index b286f0f..ef62a90 100644
--- a/node_modules/next-auth/core/errors.d.ts
+++ b/node_modules/next-auth/core/errors.d.ts
@@ -58,4 +58,3 @@ export declare function capitalize(s: string): string;
 export declare function eventsErrorHandler(methods: Partial<EventCallbacks>, logger: LoggerInstance): Partial<EventCallbacks>;
 /** Handles adapter induced errors. */
 export declare function adapterErrorHandler<TAdapter>(adapter: TAdapter | undefined, logger: LoggerInstance): TAdapter | undefined;
-//# sourceMappingURL=errors.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/errors.d.ts.map b/node_modules/next-auth/core/errors.d.ts.map
deleted file mode 100644
index 136a78b..0000000
--- a/node_modules/next-auth/core/errors.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"errors.d.ts","sourceRoot":"","sources":["../src/core/errors.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,IAAI,CAAA;AAExD;;;GAGG;AACH,qBAAa,YAAa,SAAQ,KAAK;IACrC,IAAI,EAAE,MAAM,CAAA;gBACA,KAAK,EAAE,KAAK,GAAG,MAAM;IAUjC,MAAM;;;;;CAOP;AAED,qBAAa,kBAAmB,SAAQ,YAAY;IAClD,IAAI,SAAuB;CAC5B;AAED;;;GAGG;AACH,qBAAa,qBAAsB,SAAQ,YAAY;IACrD,IAAI,SAA0B;CAC/B;AAED,qBAAa,eAAgB,SAAQ,YAAY;IAC/C,IAAI,SAAyB;IAC7B,IAAI,SAAqC;CAC1C;AAED,qBAAa,aAAc,SAAQ,YAAY;IAC7C,IAAI,SAAuB;IAC3B,IAAI,SAAc;CACnB;AAED,qBAAa,gBAAiB,SAAQ,YAAY;IAChD,IAAI,SAA0B;IAC9B,IAAI,SAAuC;CAC5C;AAED,qBAAa,cAAe,SAAQ,YAAY;IAC9C,IAAI,SAAwB;IAC5B,IAAI,SAAiC;CACtC;AAED,qBAAa,qBAAsB,SAAQ,YAAY;IACrD,IAAI,SAA+B;IACnC,IAAI,SAAkC;CACvC;AAED,qBAAa,mBAAoB,SAAQ,YAAY;IACnD,IAAI,SAA6B;IACjC,IAAI,SAAmC;CACxC;AAED,qBAAa,kBAAmB,SAAQ,YAAY;IAClD,IAAI,SAAuB;IAC3B,IAAI,SAA+B;CACpC;AAID,wBAAgB,UAAU,CAAC,CAAC,EAAE,MAAM,UAEnC;AAED,wBAAgB,UAAU,CAAC,CAAC,EAAE,MAAM,UAEnC;AAED;;GAEG;AACH,wBAAgB,kBAAkB,CAChC,OAAO,EAAE,OAAO,CAAC,cAAc,CAAC,EAChC,MAAM,EAAE,cAAc,GACrB,OAAO,CAAC,cAAc,CAAC,CAYzB;AAED,sCAAsC;AACtC,wBAAgB,mBAAmB,CAAC,QAAQ,EAC1C,OAAO,EAAE,QAAQ,GAAG,SAAS,EAC7B,MAAM,EAAE,cAAc,GACrB,QAAQ,GAAG,SAAS,CAkBtB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/index.d.ts b/node_modules/next-auth/core/index.d.ts
index 91e3bc7..4602053 100644
--- a/node_modules/next-auth/core/index.d.ts
+++ b/node_modules/next-auth/core/index.d.ts
@@ -2,7 +2,7 @@ import type { AuthAction, AuthOptions } from "./types";
 import type { Cookie } from "./lib/cookie";
 export interface RequestInternal {
     /** @default "http://localhost:3000" */
-    origin?: string;
+    host?: string;
     method?: string;
     cookies?: Partial<Record<string, string>>;
     headers?: Record<string, any>;
@@ -28,4 +28,3 @@ export interface NextAuthHandlerParams {
     options: AuthOptions;
 }
 export declare function AuthHandler<Body extends string | Record<string, any> | any[]>(params: NextAuthHandlerParams): Promise<ResponseInternal<Body>>;
-//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/index.d.ts.map b/node_modules/next-auth/core/index.d.ts.map
deleted file mode 100644
index f62730c..0000000
--- a/node_modules/next-auth/core/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/core/index.ts"],"names":[],"mappings":"AAQA,OAAO,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,SAAS,CAAA;AACtD,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,cAAc,CAAA;AAI1C,MAAM,WAAW,eAAe;IAC9B,uCAAuC;IACvC,MAAM,CAAC,EAAE,MAAM,CAAA;IACf,MAAM,CAAC,EAAE,MAAM,CAAA;IACf,OAAO,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAA;IACzC,OAAO,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;IAC7B,KAAK,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;IAC3B,IAAI,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;IAC1B,MAAM,EAAE,UAAU,CAAA;IAClB,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,KAAK,CAAC,EAAE,MAAM,CAAA;CACf;AAED,MAAM,WAAW,cAAc;IAC7B,GAAG,EAAE,MAAM,CAAA;IACX,KAAK,EAAE,MAAM,CAAA;CACd;AAED,MAAM,WAAW,gBAAgB,CAC/B,IAAI,SAAS,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG;IAEvD,MAAM,CAAC,EAAE,MAAM,CAAA;IACf,OAAO,CAAC,EAAE,cAAc,EAAE,CAAA;IAC1B,IAAI,CAAC,EAAE,IAAI,CAAA;IACX,QAAQ,CAAC,EAAE,MAAM,CAAA;IACjB,OAAO,CAAC,EAAE,MAAM,EAAE,CAAA;CACnB;AAED,MAAM,WAAW,qBAAqB;IACpC,GAAG,EAAE,OAAO,GAAG,eAAe,CAAA;IAC9B,OAAO,EAAE,WAAW,CAAA;CACrB;AA2CD,wBAAsB,WAAW,CAC/B,IAAI,SAAS,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,EACjD,MAAM,EAAE,qBAAqB,GAAG,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAwOhE"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/index.js b/node_modules/next-auth/core/index.js
index 2da9698..24c317d 100644
--- a/node_modules/next-auth/core/index.js
+++ b/node_modules/next-auth/core/index.js
@@ -9,7 +9,7 @@ exports.AuthHandler = AuthHandler;
 
 var _logger = _interopRequireWildcard(require("../utils/logger"));
 
-var _detectOrigin = require("../utils/detect-origin");
+var _detectHost = require("../utils/detect-host");
 
 var routes = _interopRequireWildcard(require("./routes"));
 
@@ -34,8 +34,6 @@ async function getBody(req) {
 }
 
 async function toInternalRequest(req) {
-  var _headers$xForwarded2;
-
   if (req instanceof Request) {
     var _req$headers$get, _url$searchParams$get, _headers$xForwarded;
 
@@ -52,16 +50,11 @@ async function toInternalRequest(req) {
       cookies: (0, _cookie2.parse)((_req$headers$get = req.headers.get("cookie")) !== null && _req$headers$get !== void 0 ? _req$headers$get : ""),
       providerId: nextauth[1],
       error: (_url$searchParams$get = url.searchParams.get("error")) !== null && _url$searchParams$get !== void 0 ? _url$searchParams$get : nextauth[1],
-      origin: (0, _detectOrigin.detectOrigin)((_headers$xForwarded = headers["x-forwarded-host"]) !== null && _headers$xForwarded !== void 0 ? _headers$xForwarded : headers.host, headers["x-forwarded-proto"]),
+      host: (0, _detectHost.detectHost)((_headers$xForwarded = headers["x-forwarded-host"]) !== null && _headers$xForwarded !== void 0 ? _headers$xForwarded : headers.host),
       query
     };
   }
 
-  const {
-    headers
-  } = req;
-  const host = (_headers$xForwarded2 = headers === null || headers === void 0 ? void 0 : headers["x-forwarded-host"]) !== null && _headers$xForwarded2 !== void 0 ? _headers$xForwarded2 : headers === null || headers === void 0 ? void 0 : headers.host;
-  req.origin = (0, _detectOrigin.detectOrigin)(host, headers === null || headers === void 0 ? void 0 : headers["x-forwarded-proto"]);
   return req;
 }
 
@@ -139,7 +132,7 @@ async function AuthHandler(params) {
     authOptions,
     action,
     providerId,
-    origin: req.origin,
+    host: req.host,
     callbackUrl: (_req$body$callbackUrl = (_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.callbackUrl) !== null && _req$body$callbackUrl !== void 0 ? _req$body$callbackUrl : (_req$query2 = req.query) === null || _req$query2 === void 0 ? void 0 : _req$query2.callbackUrl,
     csrfToken: (_req$body2 = req.body) === null || _req$body2 === void 0 ? void 0 : _req$body2.csrfToken,
     cookies: req.cookies,
@@ -317,49 +310,23 @@ async function AuthHandler(params) {
         break;
 
       case "_log":
-        {
-          if (authOptions.logger) {
-            try {
-              var _req$body3;
-
-              const {
-                code,
-                level,
-                ...metadata
-              } = (_req$body3 = req.body) !== null && _req$body3 !== void 0 ? _req$body3 : {};
-
-              _logger.default[level](code, metadata);
-            } catch (error) {
-              _logger.default.error("LOGGER_ERROR", error);
-            }
+        if (authOptions.logger) {
+          try {
+            var _req$body3;
+
+            const {
+              code,
+              level,
+              ...metadata
+            } = (_req$body3 = req.body) !== null && _req$body3 !== void 0 ? _req$body3 : {};
+
+            _logger.default[level](code, metadata);
+          } catch (error) {
+            _logger.default.error("LOGGER_ERROR", error);
           }
-
-          return {};
         }
 
-      case "session":
-        {
-          if (options.csrfTokenVerified) {
-            var _req$body4;
-
-            const session = await routes.session({
-              options,
-              sessionStore,
-              newSession: (_req$body4 = req.body) === null || _req$body4 === void 0 ? void 0 : _req$body4.data,
-              isUpdate: true
-            });
-            if (session.cookies) cookies.push(...session.cookies);
-            return { ...session,
-              cookies
-            };
-          }
-
-          return {
-            status: 400,
-            body: {},
-            cookies
-          };
-        }
+        return {};
 
       default:
     }
diff --git a/node_modules/next-auth/core/init.d.ts b/node_modules/next-auth/core/init.d.ts
index 921a445..cc94aeb 100644
--- a/node_modules/next-auth/core/init.d.ts
+++ b/node_modules/next-auth/core/init.d.ts
@@ -3,7 +3,7 @@ import * as cookie from "./lib/cookie";
 import { RequestInternal } from ".";
 import type { InternalOptions } from "./types";
 interface InitParams {
-    origin?: string;
+    host?: string;
     authOptions: AuthOptions;
     providerId?: string;
     action: InternalOptions["action"];
@@ -16,9 +16,8 @@ interface InitParams {
     cookies: RequestInternal["cookies"];
 }
 /** Initialize all internal options and cookies. */
-export declare function init({ authOptions, providerId, action, origin, cookies: reqCookies, callbackUrl: reqCallbackUrl, csrfToken: reqCsrfToken, isPost, }: InitParams): Promise<{
+export declare function init({ authOptions, providerId, action, host, cookies: reqCookies, callbackUrl: reqCallbackUrl, csrfToken: reqCsrfToken, isPost, }: InitParams): Promise<{
     options: InternalOptions;
     cookies: cookie.Cookie[];
 }>;
 export {};
-//# sourceMappingURL=init.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/init.d.ts.map b/node_modules/next-auth/core/init.d.ts.map
deleted file mode 100644
index 0e88a29..0000000
--- a/node_modules/next-auth/core/init.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"init.d.ts","sourceRoot":"","sources":["../src/core/init.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,IAAI,CAAA;AAKhC,OAAO,KAAK,MAAM,MAAM,cAAc,CAAA;AAKtC,OAAO,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAEnC,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,SAAS,CAAA;AAG9C,UAAU,UAAU;IAClB,MAAM,CAAC,EAAE,MAAM,CAAA;IACf,WAAW,EAAE,WAAW,CAAA;IACxB,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,MAAM,EAAE,eAAe,CAAC,QAAQ,CAAC,CAAA;IACjC,8DAA8D;IAC9D,WAAW,CAAC,EAAE,MAAM,CAAA;IACpB,iGAAiG;IACjG,SAAS,CAAC,EAAE,MAAM,CAAA;IAClB,8CAA8C;IAC9C,MAAM,EAAE,OAAO,CAAA;IACf,OAAO,EAAE,eAAe,CAAC,SAAS,CAAC,CAAA;CACpC;AAED,mDAAmD;AACnD,wBAAsB,IAAI,CAAC,EACzB,WAAW,EACX,UAAU,EACV,MAAM,EACN,MAAM,EACN,OAAO,EAAE,UAAU,EACnB,WAAW,EAAE,cAAc,EAC3B,SAAS,EAAE,YAAY,EACvB,MAAM,GACP,EAAE,UAAU,GAAG,OAAO,CAAC;IACtB,OAAO,EAAE,eAAe,CAAA;IACxB,OAAO,EAAE,MAAM,CAAC,MAAM,EAAE,CAAA;CACzB,CAAC,CA+GD"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/init.js b/node_modules/next-auth/core/init.js
index ea13be2..8b2bf53 100644
--- a/node_modules/next-auth/core/init.js
+++ b/node_modules/next-auth/core/init.js
@@ -37,7 +37,7 @@ async function init({
   authOptions,
   providerId,
   action,
-  origin,
+  host,
   cookies: reqCookies,
   callbackUrl: reqCallbackUrl,
   csrfToken: reqCsrfToken,
@@ -45,7 +45,7 @@ async function init({
 }) {
   var _authOptions$useSecur, _authOptions$events;
 
-  const url = (0, _parseUrl.default)(origin);
+  const url = (0, _parseUrl.default)(host);
   const secret = (0, _utils.createSecret)({
     authOptions,
     url
diff --git a/node_modules/next-auth/core/lib/assert.d.ts b/node_modules/next-auth/core/lib/assert.d.ts
index 6e442a3..fdb194a 100644
--- a/node_modules/next-auth/core/lib/assert.d.ts
+++ b/node_modules/next-auth/core/lib/assert.d.ts
@@ -2,7 +2,7 @@ import { MissingAdapter, MissingAPIRoute, MissingAuthorize, MissingSecret, Unsup
 import type { RequestInternal } from "..";
 import type { WarningCode } from "../../utils/logger";
 import type { AuthOptions } from "../types";
-type ConfigError = MissingAPIRoute | MissingSecret | UnsupportedStrategy | MissingAuthorize | MissingAdapter;
+declare type ConfigError = MissingAPIRoute | MissingSecret | UnsupportedStrategy | MissingAuthorize | MissingAdapter;
 /**
  * Verify that the user configured `next-auth` correctly.
  * Good place to mention deprecations as well.
@@ -14,4 +14,3 @@ export declare function assertConfig(params: {
     req: RequestInternal;
 }): ConfigError | WarningCode[];
 export {};
-//# sourceMappingURL=assert.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/assert.d.ts.map b/node_modules/next-auth/core/lib/assert.d.ts.map
deleted file mode 100644
index df60f23..0000000
--- a/node_modules/next-auth/core/lib/assert.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"assert.d.ts","sourceRoot":"","sources":["../../src/core/lib/assert.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,cAAc,EACd,eAAe,EACf,gBAAgB,EAChB,aAAa,EACb,mBAAmB,EAGpB,MAAM,WAAW,CAAA;AAIlB,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,IAAI,CAAA;AACzC,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAA;AACrD,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,UAAU,CAAA;AAE3C,KAAK,WAAW,GACZ,eAAe,GACf,aAAa,GACb,mBAAmB,GACnB,gBAAgB,GAChB,cAAc,CAAA;AAclB;;;;;GAKG;AACH,wBAAgB,YAAY,CAAC,MAAM,EAAE;IACnC,OAAO,EAAE,WAAW,CAAA;IACpB,GAAG,EAAE,eAAe,CAAA;CACrB,GAAG,WAAW,GAAG,WAAW,EAAE,CAwG9B"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/assert.js b/node_modules/next-auth/core/lib/assert.js
index e01cd9e..180edfb 100644
--- a/node_modules/next-auth/core/lib/assert.js
+++ b/node_modules/next-auth/core/lib/assert.js
@@ -33,7 +33,7 @@ function assertConfig(params) {
   const warnings = [];
 
   if (!warned) {
-    if (!req.origin) warnings.push("NEXTAUTH_URL");
+    if (!req.host) warnings.push("NEXTAUTH_URL");
     if (!options.secret && process.env.NODE_ENV !== "production") warnings.push("NO_SECRET");
     if (options.debug) warnings.push("DEBUG_ENABLED");
   }
@@ -47,7 +47,7 @@ function assertConfig(params) {
   }
 
   const callbackUrlParam = (_req$query2 = req.query) === null || _req$query2 === void 0 ? void 0 : _req$query2.callbackUrl;
-  const url = (0, _parseUrl.default)(req.origin);
+  const url = (0, _parseUrl.default)(req.host);
 
   if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.base)) {
     return new _errors.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlParam}`);
diff --git a/node_modules/next-auth/core/lib/callback-handler.d.ts b/node_modules/next-auth/core/lib/callback-handler.d.ts
index 7ced5dd..aa5dbae 100644
--- a/node_modules/next-auth/core/lib/callback-handler.d.ts
+++ b/node_modules/next-auth/core/lib/callback-handler.d.ts
@@ -33,4 +33,3 @@ export default function callbackHandler(params: {
     isNewUser: boolean;
     account?: undefined;
 }>;
-//# sourceMappingURL=callback-handler.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/callback-handler.d.ts.map b/node_modules/next-auth/core/lib/callback-handler.d.ts.map
deleted file mode 100644
index 37190a1..0000000
--- a/node_modules/next-auth/core/lib/callback-handler.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"callback-handler.d.ts","sourceRoot":"","sources":["../../src/core/lib/callback-handler.ts"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAC/C,OAAO,KAAK,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AACjE,OAAO,KAAK,EAAE,GAAG,EAAE,MAAM,WAAW,CAAA;AACpC,OAAO,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,OAAO,CAAA;AAC1C,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,UAAU,CAAA;AAG5C;;;;;;;;;;;GAWG;AACH,wBAA8B,eAAe,CAAC,MAAM,EAAE;IACpD,YAAY,CAAC,EAAE,YAAY,CAAA;IAC3B,OAAO,EAAE,IAAI,GAAG,WAAW,GAAG;QAAE,KAAK,EAAE,MAAM,CAAA;KAAE,CAAA;IAC/C,OAAO,EAAE,OAAO,GAAG,IAAI,CAAA;IACvB,OAAO,EAAE,eAAe,CAAA;CACzB;;;;;;;;;;GAyMA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/callback-url.d.ts b/node_modules/next-auth/core/lib/callback-url.d.ts
index 7676c0d..c2f7946 100644
--- a/node_modules/next-auth/core/lib/callback-url.d.ts
+++ b/node_modules/next-auth/core/lib/callback-url.d.ts
@@ -14,4 +14,3 @@ export declare function createCallbackUrl({ options, paramValue, cookieValue, }:
     callbackUrlCookie: string | undefined;
 }>;
 export {};
-//# sourceMappingURL=callback-url.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/callback-url.d.ts.map b/node_modules/next-auth/core/lib/callback-url.d.ts.map
deleted file mode 100644
index c667d14..0000000
--- a/node_modules/next-auth/core/lib/callback-url.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"callback-url.d.ts","sourceRoot":"","sources":["../../src/core/lib/callback-url.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAE/C,UAAU,uBAAuB;IAC/B,OAAO,EAAE,eAAe,CAAA;IACxB,6EAA6E;IAC7E,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,WAAW,CAAC,EAAE,MAAM,CAAA;CACrB;AAED;;;GAGG;AACH,wBAAsB,iBAAiB,CAAC,EACtC,OAAO,EACP,UAAU,EACV,WAAW,GACZ,EAAE,uBAAuB;;;GAwBzB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/cookie.d.ts b/node_modules/next-auth/core/lib/cookie.d.ts
index e3fe7b4..de381d2 100644
--- a/node_modules/next-auth/core/lib/cookie.d.ts
+++ b/node_modules/next-auth/core/lib/cookie.d.ts
@@ -3,8 +3,8 @@ import type { CookieOption, LoggerInstance, SessionStrategy } from "../types";
 import type { NextRequest } from "next/server";
 import type { NextApiRequest } from "next";
 /** Stringified form of `JWT`. Extract the content with `jwt.decode` */
-export type JWTString = string;
-export type SetCookieOptions = Partial<CookieOption["options"]> & {
+export declare type JWTString = string;
+export declare type SetCookieOptions = Partial<CookieOption["options"]> & {
     expires?: Date | string;
     encode?: (val: unknown) => string;
 };
@@ -12,7 +12,7 @@ export type SetCookieOptions = Partial<CookieOption["options"]> & {
  * If `options.session.strategy` is set to `jwt`, this is a stringified `JWT`.
  * In case of `strategy: "database"`, this is the `sessionToken` of the session in the database.
  */
-export type SessionToken<T extends SessionStrategy = "jwt"> = T extends "jwt" ? JWTString : string;
+export declare type SessionToken<T extends SessionStrategy = "jwt"> = T extends "jwt" ? JWTString : string;
 /**
  * Use secure cookies if the site uses HTTPS
  * This being conditional allows cookies to work non-HTTPS development URLs
@@ -43,4 +43,3 @@ export declare class SessionStore {
     /** Returns a list of cookies that should be cleaned. */
     clean(): Cookie[];
 }
-//# sourceMappingURL=cookie.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/cookie.d.ts.map b/node_modules/next-auth/core/lib/cookie.d.ts.map
deleted file mode 100644
index 32acbb3..0000000
--- a/node_modules/next-auth/core/lib/cookie.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"cookie.d.ts","sourceRoot":"","sources":["../../src/core/lib/cookie.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,OAAO,CAAA;AAC3C,OAAO,KAAK,EAAE,YAAY,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAC7E,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,aAAa,CAAA;AAC9C,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,MAAM,CAAA;AA0B1C,uEAAuE;AACvE,MAAM,MAAM,SAAS,GAAG,MAAM,CAAA;AAE9B,MAAM,MAAM,gBAAgB,GAAG,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG;IAChE,OAAO,CAAC,EAAE,IAAI,GAAG,MAAM,CAAA;IACvB,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,OAAO,KAAK,MAAM,CAAA;CAClC,CAAA;AAED;;;GAGG;AACH,MAAM,MAAM,YAAY,CAAC,CAAC,SAAS,eAAe,GAAG,KAAK,IAAI,CAAC,SAAS,KAAK,GACzE,SAAS,GACT,MAAM,CAAA;AAEV;;;;;;;;;GASG;AACH,wBAAgB,cAAc,CAAC,gBAAgB,EAAE,OAAO,GAAG,cAAc,CA+DxE;AAED,MAAM,WAAW,MAAO,SAAQ,YAAY;IAC1C,KAAK,EAAE,MAAM,CAAA;CACd;AAID,qBAAa,YAAY;;gBAMrB,MAAM,EAAE,YAAY,EACpB,GAAG,EAAE,OAAO,CAAC;QACX,OAAO,EAAE,WAAW,CAAC,SAAS,CAAC,GAAG,cAAc,CAAC,SAAS,CAAC,CAAA;QAC3D,OAAO,EAAE,WAAW,CAAC,SAAS,CAAC,GAAG,cAAc,CAAC,SAAS,CAAC,CAAA;KAC5D,CAAC,EACF,MAAM,EAAE,cAAc,GAAG,OAAO;IA0BlC,IAAI,KAAK,WAER;IA2CD;;;;OAIG;IACH,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,MAAM,EAAE;IAmBnE,wDAAwD;IACxD,KAAK,IAAI,MAAM,EAAE;CAGlB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/csrf-token.d.ts b/node_modules/next-auth/core/lib/csrf-token.d.ts
index 8777aad..3033957 100644
--- a/node_modules/next-auth/core/lib/csrf-token.d.ts
+++ b/node_modules/next-auth/core/lib/csrf-token.d.ts
@@ -29,4 +29,3 @@ export declare function createCSRFToken({ options, cookieValue, isPost, bodyValu
     csrfTokenVerified?: undefined;
 };
 export {};
-//# sourceMappingURL=csrf-token.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/csrf-token.d.ts.map b/node_modules/next-auth/core/lib/csrf-token.d.ts.map
deleted file mode 100644
index e966bf5..0000000
--- a/node_modules/next-auth/core/lib/csrf-token.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"csrf-token.d.ts","sourceRoot":"","sources":["../../src/core/lib/csrf-token.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAE/C,UAAU,qBAAqB;IAC7B,OAAO,EAAE,eAAe,CAAA;IACxB,WAAW,CAAC,EAAE,MAAM,CAAA;IACpB,MAAM,EAAE,OAAO,CAAA;IACf,SAAS,CAAC,EAAE,MAAM,CAAA;CACnB;AAED;;;;;;;;;;;;;GAaG;AACH,wBAAgB,eAAe,CAAC,EAC9B,OAAO,EACP,WAAW,EACX,MAAM,EACN,SAAS,GACV,EAAE,qBAAqB;;;;;;;;EAwBvB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/default-callbacks.d.ts b/node_modules/next-auth/core/lib/default-callbacks.d.ts
index 574c751..af1c0d3 100644
--- a/node_modules/next-auth/core/lib/default-callbacks.d.ts
+++ b/node_modules/next-auth/core/lib/default-callbacks.d.ts
@@ -1,3 +1,2 @@
 import { CallbacksOptions } from "../..";
 export declare const defaultCallbacks: CallbacksOptions;
-//# sourceMappingURL=default-callbacks.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/default-callbacks.d.ts.map b/node_modules/next-auth/core/lib/default-callbacks.d.ts.map
deleted file mode 100644
index 269c310..0000000
--- a/node_modules/next-auth/core/lib/default-callbacks.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"default-callbacks.d.ts","sourceRoot":"","sources":["../../src/core/lib/default-callbacks.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,OAAO,CAAA;AAExC,eAAO,MAAM,gBAAgB,EAAE,gBAe9B,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/email/getUserFromEmail.d.ts b/node_modules/next-auth/core/lib/email/getUserFromEmail.d.ts
index 1fa101a..846c3b4 100644
--- a/node_modules/next-auth/core/lib/email/getUserFromEmail.d.ts
+++ b/node_modules/next-auth/core/lib/email/getUserFromEmail.d.ts
@@ -8,4 +8,3 @@ export default function getAdapterUserFromEmail({ email, adapter, }: {
     email: string;
     adapter: InternalOptions<"email">["adapter"];
 }): Promise<AdapterUser>;
-//# sourceMappingURL=getUserFromEmail.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/email/getUserFromEmail.d.ts.map b/node_modules/next-auth/core/lib/email/getUserFromEmail.d.ts.map
deleted file mode 100644
index ac25cb9..0000000
--- a/node_modules/next-auth/core/lib/email/getUserFromEmail.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"getUserFromEmail.d.ts","sourceRoot":"","sources":["../../../src/core/lib/email/getUserFromEmail.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAA;AACpD,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,aAAa,CAAA;AAElD;;;GAGG;AACH,wBAA8B,uBAAuB,CAAC,EACpD,KAAK,EACL,OAAO,GACR,EAAE;IACD,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,eAAe,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAA;CAC7C,GAAG,OAAO,CAAC,WAAW,CAAC,CAMvB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/email/signin.d.ts b/node_modules/next-auth/core/lib/email/signin.d.ts
index 9788ee4..07fd6bc 100644
--- a/node_modules/next-auth/core/lib/email/signin.d.ts
+++ b/node_modules/next-auth/core/lib/email/signin.d.ts
@@ -4,4 +4,3 @@ import type { InternalOptions } from "../../types";
  * and sending it to the user's e-mail (with the help of a DB adapter)
  */
 export default function email(identifier: string, options: InternalOptions<"email">): Promise<string>;
-//# sourceMappingURL=signin.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/email/signin.d.ts.map b/node_modules/next-auth/core/lib/email/signin.d.ts.map
deleted file mode 100644
index 1297ca8..0000000
--- a/node_modules/next-auth/core/lib/email/signin.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"signin.d.ts","sourceRoot":"","sources":["../../../src/core/lib/email/signin.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,aAAa,CAAA;AAElD;;;GAGG;AACH,wBAA8B,KAAK,CACjC,UAAU,EAAE,MAAM,EAClB,OAAO,EAAE,eAAe,CAAC,OAAO,CAAC,GAChC,OAAO,CAAC,MAAM,CAAC,CAsCjB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/authorization-url.d.ts b/node_modules/next-auth/core/lib/oauth/authorization-url.d.ts
index c94775a..c5504ae 100644
--- a/node_modules/next-auth/core/lib/oauth/authorization-url.d.ts
+++ b/node_modules/next-auth/core/lib/oauth/authorization-url.d.ts
@@ -17,4 +17,3 @@ export default function getAuthorizationUrl({ options, query, }: {
     redirect: string;
     cookies: Cookie[];
 }>;
-//# sourceMappingURL=authorization-url.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/authorization-url.d.ts.map b/node_modules/next-auth/core/lib/oauth/authorization-url.d.ts.map
deleted file mode 100644
index 5535c63..0000000
--- a/node_modules/next-auth/core/lib/oauth/authorization-url.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"authorization-url.d.ts","sourceRoot":"","sources":["../../../src/core/lib/oauth/authorization-url.ts"],"names":[],"mappings":"AAKA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,aAAa,CAAA;AAClD,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,OAAO,CAAA;AAC5C,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,WAAW,CAAA;AAEvC;;;;;GAKG;AACH,wBAA8B,mBAAmB,CAAC,EAChD,OAAO,EACP,KAAK,GACN,EAAE;IACD,OAAO,EAAE,eAAe,CAAC,OAAO,CAAC,CAAA;IACjC,KAAK,EAAE,eAAe,CAAC,OAAO,CAAC,CAAA;CAChC;;;;;;GAyCA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/authorization-url.js b/node_modules/next-auth/core/lib/oauth/authorization-url.js
index f3dcf9a..8f9f6fd 100644
--- a/node_modules/next-auth/core/lib/oauth/authorization-url.js
+++ b/node_modules/next-auth/core/lib/oauth/authorization-url.js
@@ -9,11 +9,11 @@ var _client = require("./client");
 
 var _clientLegacy = require("./client-legacy");
 
-var checks = _interopRequireWildcard(require("./checks"));
+var _stateHandler = require("./state-handler");
 
-function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
+var _nonceHandler = require("./nonce-handler");
 
-function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
+var _pkceHandler = require("./pkce-handler");
 
 async function getAuthorizationUrl({
   options,
@@ -70,9 +70,28 @@ async function getAuthorizationUrl({
   const client = await (0, _client.openidClient)(options);
   const authorizationParams = params;
   const cookies = [];
-  await checks.state.create(options, cookies, authorizationParams);
-  await checks.pkce.create(options, cookies, authorizationParams);
-  await checks.nonce.create(options, cookies, authorizationParams);
+  const state = await (0, _stateHandler.createState)(options);
+
+  if (state) {
+    authorizationParams.state = state.value;
+    cookies.push(state.cookie);
+  }
+
+  const nonce = await (0, _nonceHandler.createNonce)(options);
+
+  if (nonce) {
+    authorizationParams.nonce = nonce.value;
+    cookies.push(nonce.cookie);
+  }
+
+  const pkce = await (0, _pkceHandler.createPKCE)(options);
+
+  if (pkce) {
+    authorizationParams.code_challenge = pkce.code_challenge;
+    authorizationParams.code_challenge_method = pkce.code_challenge_method;
+    cookies.push(pkce.cookie);
+  }
+
   const url = client.authorizationUrl(authorizationParams);
   logger.debug("GET_AUTHORIZATION_URL", {
     url,
diff --git a/node_modules/next-auth/core/lib/oauth/callback.d.ts b/node_modules/next-auth/core/lib/oauth/callback.d.ts
index 6b467ce..2a23a1f 100644
--- a/node_modules/next-auth/core/lib/oauth/callback.d.ts
+++ b/node_modules/next-auth/core/lib/oauth/callback.d.ts
@@ -34,4 +34,3 @@ export interface GetProfileParams {
     provider: OAuthConfig<any>;
     logger: LoggerInstance;
 }
-//# sourceMappingURL=callback.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/callback.d.ts.map b/node_modules/next-auth/core/lib/oauth/callback.d.ts.map
deleted file mode 100644
index 0f33d2f..0000000
--- a/node_modules/next-auth/core/lib/oauth/callback.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"callback.d.ts","sourceRoot":"","sources":["../../../src/core/lib/oauth/callback.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAA;AAOxC,OAAO,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,UAAU,CAAA;AACvD,OAAO,KAAK,EAAe,WAAW,EAAE,MAAM,oBAAoB,CAAA;AAClE,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,aAAa,CAAA;AAClD,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,OAAO,CAAA;AAC5C,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,WAAW,CAAA;AAEvC,wBAA8B,aAAa,CAAC,MAAM,EAAE;IAClD,OAAO,EAAE,eAAe,CAAC,OAAO,CAAC,CAAA;IACjC,KAAK,EAAE,eAAe,CAAC,OAAO,CAAC,CAAA;IAC/B,IAAI,EAAE,eAAe,CAAC,MAAM,CAAC,CAAA;IAC7B,MAAM,EAAE,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAA;IAC3C,OAAO,EAAE,eAAe,CAAC,SAAS,CAAC,CAAA;CACpC;;;;;;;;;;;;;;;;;GAkHA;AAED,MAAM,WAAW,gBAAgB;IAC/B,OAAO,EAAE,OAAO,CAAA;IAChB,MAAM,EAAE,QAAQ,CAAA;IAChB,QAAQ,EAAE,WAAW,CAAC,GAAG,CAAC,CAAA;IAC1B,MAAM,EAAE,cAAc,CAAA;CACvB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/callback.js b/node_modules/next-auth/core/lib/oauth/callback.js
index 78191ac..fa0dba9 100644
--- a/node_modules/next-auth/core/lib/oauth/callback.js
+++ b/node_modules/next-auth/core/lib/oauth/callback.js
@@ -11,13 +11,13 @@ var _client = require("./client");
 
 var _clientLegacy = require("./client-legacy");
 
-var _checks = _interopRequireWildcard(require("./checks"));
+var _stateHandler = require("./state-handler");
 
-var _errors = require("../../errors");
+var _pkceHandler = require("./pkce-handler");
 
-function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
+var _nonceHandler = require("./nonce-handler");
 
-function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
+var _errors = require("../../errors");
 
 async function oAuthCallback(params) {
   var _body$error, _provider$version;
@@ -86,9 +86,29 @@ async function oAuthCallback(params) {
     let tokens;
     const checks = {};
     const resCookies = [];
-    await _checks.state.use(cookies, resCookies, options, checks);
-    await _checks.pkce.use(cookies, resCookies, options, checks);
-    await _checks.nonce.use(cookies, resCookies, options, checks);
+    const state = await (0, _stateHandler.useState)(cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.state.name], options);
+
+    if (state) {
+      checks.state = state.value;
+      resCookies.push(state.cookie);
+    }
+
+    const nonce = await (0, _nonceHandler.useNonce)(cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.nonce.name], options);
+
+    if (nonce && provider.idToken) {
+      ;
+      checks.nonce = nonce.value;
+      resCookies.push(nonce.cookie);
+    }
+
+    const codeVerifier = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.pkceCodeVerifier.name];
+    const pkce = await (0, _pkceHandler.usePKCECodeVerifier)(codeVerifier, options);
+
+    if (pkce) {
+      checks.code_verifier = pkce.codeVerifier;
+      resCookies.push(pkce.cookie);
+    }
+
     const params = { ...client.callbackParams({
         url: `http://n?${new URLSearchParams(query)}`,
         body,
diff --git a/node_modules/next-auth/core/lib/oauth/checks.d.ts b/node_modules/next-auth/core/lib/oauth/checks.d.ts
deleted file mode 100644
index 8659b13..0000000
--- a/node_modules/next-auth/core/lib/oauth/checks.d.ts
+++ /dev/null
@@ -1,42 +0,0 @@
-import { AuthorizationParameters, OpenIDCallbackChecks } from "openid-client";
-import type { RequestInternal } from "../..";
-import type { OAuthChecks } from "../../../providers";
-import type { CookiesOptions, InternalOptions } from "../../types";
-import type { Cookie } from "../cookie";
-/** Returns a signed cookie. */
-export declare function signCookie(type: keyof CookiesOptions, value: string, maxAge: number, options: InternalOptions<"oauth">): Promise<Cookie>;
-export declare const PKCE_CODE_CHALLENGE_METHOD = "S256";
-export declare const pkce: {
-    create(options: InternalOptions<"oauth">, cookies: Cookie[], resParams: AuthorizationParameters): Promise<void>;
-    /**
-     * Returns code_verifier if the provider is configured to use PKCE,
-     * and clears the container cookie afterwards.
-     * An error is thrown if the code_verifier is missing or invalid.
-     * @see https://www.rfc-editor.org/rfc/rfc7636
-     * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#pkce
-     */
-    use(cookies: RequestInternal["cookies"], resCookies: Cookie[], options: InternalOptions<"oauth">, checks: OAuthChecks): Promise<string | undefined>;
-};
-export declare const state: {
-    create(options: InternalOptions<"oauth">, cookies: Cookie[], resParams: AuthorizationParameters): Promise<void>;
-    /**
-     * Returns state if the provider is configured to use state,
-     * and clears the container cookie afterwards.
-     * An error is thrown if the state is missing or invalid.
-     * @see https://www.rfc-editor.org/rfc/rfc6749#section-10.12
-     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1
-     */
-    use(cookies: RequestInternal["cookies"], resCookies: Cookie[], options: InternalOptions<"oauth">, checks: OAuthChecks): Promise<void>;
-};
-export declare const nonce: {
-    create(options: InternalOptions<"oauth">, cookies: Cookie[], resParams: AuthorizationParameters): Promise<void>;
-    /**
-     * Returns nonce if the provider is configured to use nonce,
-     * and clears the container cookie afterwards.
-     * An error is thrown if the nonce is missing or invalid.
-     * @see https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes
-     * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#nonce
-     */
-    use(cookies: RequestInternal["cookies"], resCookies: Cookie[], options: InternalOptions<"oauth">, checks: OpenIDCallbackChecks): Promise<string | undefined>;
-};
-//# sourceMappingURL=checks.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/checks.d.ts.map b/node_modules/next-auth/core/lib/oauth/checks.d.ts.map
deleted file mode 100644
index 06c474e..0000000
--- a/node_modules/next-auth/core/lib/oauth/checks.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"checks.d.ts","sourceRoot":"","sources":["../../../src/core/lib/oauth/checks.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,uBAAuB,EAEvB,oBAAoB,EACrB,MAAM,eAAe,CAAA;AAGtB,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,OAAO,CAAA;AAC5C,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAA;AACrD,OAAO,KAAK,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,aAAa,CAAA;AAClE,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,WAAW,CAAA;AAEvC,+BAA+B;AAC/B,wBAAsB,UAAU,CAC9B,IAAI,EAAE,MAAM,cAAc,EAC1B,KAAK,EAAE,MAAM,EACb,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,eAAe,CAAC,OAAO,CAAC,GAChC,OAAO,CAAC,MAAM,CAAC,CAYjB;AAGD,eAAO,MAAM,0BAA0B,SAAS,CAAA;AAChD,eAAO,MAAM,IAAI;oBAEJ,gBAAgB,OAAO,CAAC,WACxB,MAAM,EAAE,aACN,uBAAuB;IAepC;;;;;;OAMG;iBAEQ,eAAe,CAAC,SAAS,CAAC,cACvB,MAAM,EAAE,WACX,gBAAgB,OAAO,CAAC,UACzB,WAAW,GAClB,QAAQ,MAAM,GAAG,SAAS,CAAC;CAwB/B,CAAA;AAGD,eAAO,MAAM,KAAK;oBAEL,gBAAgB,OAAO,CAAC,WACxB,MAAM,EAAE,aACN,uBAAuB;IAQpC;;;;;;OAMG;iBAEQ,eAAe,CAAC,SAAS,CAAC,cACvB,MAAM,EAAE,WACX,gBAAgB,OAAO,CAAC,UACzB,WAAW;CAoBtB,CAAA;AAGD,eAAO,MAAM,KAAK;oBAEL,gBAAgB,OAAO,CAAC,WACxB,MAAM,EAAE,aACN,uBAAuB;IAQpC;;;;;;OAMG;iBAEQ,eAAe,CAAC,SAAS,CAAC,cACvB,MAAM,EAAE,WACX,gBAAgB,OAAO,CAAC,UACzB,oBAAoB,GAC3B,QAAQ,MAAM,GAAG,SAAS,CAAC;CAkB/B,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/checks.js b/node_modules/next-auth/core/lib/oauth/checks.js
deleted file mode 100644
index 70fa576..0000000
--- a/node_modules/next-auth/core/lib/oauth/checks.js
+++ /dev/null
@@ -1,155 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.pkce = exports.nonce = exports.PKCE_CODE_CHALLENGE_METHOD = void 0;
-exports.signCookie = signCookie;
-exports.state = void 0;
-
-var _openidClient = require("openid-client");
-
-var jwt = _interopRequireWildcard(require("../../../jwt"));
-
-function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
-
-function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
-
-async function signCookie(type, value, maxAge, options) {
-  const {
-    cookies,
-    logger
-  } = options;
-  logger.debug(`CREATE_${type.toUpperCase()}`, {
-    value,
-    maxAge
-  });
-  const expires = new Date();
-  expires.setTime(expires.getTime() + maxAge * 1000);
-  return {
-    name: cookies[type].name,
-    value: await jwt.encode({ ...options.jwt,
-      maxAge,
-      token: {
-        value
-      }
-    }),
-    options: { ...cookies[type].options,
-      expires
-    }
-  };
-}
-
-const PKCE_MAX_AGE = 60 * 15;
-const PKCE_CODE_CHALLENGE_METHOD = "S256";
-exports.PKCE_CODE_CHALLENGE_METHOD = PKCE_CODE_CHALLENGE_METHOD;
-const pkce = {
-  async create(options, cookies, resParams) {
-    var _options$provider, _options$provider$che, _options$cookies$pkce;
-
-    if (!((_options$provider = options.provider) !== null && _options$provider !== void 0 && (_options$provider$che = _options$provider.checks) !== null && _options$provider$che !== void 0 && _options$provider$che.includes("pkce"))) return;
-
-    const code_verifier = _openidClient.generators.codeVerifier();
-
-    const value = _openidClient.generators.codeChallenge(code_verifier);
-
-    resParams.code_challenge = value;
-    resParams.code_challenge_method = PKCE_CODE_CHALLENGE_METHOD;
-    const maxAge = (_options$cookies$pkce = options.cookies.pkceCodeVerifier.options.maxAge) !== null && _options$cookies$pkce !== void 0 ? _options$cookies$pkce : PKCE_MAX_AGE;
-    cookies.push(await signCookie("pkceCodeVerifier", code_verifier, maxAge, options));
-  },
-
-  async use(cookies, resCookies, options, checks) {
-    var _options$provider2, _options$provider2$ch;
-
-    if (!((_options$provider2 = options.provider) !== null && _options$provider2 !== void 0 && (_options$provider2$ch = _options$provider2.checks) !== null && _options$provider2$ch !== void 0 && _options$provider2$ch.includes("pkce"))) return;
-    const codeVerifier = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.pkceCodeVerifier.name];
-    if (!codeVerifier) throw new TypeError("PKCE code_verifier cookie was missing.");
-    const value = await jwt.decode({ ...options.jwt,
-      token: codeVerifier
-    });
-    if (!(value !== null && value !== void 0 && value.value)) throw new TypeError("PKCE code_verifier value could not be parsed.");
-    resCookies.push({
-      name: options.cookies.pkceCodeVerifier.name,
-      value: "",
-      options: { ...options.cookies.pkceCodeVerifier.options,
-        maxAge: 0
-      }
-    });
-    checks.code_verifier = value.value;
-  }
-
-};
-exports.pkce = pkce;
-const STATE_MAX_AGE = 60 * 15;
-const state = {
-  async create(options, cookies, resParams) {
-    var _options$provider$che2, _options$cookies$stat;
-
-    if (!((_options$provider$che2 = options.provider.checks) !== null && _options$provider$che2 !== void 0 && _options$provider$che2.includes("state"))) return;
-
-    const value = _openidClient.generators.state();
-
-    resParams.state = value;
-    const maxAge = (_options$cookies$stat = options.cookies.state.options.maxAge) !== null && _options$cookies$stat !== void 0 ? _options$cookies$stat : STATE_MAX_AGE;
-    cookies.push(await signCookie("state", value, maxAge, options));
-  },
-
-  async use(cookies, resCookies, options, checks) {
-    var _options$provider$che3;
-
-    if (!((_options$provider$che3 = options.provider.checks) !== null && _options$provider$che3 !== void 0 && _options$provider$che3.includes("state"))) return;
-    const state = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.state.name];
-    if (!state) throw new TypeError("State cookie was missing.");
-    const value = await jwt.decode({ ...options.jwt,
-      token: state
-    });
-    if (!(value !== null && value !== void 0 && value.value)) throw new TypeError("State value could not be parsed.");
-    resCookies.push({
-      name: options.cookies.state.name,
-      value: "",
-      options: { ...options.cookies.state.options,
-        maxAge: 0
-      }
-    });
-    checks.state = value.value;
-  }
-
-};
-exports.state = state;
-const NONCE_MAX_AGE = 60 * 15;
-const nonce = {
-  async create(options, cookies, resParams) {
-    var _options$provider$che4, _options$cookies$nonc;
-
-    if (!((_options$provider$che4 = options.provider.checks) !== null && _options$provider$che4 !== void 0 && _options$provider$che4.includes("nonce"))) return;
-
-    const value = _openidClient.generators.nonce();
-
-    resParams.nonce = value;
-    const maxAge = (_options$cookies$nonc = options.cookies.nonce.options.maxAge) !== null && _options$cookies$nonc !== void 0 ? _options$cookies$nonc : NONCE_MAX_AGE;
-    cookies.push(await signCookie("nonce", value, maxAge, options));
-  },
-
-  async use(cookies, resCookies, options, checks) {
-    var _options$provider3, _options$provider3$ch;
-
-    if (!((_options$provider3 = options.provider) !== null && _options$provider3 !== void 0 && (_options$provider3$ch = _options$provider3.checks) !== null && _options$provider3$ch !== void 0 && _options$provider3$ch.includes("nonce"))) return;
-    const nonce = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.nonce.name];
-    if (!nonce) throw new TypeError("Nonce cookie was missing.");
-    const value = await jwt.decode({ ...options.jwt,
-      token: nonce
-    });
-    if (!(value !== null && value !== void 0 && value.value)) throw new TypeError("Nonce value could not be parsed.");
-    resCookies.push({
-      name: options.cookies.nonce.name,
-      value: "",
-      options: { ...options.cookies.nonce.options,
-        maxAge: 0
-      }
-    });
-    checks.nonce = value.value;
-  }
-
-};
-exports.nonce = nonce;
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/client-legacy.d.ts b/node_modules/next-auth/core/lib/oauth/client-legacy.d.ts
index 8dc787d..d611049 100644
--- a/node_modules/next-auth/core/lib/oauth/client-legacy.d.ts
+++ b/node_modules/next-auth/core/lib/oauth/client-legacy.d.ts
@@ -5,4 +5,3 @@ import type { InternalOptions } from "../../types";
  */
 export declare function oAuth1Client(options: InternalOptions<"oauth">): OAuth;
 export declare const oAuth1TokenStore: Map<any, any>;
-//# sourceMappingURL=client-legacy.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/client-legacy.d.ts.map b/node_modules/next-auth/core/lib/oauth/client-legacy.d.ts.map
deleted file mode 100644
index 4bab25f..0000000
--- a/node_modules/next-auth/core/lib/oauth/client-legacy.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"client-legacy.d.ts","sourceRoot":"","sources":["../../../src/core/lib/oauth/client-legacy.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,KAAK,EAAE,MAAM,OAAO,CAAA;AAC7B,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,aAAa,CAAA;AAElD;;GAEG;AACH,wBAAgB,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,OAAO,CAAC,SA6D7D;AAED,eAAO,MAAM,gBAAgB,eAAY,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/client.d.ts b/node_modules/next-auth/core/lib/oauth/client.d.ts
index d669fb4..74ff66c 100644
--- a/node_modules/next-auth/core/lib/oauth/client.d.ts
+++ b/node_modules/next-auth/core/lib/oauth/client.d.ts
@@ -8,4 +8,3 @@ import type { InternalOptions } from "../../types";
  * Client supporting OAuth 2.x and OIDC
  */
 export declare function openidClient(options: InternalOptions<"oauth">): Promise<Client>;
-//# sourceMappingURL=client.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/client.d.ts.map b/node_modules/next-auth/core/lib/oauth/client.d.ts.map
deleted file mode 100644
index 03aa3a5..0000000
--- a/node_modules/next-auth/core/lib/oauth/client.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"client.d.ts","sourceRoot":"","sources":["../../../src/core/lib/oauth/client.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAA;AAC3C,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,aAAa,CAAA;AAElD;;;;;;GAMG;AACH,wBAAsB,YAAY,CAChC,OAAO,EAAE,eAAe,CAAC,OAAO,CAAC,GAChC,OAAO,CAAC,MAAM,CAAC,CAkCjB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/client.js b/node_modules/next-auth/core/lib/oauth/client.js
index c2f0d40..7943303 100644
--- a/node_modules/next-auth/core/lib/oauth/client.js
+++ b/node_modules/next-auth/core/lib/oauth/client.js
@@ -21,8 +21,7 @@ async function openidClient(options) {
       issuer: provider.issuer,
       authorization_endpoint: (_provider$authorizati = provider.authorization) === null || _provider$authorizati === void 0 ? void 0 : _provider$authorizati.url,
       token_endpoint: (_provider$token = provider.token) === null || _provider$token === void 0 ? void 0 : _provider$token.url,
-      userinfo_endpoint: (_provider$userinfo = provider.userinfo) === null || _provider$userinfo === void 0 ? void 0 : _provider$userinfo.url,
-      jwks_uri: provider.jwks_endpoint
+      userinfo_endpoint: (_provider$userinfo = provider.userinfo) === null || _provider$userinfo === void 0 ? void 0 : _provider$userinfo.url
     });
   }
 
diff --git a/node_modules/next-auth/core/lib/oauth/nonce-handler.d.ts b/node_modules/next-auth/core/lib/oauth/nonce-handler.d.ts
new file mode 100644
index 0000000..730034c
--- /dev/null
+++ b/node_modules/next-auth/core/lib/oauth/nonce-handler.d.ts
@@ -0,0 +1,17 @@
+import type { InternalOptions } from "../../types";
+import type { Cookie } from "../cookie";
+/**
+ * Returns nonce if the provider supports it
+ * and saves it in a cookie */
+export declare function createNonce(options: InternalOptions<"oauth">): Promise<undefined | {
+    value: string;
+    cookie: Cookie;
+}>;
+/**
+ * Returns nonce from if the provider supports nonce,
+ * and clears the container cookie afterwards.
+ */
+export declare function useNonce(nonce: string | undefined, options: InternalOptions<"oauth">): Promise<{
+    value: string;
+    cookie: Cookie;
+} | undefined>;
diff --git a/node_modules/next-auth/core/lib/oauth/nonce-handler.js b/node_modules/next-auth/core/lib/oauth/nonce-handler.js
new file mode 100644
index 0000000..e279db9
--- /dev/null
+++ b/node_modules/next-auth/core/lib/oauth/nonce-handler.js
@@ -0,0 +1,83 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.createNonce = createNonce;
+exports.useNonce = useNonce;
+
+var jwt = _interopRequireWildcard(require("../../../jwt"));
+
+var _openidClient = require("openid-client");
+
+function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
+
+function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
+
+const NONCE_MAX_AGE = 60 * 15;
+
+async function createNonce(options) {
+  var _provider$checks;
+
+  const {
+    cookies,
+    logger,
+    provider
+  } = options;
+
+  if (!((_provider$checks = provider.checks) !== null && _provider$checks !== void 0 && _provider$checks.includes("nonce"))) {
+    return;
+  }
+
+  const nonce = _openidClient.generators.nonce();
+
+  const expires = new Date();
+  expires.setTime(expires.getTime() + NONCE_MAX_AGE * 1000);
+  const encryptedNonce = await jwt.encode({ ...options.jwt,
+    maxAge: NONCE_MAX_AGE,
+    token: {
+      nonce
+    }
+  });
+  logger.debug("CREATE_ENCRYPTED_NONCE", {
+    nonce,
+    maxAge: NONCE_MAX_AGE
+  });
+  return {
+    cookie: {
+      name: cookies.nonce.name,
+      value: encryptedNonce,
+      options: { ...cookies.nonce.options,
+        expires
+      }
+    },
+    value: nonce
+  };
+}
+
+async function useNonce(nonce, options) {
+  var _provider$checks2, _value$nonce;
+
+  const {
+    cookies,
+    provider
+  } = options;
+
+  if (!(provider !== null && provider !== void 0 && (_provider$checks2 = provider.checks) !== null && _provider$checks2 !== void 0 && _provider$checks2.includes("nonce")) || !nonce) {
+    return;
+  }
+
+  const value = await jwt.decode({ ...options.jwt,
+    token: nonce
+  });
+  return {
+    value: (_value$nonce = value === null || value === void 0 ? void 0 : value.nonce) !== null && _value$nonce !== void 0 ? _value$nonce : undefined,
+    cookie: {
+      name: cookies.nonce.name,
+      value: "",
+      options: { ...cookies.nonce.options,
+        maxAge: 0
+      }
+    }
+  };
+}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/pkce-handler.d.ts b/node_modules/next-auth/core/lib/oauth/pkce-handler.d.ts
new file mode 100644
index 0000000..308cd65
--- /dev/null
+++ b/node_modules/next-auth/core/lib/oauth/pkce-handler.d.ts
@@ -0,0 +1,19 @@
+import type { InternalOptions } from "../../types";
+import type { Cookie } from "../cookie";
+/**
+ * Returns `code_challenge` and `code_challenge_method`
+ * and saves them in a cookie.
+ */
+export declare function createPKCE(options: InternalOptions<"oauth">): Promise<undefined | {
+    code_challenge: string;
+    code_challenge_method: "S256";
+    cookie: Cookie;
+}>;
+/**
+ * Returns code_verifier if provider uses PKCE,
+ * and clears the container cookie afterwards.
+ */
+export declare function usePKCECodeVerifier(codeVerifier: string | undefined, options: InternalOptions<"oauth">): Promise<{
+    codeVerifier: string;
+    cookie: Cookie;
+} | undefined>;
diff --git a/node_modules/next-auth/core/lib/oauth/pkce-handler.js b/node_modules/next-auth/core/lib/oauth/pkce-handler.js
new file mode 100644
index 0000000..d558360
--- /dev/null
+++ b/node_modules/next-auth/core/lib/oauth/pkce-handler.js
@@ -0,0 +1,90 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.createPKCE = createPKCE;
+exports.usePKCECodeVerifier = usePKCECodeVerifier;
+
+var jwt = _interopRequireWildcard(require("../../../jwt"));
+
+var _openidClient = require("openid-client");
+
+function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
+
+function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
+
+const PKCE_CODE_CHALLENGE_METHOD = "S256";
+const PKCE_MAX_AGE = 60 * 15;
+
+async function createPKCE(options) {
+  var _provider$checks, _cookies$pkceCodeVeri;
+
+  const {
+    cookies,
+    logger,
+    provider
+  } = options;
+
+  if (!((_provider$checks = provider.checks) !== null && _provider$checks !== void 0 && _provider$checks.includes("pkce"))) {
+    return;
+  }
+
+  const code_verifier = _openidClient.generators.codeVerifier();
+
+  const code_challenge = _openidClient.generators.codeChallenge(code_verifier);
+
+  const maxAge = (_cookies$pkceCodeVeri = cookies.pkceCodeVerifier.options.maxAge) !== null && _cookies$pkceCodeVeri !== void 0 ? _cookies$pkceCodeVeri : PKCE_MAX_AGE;
+  const expires = new Date();
+  expires.setTime(expires.getTime() + maxAge * 1000);
+  const encryptedCodeVerifier = await jwt.encode({ ...options.jwt,
+    maxAge,
+    token: {
+      code_verifier
+    }
+  });
+  logger.debug("CREATE_PKCE_CHALLENGE_VERIFIER", {
+    code_challenge,
+    code_challenge_method: PKCE_CODE_CHALLENGE_METHOD,
+    code_verifier,
+    maxAge
+  });
+  return {
+    code_challenge,
+    code_challenge_method: PKCE_CODE_CHALLENGE_METHOD,
+    cookie: {
+      name: cookies.pkceCodeVerifier.name,
+      value: encryptedCodeVerifier,
+      options: { ...cookies.pkceCodeVerifier.options,
+        expires
+      }
+    }
+  };
+}
+
+async function usePKCECodeVerifier(codeVerifier, options) {
+  var _provider$checks2, _pkce$code_verifier;
+
+  const {
+    cookies,
+    provider
+  } = options;
+
+  if (!(provider !== null && provider !== void 0 && (_provider$checks2 = provider.checks) !== null && _provider$checks2 !== void 0 && _provider$checks2.includes("pkce")) || !codeVerifier) {
+    return;
+  }
+
+  const pkce = await jwt.decode({ ...options.jwt,
+    token: codeVerifier
+  });
+  return {
+    codeVerifier: (_pkce$code_verifier = pkce === null || pkce === void 0 ? void 0 : pkce.code_verifier) !== null && _pkce$code_verifier !== void 0 ? _pkce$code_verifier : undefined,
+    cookie: {
+      name: cookies.pkceCodeVerifier.name,
+      value: "",
+      options: { ...cookies.pkceCodeVerifier.options,
+        maxAge: 0
+      }
+    }
+  };
+}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/oauth/state-handler.d.ts b/node_modules/next-auth/core/lib/oauth/state-handler.d.ts
new file mode 100644
index 0000000..5630cf0
--- /dev/null
+++ b/node_modules/next-auth/core/lib/oauth/state-handler.d.ts
@@ -0,0 +1,15 @@
+import type { InternalOptions } from "../../types";
+import type { Cookie } from "../cookie";
+/** Returns state if the provider supports it */
+export declare function createState(options: InternalOptions<"oauth">): Promise<{
+    cookie: Cookie;
+    value: string;
+} | undefined>;
+/**
+ * Returns state from if the provider supports states,
+ * and clears the container cookie afterwards.
+ */
+export declare function useState(state: string | undefined, options: InternalOptions<"oauth">): Promise<{
+    value: string;
+    cookie: Cookie;
+} | undefined>;
diff --git a/node_modules/next-auth/core/lib/oauth/state-handler.js b/node_modules/next-auth/core/lib/oauth/state-handler.js
new file mode 100644
index 0000000..7221b4f
--- /dev/null
+++ b/node_modules/next-auth/core/lib/oauth/state-handler.js
@@ -0,0 +1,77 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.createState = createState;
+exports.useState = useState;
+
+var _openidClient = require("openid-client");
+
+const STATE_MAX_AGE = 60 * 15;
+
+async function createState(options) {
+  var _provider$checks, _cookies$state$option;
+
+  const {
+    logger,
+    provider,
+    jwt,
+    cookies
+  } = options;
+
+  if (!((_provider$checks = provider.checks) !== null && _provider$checks !== void 0 && _provider$checks.includes("state"))) {
+    return;
+  }
+
+  const state = _openidClient.generators.state();
+
+  const maxAge = (_cookies$state$option = cookies.state.options.maxAge) !== null && _cookies$state$option !== void 0 ? _cookies$state$option : STATE_MAX_AGE;
+  const encodedState = await jwt.encode({ ...jwt,
+    maxAge,
+    token: {
+      state
+    }
+  });
+  logger.debug("CREATE_STATE", {
+    state,
+    maxAge
+  });
+  const expires = new Date();
+  expires.setTime(expires.getTime() + maxAge * 1000);
+  return {
+    value: state,
+    cookie: {
+      name: cookies.state.name,
+      value: encodedState,
+      options: { ...cookies.state.options,
+        expires
+      }
+    }
+  };
+}
+
+async function useState(state, options) {
+  var _provider$checks2, _value$state;
+
+  const {
+    cookies,
+    provider,
+    jwt
+  } = options;
+  if (!((_provider$checks2 = provider.checks) !== null && _provider$checks2 !== void 0 && _provider$checks2.includes("state"))) return;
+  if (!state) throw new Error("No state provided");
+  const value = await jwt.decode({ ...options.jwt,
+    token: state
+  });
+  return {
+    value: (_value$state = value === null || value === void 0 ? void 0 : value.state) !== null && _value$state !== void 0 ? _value$state : undefined,
+    cookie: {
+      name: cookies.state.name,
+      value: "",
+      options: { ...cookies.pkceCodeVerifier.options,
+        maxAge: 0
+      }
+    }
+  };
+}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/providers.d.ts b/node_modules/next-auth/core/lib/providers.d.ts
index 1123979..7854339 100644
--- a/node_modules/next-auth/core/lib/providers.d.ts
+++ b/node_modules/next-auth/core/lib/providers.d.ts
@@ -13,4 +13,3 @@ export default function parseProviders(params: {
     providers: InternalProvider[];
     provider?: InternalProvider;
 };
-//# sourceMappingURL=providers.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/providers.d.ts.map b/node_modules/next-auth/core/lib/providers.d.ts.map
deleted file mode 100644
index 71f2012..0000000
--- a/node_modules/next-auth/core/lib/providers.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"providers.d.ts","sourceRoot":"","sources":["../../src/core/lib/providers.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,gBAAgB,EAAuB,MAAM,UAAU,CAAA;AACrE,OAAO,KAAK,EAAe,QAAQ,EAAE,MAAM,iBAAiB,CAAA;AAC5D,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAA;AAExD;;;GAGG;AACH,MAAM,CAAC,OAAO,UAAU,cAAc,CAAC,MAAM,EAAE;IAC7C,SAAS,EAAE,QAAQ,EAAE,CAAA;IACrB,GAAG,EAAE,WAAW,CAAA;IAChB,UAAU,CAAC,EAAE,MAAM,CAAA;CACpB,GAAG;IACF,SAAS,EAAE,gBAAgB,EAAE,CAAA;IAC7B,QAAQ,CAAC,EAAE,gBAAgB,CAAA;CAC5B,CA4BA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/utils.d.ts b/node_modules/next-auth/core/lib/utils.d.ts
index 1b90555..90f543e 100644
--- a/node_modules/next-auth/core/lib/utils.d.ts
+++ b/node_modules/next-auth/core/lib/utils.d.ts
@@ -17,4 +17,3 @@ export declare function createSecret(params: {
     authOptions: AuthOptions;
     url: InternalUrl;
 }): string;
-//# sourceMappingURL=utils.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/lib/utils.d.ts.map b/node_modules/next-auth/core/lib/utils.d.ts.map
deleted file mode 100644
index adda165..0000000
--- a/node_modules/next-auth/core/lib/utils.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../src/core/lib/utils.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,OAAO,CAAA;AACxC,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAC/C,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAA;AAExD;;;;GAIG;AACH,wBAAgB,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,SAAa,QAEvD;AAED,wBAAgB,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,eAAe,CAAC,OAAO,CAAC,UAQzE;AAED;;;;qIAIqI;AACrI,wBAAgB,YAAY,CAAC,MAAM,EAAE;IACnC,WAAW,EAAE,WAAW,CAAA;IACxB,GAAG,EAAE,WAAW,CAAA;CACjB,UAUA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/pages/error.d.ts b/node_modules/next-auth/core/pages/error.d.ts
index 32b03d6..fd787f5 100644
--- a/node_modules/next-auth/core/pages/error.d.ts
+++ b/node_modules/next-auth/core/pages/error.d.ts
@@ -4,7 +4,7 @@ import { InternalUrl } from "../../utils/parse-url";
  * The following errors are passed as error query parameters to the default or overridden error page.
  *
  * [Documentation](https://next-auth.js.org/configuration/pages#error-page) */
-export type ErrorType = "default" | "configuration" | "accessdenied" | "verification";
+export declare type ErrorType = "default" | "configuration" | "accessdenied" | "verification";
 export interface ErrorProps {
     url?: InternalUrl;
     theme?: Theme;
@@ -15,4 +15,3 @@ export default function ErrorPage(props: ErrorProps): {
     status: any;
     html: JSX.Element;
 };
-//# sourceMappingURL=error.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/pages/error.d.ts.map b/node_modules/next-auth/core/pages/error.d.ts.map
deleted file mode 100644
index b2fb011..0000000
--- a/node_modules/next-auth/core/pages/error.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"error.d.ts","sourceRoot":"","sources":["../../src/core/pages/error.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,OAAO,CAAA;AAC7B,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAA;AAEnD;;;8EAG8E;AAC9E,MAAM,MAAM,SAAS,GACjB,SAAS,GACT,eAAe,GACf,cAAc,GACd,cAAc,CAAA;AAElB,MAAM,WAAW,UAAU;IACzB,GAAG,CAAC,EAAE,WAAW,CAAA;IACjB,KAAK,CAAC,EAAE,KAAK,CAAA;IACb,KAAK,CAAC,EAAE,SAAS,CAAA;CAClB;AASD,6BAA6B;AAC7B,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,KAAK,EAAE,UAAU;;;EAsFlD"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/pages/index.d.ts b/node_modules/next-auth/core/pages/index.d.ts
index 5e78505..560a5d2 100644
--- a/node_modules/next-auth/core/pages/index.d.ts
+++ b/node_modules/next-auth/core/pages/index.d.ts
@@ -2,7 +2,7 @@ import type { InternalOptions } from "../types";
 import type { RequestInternal, ResponseInternal } from "..";
 import type { Cookie } from "../lib/cookie";
 import type { ErrorType } from "./error";
-type RenderPageParams = {
+declare type RenderPageParams = {
     query?: RequestInternal["query"];
     cookies?: Cookie[];
 } & Partial<Pick<InternalOptions, "url" | "callbackUrl" | "csrfToken" | "providers" | "theme">>;
@@ -19,4 +19,3 @@ export default function renderPage(params: RenderPageParams): {
     }): ResponseInternal<any>;
 };
 export {};
-//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/pages/index.d.ts.map b/node_modules/next-auth/core/pages/index.d.ts.map
deleted file mode 100644
index ecd3fef..0000000
--- a/node_modules/next-auth/core/pages/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/core/pages/index.ts"],"names":[],"mappings":"AAOA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAC/C,OAAO,KAAK,EAAE,eAAe,EAAE,gBAAgB,EAAE,MAAM,IAAI,CAAA;AAC3D,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAA;AAC3C,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,SAAS,CAAA;AAExC,KAAK,gBAAgB,GAAG;IACtB,KAAK,CAAC,EAAE,eAAe,CAAC,OAAO,CAAC,CAAA;IAChC,OAAO,CAAC,EAAE,MAAM,EAAE,CAAA;CACnB,GAAG,OAAO,CACT,IAAI,CACF,eAAe,EACf,KAAK,GAAG,aAAa,GAAG,WAAW,GAAG,WAAW,GAAG,OAAO,CAC5D,CACF,CAAA;AAED;;;GAGG;AACH,MAAM,CAAC,OAAO,UAAU,UAAU,CAAC,MAAM,EAAE,gBAAgB;mBAexC,GAAG;oBAaF,GAAG;0BAWG,GAAG;kBAMX;QAAE,KAAK,CAAC,EAAE,SAAS,CAAA;KAAE;EAOtC"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/pages/signin.d.ts b/node_modules/next-auth/core/pages/signin.d.ts
index db74a36..40f5cd4 100644
--- a/node_modules/next-auth/core/pages/signin.d.ts
+++ b/node_modules/next-auth/core/pages/signin.d.ts
@@ -3,7 +3,7 @@ import type { InternalProvider, Theme } from "../types";
  * The following errors are passed as error query parameters to the default or overridden sign-in page.
  *
  * [Documentation](https://next-auth.js.org/configuration/pages#sign-in-page) */
-export type SignInErrorTypes = "Signin" | "OAuthSignin" | "OAuthCallback" | "OAuthCreateAccount" | "EmailCreateAccount" | "Callback" | "OAuthAccountNotLinked" | "EmailSignin" | "CredentialsSignin" | "SessionRequired" | "default";
+export declare type SignInErrorTypes = "Signin" | "OAuthSignin" | "OAuthCallback" | "OAuthCreateAccount" | "EmailCreateAccount" | "Callback" | "OAuthAccountNotLinked" | "EmailSignin" | "CredentialsSignin" | "SessionRequired" | "default";
 export interface SignInServerPageParams {
     csrfToken: string;
     providers: InternalProvider[];
@@ -13,4 +13,3 @@ export interface SignInServerPageParams {
     theme: Theme;
 }
 export default function SigninPage(props: SignInServerPageParams): JSX.Element;
-//# sourceMappingURL=signin.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/pages/signin.d.ts.map b/node_modules/next-auth/core/pages/signin.d.ts.map
deleted file mode 100644
index c39cab2..0000000
--- a/node_modules/next-auth/core/pages/signin.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"signin.d.ts","sourceRoot":"","sources":["../../src/core/pages/signin.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,MAAM,UAAU,CAAA;AAGvD;;;gFAGgF;AAChF,MAAM,MAAM,gBAAgB,GACxB,QAAQ,GACR,aAAa,GACb,eAAe,GACf,oBAAoB,GACpB,oBAAoB,GACpB,UAAU,GACV,uBAAuB,GACvB,aAAa,GACb,mBAAmB,GACnB,iBAAiB,GACjB,SAAS,CAAA;AAEb,MAAM,WAAW,sBAAsB;IACrC,SAAS,EAAE,MAAM,CAAA;IACjB,SAAS,EAAE,gBAAgB,EAAE,CAAA;IAC7B,WAAW,EAAE,MAAM,CAAA;IACnB,KAAK,EAAE,MAAM,CAAA;IACb,KAAK,EAAE,gBAAgB,CAAA;IACvB,KAAK,EAAE,KAAK,CAAA;CACb;AAED,MAAM,CAAC,OAAO,UAAU,UAAU,CAAC,KAAK,EAAE,sBAAsB,eAgM/D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/pages/signout.d.ts b/node_modules/next-auth/core/pages/signout.d.ts
index eaabf1b..b4591f8 100644
--- a/node_modules/next-auth/core/pages/signout.d.ts
+++ b/node_modules/next-auth/core/pages/signout.d.ts
@@ -6,4 +6,3 @@ export interface SignoutProps {
     theme: Theme;
 }
 export default function SignoutPage(props: SignoutProps): JSX.Element;
-//# sourceMappingURL=signout.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/pages/signout.d.ts.map b/node_modules/next-auth/core/pages/signout.d.ts.map
deleted file mode 100644
index 890a091..0000000
--- a/node_modules/next-auth/core/pages/signout.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"signout.d.ts","sourceRoot":"","sources":["../../src/core/pages/signout.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,OAAO,CAAA;AAC7B,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAA;AAEnD,MAAM,WAAW,YAAY;IAC3B,GAAG,EAAE,WAAW,CAAA;IAChB,SAAS,EAAE,MAAM,CAAA;IACjB,KAAK,EAAE,KAAK,CAAA;CACb;AAED,MAAM,CAAC,OAAO,UAAU,WAAW,CAAC,KAAK,EAAE,YAAY,eAsCtD"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/pages/verify-request.d.ts b/node_modules/next-auth/core/pages/verify-request.d.ts
index 91c04da..78771ad 100644
--- a/node_modules/next-auth/core/pages/verify-request.d.ts
+++ b/node_modules/next-auth/core/pages/verify-request.d.ts
@@ -6,4 +6,3 @@ interface VerifyRequestPageProps {
 }
 export default function VerifyRequestPage(props: VerifyRequestPageProps): JSX.Element;
 export {};
-//# sourceMappingURL=verify-request.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/pages/verify-request.d.ts.map b/node_modules/next-auth/core/pages/verify-request.d.ts.map
deleted file mode 100644
index 5f2b349..0000000
--- a/node_modules/next-auth/core/pages/verify-request.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"verify-request.d.ts","sourceRoot":"","sources":["../../src/core/pages/verify-request.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,OAAO,CAAA;AAC7B,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAA;AAEnD,UAAU,sBAAsB;IAC9B,GAAG,EAAE,WAAW,CAAA;IAChB,KAAK,EAAE,KAAK,CAAA;CACb;AAED,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAC,KAAK,EAAE,sBAAsB,eA4BtE"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/callback.d.ts b/node_modules/next-auth/core/routes/callback.d.ts
index b88e0f9..84aa8a9 100644
--- a/node_modules/next-auth/core/routes/callback.d.ts
+++ b/node_modules/next-auth/core/routes/callback.d.ts
@@ -11,4 +11,3 @@ export default function callback(params: {
     cookies: RequestInternal["cookies"];
     sessionStore: SessionStore;
 }): Promise<ResponseInternal>;
-//# sourceMappingURL=callback.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/callback.d.ts.map b/node_modules/next-auth/core/routes/callback.d.ts.map
deleted file mode 100644
index 93166a5..0000000
--- a/node_modules/next-auth/core/routes/callback.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"callback.d.ts","sourceRoot":"","sources":["../../src/core/routes/callback.ts"],"names":[],"mappings":"AAKA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAC/C,OAAO,KAAK,EAAE,eAAe,EAAE,gBAAgB,EAAE,MAAM,IAAI,CAAA;AAC3D,OAAO,KAAK,EAAU,YAAY,EAAE,MAAM,eAAe,CAAA;AAIzD,2CAA2C;AAC3C,wBAA8B,QAAQ,CAAC,MAAM,EAAE;IAC7C,OAAO,EAAE,eAAe,CAAA;IACxB,KAAK,EAAE,eAAe,CAAC,OAAO,CAAC,CAAA;IAC/B,MAAM,EAAE,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAA;IAC3C,IAAI,EAAE,eAAe,CAAC,MAAM,CAAC,CAAA;IAC7B,OAAO,EAAE,eAAe,CAAC,SAAS,CAAC,CAAA;IACnC,OAAO,EAAE,eAAe,CAAC,SAAS,CAAC,CAAA;IACnC,YAAY,EAAE,YAAY,CAAA;CAC3B,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAmZ5B"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/callback.js b/node_modules/next-auth/core/routes/callback.js
index d30a999..2696b2d 100644
--- a/node_modules/next-auth/core/routes/callback.js
+++ b/node_modules/next-auth/core/routes/callback.js
@@ -137,8 +137,7 @@ async function callback(params) {
             user,
             account,
             profile: OAuthProfile,
-            isNewUser,
-            trigger: isNewUser ? "signUp" : "signIn"
+            isNewUser
           });
           const newToken = await jwt.encode({ ...jwt,
             token
@@ -299,8 +298,7 @@ async function callback(params) {
           token: defaultToken,
           user,
           account,
-          isNewUser,
-          trigger: isNewUser ? "signUp" : "signIn"
+          isNewUser
         });
         const newToken = await jwt.encode({ ...jwt,
           token
@@ -426,8 +424,7 @@ async function callback(params) {
       token: defaultToken,
       user,
       account,
-      isNewUser: false,
-      trigger: "signIn"
+      isNewUser: false
     });
     const newToken = await jwt.encode({ ...jwt,
       token
diff --git a/node_modules/next-auth/core/routes/index.d.ts b/node_modules/next-auth/core/routes/index.d.ts
index 806b5d1..bcb2c51 100644
--- a/node_modules/next-auth/core/routes/index.d.ts
+++ b/node_modules/next-auth/core/routes/index.d.ts
@@ -3,4 +3,3 @@ export { default as signin } from './signin';
 export { default as signout } from './signout';
 export { default as session } from './session';
 export { default as providers } from './providers';
-//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/index.d.ts.map b/node_modules/next-auth/core/routes/index.d.ts.map
deleted file mode 100644
index c4a9757..0000000
--- a/node_modules/next-auth/core/routes/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/core/routes/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,IAAI,QAAQ,EAAE,MAAM,YAAY,CAAA;AAChD,OAAO,EAAE,OAAO,IAAI,MAAM,EAAE,MAAM,UAAU,CAAA;AAC5C,OAAO,EAAE,OAAO,IAAI,OAAO,EAAE,MAAM,WAAW,CAAA;AAC9C,OAAO,EAAE,OAAO,IAAI,OAAO,EAAE,MAAM,WAAW,CAAA;AAC9C,OAAO,EAAE,OAAO,IAAI,SAAS,EAAE,MAAM,aAAa,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/providers.d.ts b/node_modules/next-auth/core/routes/providers.d.ts
index de6b8ec..2bea4ce 100644
--- a/node_modules/next-auth/core/routes/providers.d.ts
+++ b/node_modules/next-auth/core/routes/providers.d.ts
@@ -13,4 +13,3 @@ export interface PublicProvider {
  * generate buttons for all providers when rendering client side.
  */
 export default function providers(providers: InternalProvider[]): ResponseInternal<Record<string, PublicProvider>>;
-//# sourceMappingURL=providers.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/providers.d.ts.map b/node_modules/next-auth/core/routes/providers.d.ts.map
deleted file mode 100644
index c3a6ada..0000000
--- a/node_modules/next-auth/core/routes/providers.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"providers.d.ts","sourceRoot":"","sources":["../../src/core/routes/providers.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,gBAAgB,EAAE,MAAM,IAAI,CAAA;AAC1C,OAAO,KAAK,EAAE,gBAAgB,EAAE,MAAM,UAAU,CAAA;AAEhD,MAAM,WAAW,cAAc;IAC7B,EAAE,EAAE,MAAM,CAAA;IACV,IAAI,EAAE,MAAM,CAAA;IACZ,IAAI,EAAE,MAAM,CAAA;IACZ,SAAS,EAAE,MAAM,CAAA;IACjB,WAAW,EAAE,MAAM,CAAA;CACpB;AAED;;;;GAIG;AACH,MAAM,CAAC,OAAO,UAAU,SAAS,CAC/B,SAAS,EAAE,gBAAgB,EAAE,GAC5B,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC,CAWlD"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/session.d.ts b/node_modules/next-auth/core/routes/session.d.ts
index 98ff49d..d8f1dfd 100644
--- a/node_modules/next-auth/core/routes/session.d.ts
+++ b/node_modules/next-auth/core/routes/session.d.ts
@@ -5,8 +5,6 @@ import type { SessionStore } from "../lib/cookie";
 interface SessionParams {
     options: InternalOptions;
     sessionStore: SessionStore;
-    isUpdate?: boolean;
-    newSession?: any;
 }
 /**
  * Return a session object (without any private fields)
@@ -14,4 +12,3 @@ interface SessionParams {
  */
 export default function session(params: SessionParams): Promise<ResponseInternal<Session | {}>>;
 export {};
-//# sourceMappingURL=session.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/session.d.ts.map b/node_modules/next-auth/core/routes/session.d.ts.map
deleted file mode 100644
index 8e27d43..0000000
--- a/node_modules/next-auth/core/routes/session.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"session.d.ts","sourceRoot":"","sources":["../../src/core/routes/session.ts"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAC/C,OAAO,KAAK,EAAE,gBAAgB,EAAE,MAAM,IAAI,CAAA;AAC1C,OAAO,KAAK,EAAE,OAAO,EAAE,MAAM,OAAO,CAAA;AACpC,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,eAAe,CAAA;AAEjD,UAAU,aAAa;IACrB,OAAO,EAAE,eAAe,CAAA;IACxB,YAAY,EAAE,YAAY,CAAA;IAC1B,QAAQ,CAAC,EAAE,OAAO,CAAA;IAClB,UAAU,CAAC,EAAE,GAAG,CAAA;CACjB;AAED;;;GAGG;AAEH,wBAA8B,OAAO,CACnC,MAAM,EAAE,aAAa,GACpB,OAAO,CAAC,gBAAgB,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAuJzC"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/session.js b/node_modules/next-auth/core/routes/session.js
index 430f538..bafe973 100644
--- a/node_modules/next-auth/core/routes/session.js
+++ b/node_modules/next-auth/core/routes/session.js
@@ -10,9 +10,7 @@ var _utils = require("../lib/utils");
 async function session(params) {
   const {
     options,
-    sessionStore,
-    newSession,
-    isUpdate
+    sessionStore
   } = params;
   const {
     adapter,
@@ -43,27 +41,23 @@ async function session(params) {
       const decodedToken = await jwt.decode({ ...jwt,
         token: sessionToken
       });
-      if (!decodedToken) throw new Error("JWT invalid");
-      const token = await callbacks.jwt({
-        token: decodedToken,
-        ...(isUpdate && {
-          trigger: "update"
-        }),
-        session: newSession
-      });
       const newExpires = (0, _utils.fromDate)(sessionMaxAge);
-      const updatedSession = await callbacks.session({
-        session: {
-          user: {
-            name: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.name,
-            email: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.email,
-            image: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.picture
-          },
-          expires: newExpires.toISOString()
+      const session = {
+        user: {
+          name: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.name,
+          email: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.email,
+          image: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.picture
         },
+        expires: newExpires.toISOString()
+      };
+      const token = await callbacks.jwt({
+        token: decodedToken
+      });
+      const newSession = await callbacks.session({
+        session,
         token
       });
-      response.body = updatedSession;
+      response.body = newSession;
       const newToken = await jwt.encode({ ...jwt,
         token,
         maxAge: options.session.maxAge
@@ -73,7 +67,7 @@ async function session(params) {
       });
       (_response$cookies = response.cookies) === null || _response$cookies === void 0 ? void 0 : _response$cookies.push(...sessionCookies);
       await ((_events$session = events.session) === null || _events$session === void 0 ? void 0 : _events$session.call(events, {
-        session: updatedSession,
+        session: newSession,
         token
       }));
     } catch (error) {
@@ -123,11 +117,7 @@ async function session(params) {
             },
             expires: session.expires.toISOString()
           },
-          user,
-          newSession,
-          ...(isUpdate ? {
-            trigger: "update"
-          } : {})
+          user
         });
         response.body = sessionPayload;
         (_response$cookies3 = response.cookies) === null || _response$cookies3 === void 0 ? void 0 : _response$cookies3.push({
diff --git a/node_modules/next-auth/core/routes/signin.d.ts b/node_modules/next-auth/core/routes/signin.d.ts
index 25baf13..274e37a 100644
--- a/node_modules/next-auth/core/routes/signin.d.ts
+++ b/node_modules/next-auth/core/routes/signin.d.ts
@@ -6,4 +6,3 @@ export default function signin(params: {
     query: RequestInternal["query"];
     body: RequestInternal["body"];
 }): Promise<ResponseInternal>;
-//# sourceMappingURL=signin.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/signin.d.ts.map b/node_modules/next-auth/core/routes/signin.d.ts.map
deleted file mode 100644
index 574bc93..0000000
--- a/node_modules/next-auth/core/routes/signin.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"signin.d.ts","sourceRoot":"","sources":["../../src/core/routes/signin.ts"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAE,eAAe,EAAE,gBAAgB,EAAE,MAAM,IAAI,CAAA;AAC3D,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAG/C,0CAA0C;AAC1C,wBAA8B,MAAM,CAAC,MAAM,EAAE;IAC3C,OAAO,EAAE,eAAe,CAAC,OAAO,GAAG,OAAO,CAAC,CAAA;IAC3C,KAAK,EAAE,eAAe,CAAC,OAAO,CAAC,CAAA;IAC/B,IAAI,EAAE,eAAe,CAAC,MAAM,CAAC,CAAA;CAC9B,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAuF5B"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/signout.d.ts b/node_modules/next-auth/core/routes/signout.d.ts
index 7cddc84..543b9c1 100644
--- a/node_modules/next-auth/core/routes/signout.d.ts
+++ b/node_modules/next-auth/core/routes/signout.d.ts
@@ -6,4 +6,3 @@ export default function signout(params: {
     options: InternalOptions;
     sessionStore: SessionStore;
 }): Promise<ResponseInternal>;
-//# sourceMappingURL=signout.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/core/routes/signout.d.ts.map b/node_modules/next-auth/core/routes/signout.d.ts.map
deleted file mode 100644
index b8492cc..0000000
--- a/node_modules/next-auth/core/routes/signout.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"signout.d.ts","sourceRoot":"","sources":["../../src/core/routes/signout.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAC/C,OAAO,KAAK,EAAE,gBAAgB,EAAE,MAAM,IAAI,CAAA;AAC1C,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,eAAe,CAAA;AAEjD,2CAA2C;AAC3C,wBAA8B,OAAO,CAAC,MAAM,EAAE;IAC5C,OAAO,EAAE,eAAe,CAAA;IACxB,YAAY,EAAE,YAAY,CAAA;CAC3B,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAmC5B"}
\ No newline at end of file
diff --git a/node_modules/next-auth/core/types.d.ts b/node_modules/next-auth/core/types.d.ts
index de0d9eb..a660989 100644
--- a/node_modules/next-auth/core/types.d.ts
+++ b/node_modules/next-auth/core/types.d.ts
@@ -4,7 +4,7 @@ import type { TokenSetParameters } from "openid-client";
 import type { JWT, JWTOptions } from "../jwt";
 import type { LoggerInstance } from "../utils/logger";
 import type { CookieSerializeOptions } from "cookie";
-export type Awaitable<T> = T | PromiseLike<T>;
+export declare type Awaitable<T> = T | PromiseLike<T>;
 export type { LoggerInstance };
 /**
  * Configure your NextAuth instance
@@ -207,7 +207,7 @@ export interface Theme {
  * Some of them are available with different casing,
  * but they refer to the same value.
  */
-export type TokenSet = TokenSetParameters;
+export declare type TokenSet = TokenSetParameters;
 /**
  * Usually contains information about the provider being used
  * and also extends `TokenSet`, which is different tokens returned by OAuth Providers.
@@ -296,20 +296,9 @@ export interface CallbacksOptions<P = Profile, A = Account> {
      */
     session: (params: {
         session: Session;
-        /** Available when {@link SessionOptions.strategy} is set to `"jwt"` */
+        user: User | AdapterUser;
         token: JWT;
-        /** Available when {@link SessionOptions.strategy} is set to `"database"`. */
-        user: AdapterUser;
-    } & {
-        /**
-         * Available when using {@link SessionOptions.strategy} `"database"`, this is the data
-         * sent from the client via the [`useSession().update`](https://next-auth.js.org/getting-started/client#update-session) method.
-         *
-         * ⚠ Note, you should validate this data before using it.
-         */
-        newSession: any;
-        trigger: "update";
-    }) => Awaitable<Session | DefaultSession>;
+    }) => Awaitable<Session>;
     /**
      * This callback is called whenever a JSON Web Token is created (i.e. at sign in)
      * or updated (i.e whenever a session is accessed in the client).
@@ -317,57 +306,17 @@ export interface CallbacksOptions<P = Profile, A = Account> {
      * where you can control what should be returned to the client.
      * Anything else will be kept from your front-end.
      *
-     * The JWT is encrypted by default.
+     * ⚠ By default the JWT is signed, but not encrypted.
      *
      * [Documentation](https://next-auth.js.org/configuration/callbacks#jwt-callback) |
      * [`session` callback](https://next-auth.js.org/configuration/callbacks#session-callback)
      */
     jwt: (params: {
-        /**
-         * When `trigger` is `"signIn"` or `"signUp"`, it will be a subset of {@link JWT},
-         * `name`, `email` and `picture` will be included.
-         *
-         * Otherwise, it will be the full {@link JWT} for subsequent calls.
-         */
         token: JWT;
-        /**
-         * Either the result of the {@link OAuthConfig.profile} or the {@link CredentialsConfig.authorize} callback.
-         * @note available when `trigger` is `"signIn"` or `"signUp"`.
-         *
-         * Resources:
-         * - [Credentials Provider](https://next-auth.js.org/providers/credentials)
-         * - [User database model](https://authjs.dev/reference/adapters#user)
-         */
-        user: User | AdapterUser;
-        /**
-         * Contains information about the provider that was used to sign in.
-         * Also includes {@link TokenSet}
-         * @note available when `trigger` is `"signIn"` or `"signUp"`
-         */
-        account: A | null;
-        /**
-         * The OAuth profile returned from your provider.
-         * (In case of OIDC it will be the decoded ID Token or /userinfo response)
-         * @note available when `trigger` is `"signIn"`.
-         */
+        user?: User | AdapterUser;
+        account?: A | null;
         profile?: P;
-        /**
-         * Check why was the jwt callback invoked. Possible reasons are:
-         * - user sign-in: First time the callback is invoked, `user`, `profile` and `account` will be present.
-         * - user sign-up: a user is created for the first time in the database (when {@link SessionOptions.strategy} is set to `"database"`})
-         * - update event: Triggered by the [`useSession().update`](https://next-auth.js.org/getting-started/client#update-session) method.
-         * In case of the latter, `trigger` will be `undefined`.
-         */
-        trigger?: "signIn" | "signUp" | "update";
-        /** @deprecated use `trigger === "signUp"` instead */
         isNewUser?: boolean;
-        /**
-         * When using {@link SessionOptions.strategy} `"jwt"`, this is the data
-         * sent from the client via the [`useSession().update`](https://next-auth.js.org/getting-started/client#update-session) method.
-         *
-         * ⚠ Note, you should validate this data before using it.
-         */
-        session?: any;
     }) => Awaitable<JWT>;
 }
 /** [Documentation](https://next-auth.js.org/configuration/options#cookies) */
@@ -434,7 +383,7 @@ export interface EventCallbacks {
         token: JWT;
     }) => Awaitable<void>;
 }
-export type EventType = keyof EventCallbacks;
+export declare type EventType = keyof EventCallbacks;
 /** [Documentation](https://next-auth.js.org/configuration/pages) */
 export interface PagesOptions {
     signIn: string;
@@ -445,7 +394,7 @@ export interface PagesOptions {
     /** If set, new users will be directed here on first sign in */
     newUser: string;
 }
-export type ISODateString = string;
+export declare type ISODateString = string;
 export interface DefaultSession {
     user?: {
         name?: string | null;
@@ -465,7 +414,7 @@ export interface DefaultSession {
  */
 export interface Session extends DefaultSession {
 }
-export type SessionStrategy = "jwt" | "database";
+export declare type SessionStrategy = "jwt" | "database";
 /** [Documentation](https://next-auth.js.org/configuration/options#session) */
 export interface SessionOptions {
     /**
@@ -518,5 +467,4 @@ export interface DefaultUser {
  */
 export interface User extends DefaultUser {
 }
-export type AuthAction = "providers" | "session" | "csrf" | "signin" | "signout" | "callback" | "verify-request" | "error" | "_log";
-//# sourceMappingURL=types.d.ts.map
\ No newline at end of file
+export declare type AuthAction = "providers" | "session" | "csrf" | "signin" | "signout" | "callback" | "verify-request" | "error" | "_log";
diff --git a/node_modules/next-auth/core/types.d.ts.map b/node_modules/next-auth/core/types.d.ts.map
deleted file mode 100644
index 9b70aca..0000000
--- a/node_modules/next-auth/core/types.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"types.d.ts","sourceRoot":"","sources":["../src/core/types.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-auth/css/index.d.ts b/node_modules/next-auth/css/index.d.ts
index 0c34232..b8effb1 100644
--- a/node_modules/next-auth/css/index.d.ts
+++ b/node_modules/next-auth/css/index.d.ts
@@ -1,2 +1 @@
 export default function css(): string;
-//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/css/index.d.ts.map b/node_modules/next-auth/css/index.d.ts.map
deleted file mode 100644
index 2b0035d..0000000
--- a/node_modules/next-auth/css/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/css/index.ts"],"names":[],"mappings":"AAQA,MAAM,CAAC,OAAO,UAAU,GAAG,WAE1B"}
\ No newline at end of file
diff --git a/node_modules/next-auth/index.d.ts b/node_modules/next-auth/index.d.ts
index 1c1dd4b..6aaca31 100644
--- a/node_modules/next-auth/index.d.ts
+++ b/node_modules/next-auth/index.d.ts
@@ -3,4 +3,3 @@ export type { AuthOptions as NextAuthOptions } from "./core/types";
 export type { RequestInternal, ResponseInternal as OutgoingResponse, } from "./core";
 export * from "./next";
 export { default } from "./next";
-//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/index.d.ts.map b/node_modules/next-auth/index.d.ts.map
deleted file mode 100644
index 98572ee..0000000
--- a/node_modules/next-auth/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["src/index.ts"],"names":[],"mappings":"AAAA,cAAc,cAAc,CAAA;AAC5B,YAAY,EAAE,WAAW,IAAI,eAAe,EAAE,MAAM,cAAc,CAAA;AAElE,YAAY,EACV,eAAe,EACf,gBAAgB,IAAI,gBAAgB,GACrC,MAAM,QAAQ,CAAA;AAEf,cAAc,QAAQ,CAAA;AACtB,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/jwt/index.d.ts b/node_modules/next-auth/jwt/index.d.ts
index 0b5d871..3bb7df0 100644
--- a/node_modules/next-auth/jwt/index.d.ts
+++ b/node_modules/next-auth/jwt/index.d.ts
@@ -36,4 +36,3 @@ export interface GetTokenParams<R extends boolean = false> {
  * [Documentation](https://next-auth.js.org/tutorials/securing-pages-and-api-routes#using-gettoken)
  */
 export declare function getToken<R extends boolean = false>(params: GetTokenParams<R>): Promise<R extends true ? string : JWT | null>;
-//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/jwt/index.d.ts.map b/node_modules/next-auth/jwt/index.d.ts.map
deleted file mode 100644
index 7f81c6c..0000000
--- a/node_modules/next-auth/jwt/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/jwt/index.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,EAAE,yBAAyB,EAAE,cAAc,EAAE,MAAM,MAAM,CAAA;AACrE,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,aAAa,CAAA;AAC9C,OAAO,KAAK,EAAE,GAAG,EAAE,eAAe,EAAE,eAAe,EAAE,UAAU,EAAE,MAAM,SAAS,CAAA;AAChF,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,IAAI,CAAA;AAExC,cAAc,SAAS,CAAA;AAMvB,sEAAsE;AACtE,wBAAsB,MAAM,CAAC,MAAM,EAAE,eAAe,mBASnD;AAED,wCAAwC;AACxC,wBAAsB,MAAM,CAAC,MAAM,EAAE,eAAe,GAAG,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,CAQzE;AAED,MAAM,WAAW,cAAc,CAAC,CAAC,SAAS,OAAO,GAAG,KAAK;IACvD,6FAA6F;IAC7F,GAAG,EAAE,yBAAyB,CAAC,KAAK,CAAC,GAAG,WAAW,GAAG,cAAc,CAAA;IACpE;;;OAGG;IACH,YAAY,CAAC,EAAE,OAAO,CAAA;IACtB,2EAA2E;IAC3E,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB;;;OAGG;IACH,GAAG,CAAC,EAAE,CAAC,CAAA;IACP;;;OAGG;IACH,MAAM,CAAC,EAAE,MAAM,CAAA;IACf,MAAM,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAA;IAC7B,MAAM,CAAC,EAAE,cAAc,GAAG,OAAO,CAAA;CAClC;AAED;;;;GAIG;AACH,wBAAsB,QAAQ,CAAC,CAAC,SAAS,OAAO,GAAG,KAAK,EACtD,MAAM,EAAE,cAAc,CAAC,CAAC,CAAC,GACxB,OAAO,CAAC,CAAC,SAAS,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,CA+C/C"}
\ No newline at end of file
diff --git a/node_modules/next-auth/jwt/types.d.ts b/node_modules/next-auth/jwt/types.d.ts
index 12f266a..e4c1074 100644
--- a/node_modules/next-auth/jwt/types.d.ts
+++ b/node_modules/next-auth/jwt/types.d.ts
@@ -47,5 +47,4 @@ export interface JWTOptions {
     /** Override this method to control the NextAuth.js issued JWT decoding. */
     decode: (params: JWTDecodeParams) => Awaitable<JWT | null>;
 }
-export type Secret = string | Buffer;
-//# sourceMappingURL=types.d.ts.map
\ No newline at end of file
+export declare type Secret = string | Buffer;
diff --git a/node_modules/next-auth/jwt/types.d.ts.map b/node_modules/next-auth/jwt/types.d.ts.map
deleted file mode 100644
index 3f9658e..0000000
--- a/node_modules/next-auth/jwt/types.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"types.d.ts","sourceRoot":"","sources":["../src/jwt/types.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,IAAI,CAAA;AAEnC,MAAM,WAAW,UAAW,SAAQ,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC;IACzD,IAAI,CAAC,EAAE,MAAM,GAAG,IAAI,CAAA;IACpB,KAAK,CAAC,EAAE,MAAM,GAAG,IAAI,CAAA;IACrB,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,CAAA;IACvB,GAAG,CAAC,EAAE,MAAM,CAAA;CACb;AAED;;;;GAIG;AACH,MAAM,WAAW,GAAI,SAAQ,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,UAAU;CAAG;AAEnE,MAAM,WAAW,eAAe;IAC9B,uBAAuB;IACvB,KAAK,CAAC,EAAE,GAAG,CAAA;IACX,4DAA4D;IAC5D,MAAM,EAAE,MAAM,GAAG,MAAM,CAAA;IACvB;;;OAGG;IACH,MAAM,CAAC,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,WAAW,eAAe;IAC9B,+CAA+C;IAC/C,KAAK,CAAC,EAAE,MAAM,CAAA;IACd,4DAA4D;IAC5D,MAAM,EAAE,MAAM,GAAG,MAAM,CAAA;CACxB;AAED,MAAM,WAAW,UAAU;IACzB;;;;OAIG;IACH,MAAM,EAAE,MAAM,CAAA;IACd;;;OAGG;IACH,MAAM,EAAE,MAAM,CAAA;IACd,2EAA2E;IAC3E,MAAM,EAAE,CAAC,MAAM,EAAE,eAAe,KAAK,SAAS,CAAC,MAAM,CAAC,CAAA;IACtD,2EAA2E;IAC3E,MAAM,EAAE,CAAC,MAAM,EAAE,eAAe,KAAK,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,CAAA;CAC3D;AAED,MAAM,MAAM,MAAM,GAAG,MAAM,GAAG,MAAM,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/middleware.d.ts b/node_modules/next-auth/middleware.d.ts
index 35ef9fd..6d2b1fe 100644
--- a/node_modules/next-auth/middleware.d.ts
+++ b/node_modules/next-auth/middleware.d.ts
@@ -1,3 +1,2 @@
 export { default } from "./next/middleware";
 export * from "./next/middleware";
-//# sourceMappingURL=middleware.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/middleware.d.ts.map b/node_modules/next-auth/middleware.d.ts.map
deleted file mode 100644
index d235f04..0000000
--- a/node_modules/next-auth/middleware.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"middleware.d.ts","sourceRoot":"","sources":["src/middleware.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAA;AAC3C,cAAc,mBAAmB,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/next/index.d.ts b/node_modules/next-auth/next/index.d.ts
index 553ce36..3ae886c 100644
--- a/node_modules/next-auth/next/index.d.ts
+++ b/node_modules/next-auth/next/index.d.ts
@@ -4,12 +4,12 @@ import type { CallbacksOptions } from "../core/types";
 declare function NextAuth(options: AuthOptions): any;
 declare function NextAuth(req: NextApiRequest, res: NextApiResponse, options: AuthOptions): any;
 export default NextAuth;
-type GetServerSessionOptions = Partial<Omit<AuthOptions, "callbacks">> & {
+declare type GetServerSessionOptions = Partial<Omit<AuthOptions, "callbacks">> & {
     callbacks?: Omit<AuthOptions["callbacks"], "session"> & {
         session?: (...args: Parameters<CallbacksOptions["session"]>) => any;
     };
 };
-type GetServerSessionParams<O extends GetServerSessionOptions> = [GetServerSidePropsContext["req"], GetServerSidePropsContext["res"], O] | [NextApiRequest, NextApiResponse, O] | [O] | [];
+declare type GetServerSessionParams<O extends GetServerSessionOptions> = [GetServerSidePropsContext["req"], GetServerSidePropsContext["res"], O] | [NextApiRequest, NextApiResponse, O] | [O] | [];
 export declare function getServerSession<O extends GetServerSessionOptions, R = O["callbacks"] extends {
     session: (...args: any[]) => infer U;
 } ? U : Session>(...args: GetServerSessionParams<O>): Promise<R | null>;
@@ -25,4 +25,3 @@ declare global {
         }
     }
 }
-//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/next/index.d.ts.map b/node_modules/next-auth/next/index.d.ts.map
deleted file mode 100644
index 86997d7..0000000
--- a/node_modules/next-auth/next/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/next/index.ts"],"names":[],"mappings":"AAGA,OAAO,KAAK,EACV,yBAAyB,EACzB,cAAc,EACd,eAAe,EAChB,MAAM,MAAM,CAAA;AAEb,OAAO,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,IAAI,CAAA;AAC9C,OAAO,KAAK,EACV,gBAAgB,EAIjB,MAAM,eAAe,CAAA;AA8FtB,iBAAS,QAAQ,CAAC,OAAO,EAAE,WAAW,GAAG,GAAG,CAAA;AAC5C,iBAAS,QAAQ,CACf,GAAG,EAAE,cAAc,EACnB,GAAG,EAAE,eAAe,EACpB,OAAO,EAAE,WAAW,GACnB,GAAG,CAAA;AAmCN,eAAe,QAAQ,CAAA;AAIvB,KAAK,uBAAuB,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,GAAG;IACvE,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,GAAG;QACtD,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,CAAA;KACpE,CAAA;CACF,CAAA;AAED,KAAK,sBAAsB,CAAC,CAAC,SAAS,uBAAuB,IACzD,CAAC,yBAAyB,CAAC,KAAK,CAAC,EAAE,yBAAyB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GACvE,CAAC,cAAc,EAAE,eAAe,EAAE,CAAC,CAAC,GACpC,CAAC,CAAC,CAAC,GACH,EAAE,CAAA;AAEN,wBAAsB,gBAAgB,CACpC,CAAC,SAAS,uBAAuB,EACjC,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,SAAS;IAAE,OAAO,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,KAAK,MAAM,CAAC,CAAA;CAAE,GAC/D,CAAC,GACD,OAAO,EACX,GAAG,IAAI,EAAE,sBAAsB,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CA+DvD;AAID,gDAAgD;AAChD,wBAAsB,yBAAyB,CAC7C,CAAC,SAAS,uBAAuB,EACjC,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,SAAS;IAAE,OAAO,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,KAAK,MAAM,CAAC,CAAA;CAAE,GAC/D,CAAC,GACD,OAAO,EACX,GAAG,IAAI,EAAE,sBAAsB,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CASvD;AAED,OAAO,CAAC,MAAM,CAAC;IAEb,UAAU,MAAM,CAAC;QACf,UAAU,UAAU;YAClB,YAAY,CAAC,EAAE,MAAM,CAAA;YACrB,MAAM,CAAC,EAAE,GAAG,CAAA;SACb;KACF;CACF"}
\ No newline at end of file
diff --git a/node_modules/next-auth/next/index.js b/node_modules/next-auth/next/index.js
index c592ca5..bbf2153 100644
--- a/node_modules/next-auth/next/index.js
+++ b/node_modules/next-auth/next/index.js
@@ -9,18 +9,21 @@ exports.unstable_getServerSession = unstable_getServerSession;
 
 var _core = require("../core");
 
+var _detectHost = require("../utils/detect-host");
+
 var _utils = require("./utils");
 
-async function NextAuthApiHandler(req, res, options) {
-  var _options$secret, _options$jwt$secret, _options$jwt, _ref, _handler$status, _handler$cookies, _handler$headers;
+async function NextAuthHandler(req, res, options) {
+  var _ref, _options$secret, _options$jwt, _ref2, _handler$status, _handler$cookies, _handler$headers;
 
   const {
     nextauth,
     ...query
   } = req.query;
-  (_options$secret = options.secret) !== null && _options$secret !== void 0 ? _options$secret : options.secret = (_options$jwt$secret = (_options$jwt = options.jwt) === null || _options$jwt === void 0 ? void 0 : _options$jwt.secret) !== null && _options$jwt$secret !== void 0 ? _options$jwt$secret : process.env.NEXTAUTH_SECRET;
+  options.secret = (_ref = (_options$secret = options.secret) !== null && _options$secret !== void 0 ? _options$secret : (_options$jwt = options.jwt) === null || _options$jwt === void 0 ? void 0 : _options$jwt.secret) !== null && _ref !== void 0 ? _ref : process.env.NEXTAUTH_SECRET;
   const handler = await (0, _core.AuthHandler)({
     req: {
+      host: (0, _detectHost.detectHost)(req.headers["x-forwarded-host"]),
       body: req.body,
       query,
       cookies: req.cookies,
@@ -28,7 +31,7 @@ async function NextAuthApiHandler(req, res, options) {
       method: req.method,
       action: nextauth === null || nextauth === void 0 ? void 0 : nextauth[0],
       providerId: nextauth === null || nextauth === void 0 ? void 0 : nextauth[1],
-      error: (_ref = req.query.error) !== null && _ref !== void 0 ? _ref : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]
+      error: (_ref2 = req.query.error) !== null && _ref2 !== void 0 ? _ref2 : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]
     },
     options
   });
@@ -52,66 +55,12 @@ async function NextAuthApiHandler(req, res, options) {
   return res.send(handler.body);
 }
 
-async function NextAuthRouteHandler(req, context, options) {
-  var _options$secret2, _context$params, _query$error;
-
-  (_options$secret2 = options.secret) !== null && _options$secret2 !== void 0 ? _options$secret2 : options.secret = process.env.NEXTAUTH_SECRET;
-
-  const {
-    headers,
-    cookies
-  } = require("next/headers");
-
-  const nextauth = (_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.nextauth;
-  const query = Object.fromEntries(req.nextUrl.searchParams);
-  const body = await (0, _utils.getBody)(req);
-  const internalResponse = await (0, _core.AuthHandler)({
-    req: {
-      body,
-      query,
-      cookies: Object.fromEntries(cookies().getAll().map(c => [c.name, c.value])),
-      headers: Object.fromEntries(headers()),
-      method: req.method,
-      action: nextauth === null || nextauth === void 0 ? void 0 : nextauth[0],
-      providerId: nextauth === null || nextauth === void 0 ? void 0 : nextauth[1],
-      error: (_query$error = query.error) !== null && _query$error !== void 0 ? _query$error : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]
-    },
-    options
-  });
-  const response = (0, _utils.toResponse)(internalResponse);
-  const redirect = response.headers.get("Location");
-
-  if ((body === null || body === void 0 ? void 0 : body.json) === "true" && redirect) {
-    response.headers.delete("Location");
-    response.headers.set("Content-Type", "application/json");
-    return new Response(JSON.stringify({
-      url: redirect
-    }), {
-      headers: response.headers
-    });
-  }
-
-  return response;
-}
-
 function NextAuth(...args) {
-  var _args$;
-
   if (args.length === 1) {
-    return async (req, res) => {
-      if (res !== null && res !== void 0 && res.params) {
-        return await NextAuthRouteHandler(req, res, args[0]);
-      }
-
-      return await NextAuthApiHandler(req, res, args[0]);
-    };
-  }
-
-  if ((_args$ = args[1]) !== null && _args$ !== void 0 && _args$.params) {
-    return NextAuthRouteHandler(...args);
+    return async (req, res) => await NextAuthHandler(req, res, args[0]);
   }
 
-  return NextAuthApiHandler(...args);
+  return NextAuthHandler(args[0], args[1], args[2]);
 }
 
 var _default = NextAuth;
@@ -119,7 +68,7 @@ exports.default = _default;
 let experimentalRSCWarningShown = false;
 
 async function getServerSession(...args) {
-  var _options, _options$secret3;
+  var _options$secret2;
 
   const isRSC = args.length === 0 || args.length === 1;
 
@@ -160,10 +109,11 @@ async function getServerSession(...args) {
     });
   }
 
-  (_options$secret3 = (_options = options).secret) !== null && _options$secret3 !== void 0 ? _options$secret3 : _options.secret = process.env.NEXTAUTH_SECRET;
+  options.secret = (_options$secret2 = options.secret) !== null && _options$secret2 !== void 0 ? _options$secret2 : process.env.NEXTAUTH_SECRET;
   const session = await (0, _core.AuthHandler)({
     options,
     req: {
+      host: (0, _detectHost.detectHost)(req.headers["x-forwarded-host"]),
       action: "session",
       method: "GET",
       cookies: req.cookies,
diff --git a/node_modules/next-auth/next/middleware.d.ts b/node_modules/next-auth/next/middleware.d.ts
index 35766e3..86e79d1 100644
--- a/node_modules/next-auth/next/middleware.d.ts
+++ b/node_modules/next-auth/next/middleware.d.ts
@@ -2,7 +2,7 @@ import type { NextMiddleware, NextFetchEvent } from "next/server";
 import type { Awaitable, CookieOption, AuthOptions } from "..";
 import type { JWT, JWTOptions } from "../jwt";
 import { NextRequest } from "next/server";
-type AuthorizedCallback = (params: {
+declare type AuthorizedCallback = (params: {
     token: JWT | null;
     req: NextRequest;
 }) => Awaitable<boolean>;
@@ -76,14 +76,14 @@ export interface NextAuthMiddlewareOptions {
      */
     secret?: string;
 }
-type NextMiddlewareResult = ReturnType<NextMiddleware> | void;
+declare type NextMiddlewareResult = ReturnType<NextMiddleware> | void;
 export interface NextRequestWithAuth extends NextRequest {
     nextauth: {
         token: JWT | null;
     };
 }
-export type NextMiddlewareWithAuth = (request: NextRequestWithAuth, event: NextFetchEvent) => NextMiddlewareResult | Promise<NextMiddlewareResult>;
-export type WithAuthArgs = [NextRequestWithAuth] | [NextRequestWithAuth, NextFetchEvent] | [NextRequestWithAuth, NextAuthMiddlewareOptions] | [NextMiddlewareWithAuth] | [NextMiddlewareWithAuth, NextAuthMiddlewareOptions] | [NextAuthMiddlewareOptions] | [];
+export declare type NextMiddlewareWithAuth = (request: NextRequestWithAuth, event: NextFetchEvent) => NextMiddlewareResult | Promise<NextMiddlewareResult>;
+export declare type WithAuthArgs = [NextRequestWithAuth] | [NextRequestWithAuth, NextFetchEvent] | [NextRequestWithAuth, NextAuthMiddlewareOptions] | [NextMiddlewareWithAuth] | [NextMiddlewareWithAuth, NextAuthMiddlewareOptions] | [NextAuthMiddlewareOptions] | [];
 /**
  * Middleware that checks if the user is authenticated/authorized.
  * If if they aren't, they will be redirected to the login page.
@@ -101,4 +101,3 @@ export type WithAuthArgs = [NextRequestWithAuth] | [NextRequestWithAuth, NextFet
  */
 export declare function withAuth(...args: WithAuthArgs): Promise<import("next/dist/server/web/types").NextMiddlewareResult> | ((request: NextRequestWithAuth, event: NextFetchEvent) => Promise<import("next/dist/server/web/types").NextMiddlewareResult>);
 export default withAuth;
-//# sourceMappingURL=middleware.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/next/middleware.d.ts.map b/node_modules/next-auth/next/middleware.d.ts.map
deleted file mode 100644
index ceb2f75..0000000
--- a/node_modules/next-auth/next/middleware.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"middleware.d.ts","sourceRoot":"","sources":["../src/next/middleware.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,aAAa,CAAA;AACjE,OAAO,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,IAAI,CAAA;AAC9D,OAAO,KAAK,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAA;AAE7C,OAAO,EAAgB,WAAW,EAAE,MAAM,aAAa,CAAA;AAKvD,KAAK,kBAAkB,GAAG,CAAC,MAAM,EAAE;IACjC,KAAK,EAAE,GAAG,GAAG,IAAI,CAAA;IACjB,GAAG,EAAE,WAAW,CAAA;CACjB,KAAK,SAAS,CAAC,OAAO,CAAC,CAAA;AAExB,MAAM,WAAW,yBAAyB;IACxC;;;;;;OAMG;IACH,KAAK,CAAC,EAAE,WAAW,CAAC,OAAO,CAAC,CAAA;IAE5B;;;;;;;;;;;;;OAaG;IACH,OAAO,CAAC,EAAE,OAAO,CACf,MAAM,CACJ,MAAM,IAAI,CAAC,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,cAAc,CAAC,EACxD,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAC9B,CACF,CAAA;IAED;;;;;OAKG;IACH,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAA;IAEzC,SAAS,CAAC,EAAE;QACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA6BG;QACH,UAAU,CAAC,EAAE,kBAAkB,CAAA;KAChC,CAAA;IAED;;;OAGG;IACH,MAAM,CAAC,EAAE,MAAM,CAAA;CAChB;AAID,KAAK,oBAAoB,GAAG,UAAU,CAAC,cAAc,CAAC,GAAG,IAAI,CAAA;AA2D7D,MAAM,WAAW,mBAAoB,SAAQ,WAAW;IACtD,QAAQ,EAAE;QAAE,KAAK,EAAE,GAAG,GAAG,IAAI,CAAA;KAAE,CAAA;CAChC;AAED,MAAM,MAAM,sBAAsB,GAAG,CACnC,OAAO,EAAE,mBAAmB,EAC5B,KAAK,EAAE,cAAc,KAClB,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAA;AAEzD,MAAM,MAAM,YAAY,GACpB,CAAC,mBAAmB,CAAC,GACrB,CAAC,mBAAmB,EAAE,cAAc,CAAC,GACrC,CAAC,mBAAmB,EAAE,yBAAyB,CAAC,GAChD,CAAC,sBAAsB,CAAC,GACxB,CAAC,sBAAsB,EAAE,yBAAyB,CAAC,GACnD,CAAC,yBAAyB,CAAC,GAC3B,EAAE,CAAA;AAEN;;;;;;;;;;;;;;GAcG;AACH,wBAAgB,QAAQ,CAAC,GAAG,IAAI,EAAE,YAAY,sMAmB7C;AAED,eAAe,QAAQ,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/next/utils.d.ts b/node_modules/next-auth/next/utils.d.ts
index 8c4e8a7..175b9fc 100644
--- a/node_modules/next-auth/next/utils.d.ts
+++ b/node_modules/next-auth/next/utils.d.ts
@@ -1,6 +1,2 @@
 import { Cookie } from "../core/lib/cookie";
-import { type ResponseInternal } from "../core";
 export declare function setCookie(res: any, cookie: Cookie): void;
-export declare function getBody(req: Request): Promise<Record<string, any> | undefined>;
-export declare function toResponse(res: ResponseInternal): Response;
-//# sourceMappingURL=utils.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/next/utils.d.ts.map b/node_modules/next-auth/next/utils.d.ts.map
deleted file mode 100644
index 85c1308..0000000
--- a/node_modules/next-auth/next/utils.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../src/next/utils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAA;AAC3C,OAAO,EAAE,KAAK,gBAAgB,EAAE,MAAM,SAAS,CAAA;AAE/C,wBAAgB,SAAS,CAAC,GAAG,KAAA,EAAE,MAAM,EAAE,MAAM,QAW5C;AAED,wBAAsB,OAAO,CAC3B,GAAG,EAAE,OAAO,GACX,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,SAAS,CAAC,CAU1C;AAED,wBAAgB,UAAU,CAAC,GAAG,EAAE,gBAAgB,GAAG,QAAQ,CA4B1D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/next/utils.js b/node_modules/next-auth/next/utils.js
index 8e46849..6b4d232 100644
--- a/node_modules/next-auth/next/utils.js
+++ b/node_modules/next-auth/next/utils.js
@@ -3,9 +3,7 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.getBody = getBody;
 exports.setCookie = setCookie;
-exports.toResponse = toResponse;
 
 var _cookie = require("cookie");
 
@@ -27,45 +25,3 @@ function setCookie(res, cookie) {
   setCookieHeader.push(cookieHeader);
   res.setHeader("Set-Cookie", setCookieHeader);
 }
\ No newline at end of file
-
-async function getBody(req) {
-  if (!("body" in req) || !req.body || req.method !== "POST") return;
-  const contentType = req.headers.get("content-type");
-
-  if (contentType !== null && contentType !== void 0 && contentType.includes("application/json")) {
-    return await req.json();
-  } else if (contentType !== null && contentType !== void 0 && contentType.includes("application/x-www-form-urlencoded")) {
-    const params = new URLSearchParams(await req.text());
-    return Object.fromEntries(params);
-  }
-}
-
-function toResponse(res) {
-  var _res$headers, _res$cookies, _res$status;
-
-  const headers = new Headers((_res$headers = res.headers) === null || _res$headers === void 0 ? void 0 : _res$headers.reduce((acc, {
-    key,
-    value
-  }) => {
-    acc[key] = value;
-    return acc;
-  }, {}));
-  (_res$cookies = res.cookies) === null || _res$cookies === void 0 ? void 0 : _res$cookies.forEach(cookie => {
-    const {
-      name,
-      value,
-      options
-    } = cookie;
-    const cookieHeader = (0, _cookie.serialize)(name, value, options);
-    if (headers.has("Set-Cookie")) headers.append("Set-Cookie", cookieHeader);else headers.set("Set-Cookie", cookieHeader);
-  });
-  let body = res.body;
-  if (headers.get("content-type") === "application/json") body = JSON.stringify(res.body);else if (headers.get("content-type") === "application/x-www-form-urlencoded") body = new URLSearchParams(res.body).toString();
-  const status = res.redirect ? 302 : (_res$status = res.status) !== null && _res$status !== void 0 ? _res$status : 200;
-  const response = new Response(body, {
-    headers,
-    status
-  });
-  if (res.redirect) response.headers.set("Location", res.redirect);
-  return response;
-}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/42-school.d.ts b/node_modules/next-auth/providers/42-school.d.ts
index cdefcd4..54685c4 100644
--- a/node_modules/next-auth/providers/42-school.d.ts
+++ b/node_modules/next-auth/providers/42-school.d.ts
@@ -161,4 +161,3 @@ export interface FortyTwoProfile extends UserData, Record<string, any> {
     user: any | null;
 }
 export default function FortyTwo<P extends FortyTwoProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=42-school.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/42-school.d.ts.map b/node_modules/next-auth/providers/42-school.d.ts.map
deleted file mode 100644
index 4e50242..0000000
--- a/node_modules/next-auth/providers/42-school.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"42-school.d.ts","sourceRoot":"","sources":["../src/providers/42-school.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/apple.d.ts b/node_modules/next-auth/providers/apple.d.ts
index f14a75b..afeb77c 100644
--- a/node_modules/next-auth/providers/apple.d.ts
+++ b/node_modules/next-auth/providers/apple.d.ts
@@ -88,4 +88,3 @@ export default function Apple<P extends AppleProfile>(options: Omit<OAuthUserCon
      */
     clientSecret: string;
 }): OAuthConfig<P>;
-//# sourceMappingURL=apple.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/apple.d.ts.map b/node_modules/next-auth/providers/apple.d.ts.map
deleted file mode 100644
index 7c14c65..0000000
--- a/node_modules/next-auth/providers/apple.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"apple.d.ts","sourceRoot":"","sources":["../src/providers/apple.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAEhD;;;;GAIG;AACH,MAAM,WAAW,YAAa,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACvD;;;OAGG;IACH,GAAG,EAAE,2BAA2B,CAAA;IAChC;;;OAGG;IACH,GAAG,EAAE,MAAM,CAAA;IACX;;;OAGG;IACH,GAAG,EAAE,MAAM,CAAA;IAEX;;;;OAIG;IACH,GAAG,EAAE,MAAM,CAAA;IACX;;;OAGG;IACH,GAAG,EAAE,MAAM,CAAA;IACX;;;OAGG;IACH,KAAK,EAAE,MAAM,CAAA;IAEb;;;;;;OAMG;IACH,eAAe,EAAE,OAAO,CAAA;IAExB;;;;OAIG;IACH,KAAK,EAAE,MAAM,CAAA;IAEb;;;;OAIG;IACH,cAAc,EAAE,MAAM,GAAG,IAAI,CAAA;IAE7B;;;OAGG;IACH,gBAAgB,EAAE,OAAO,GAAG,MAAM,GAAG,OAAO,CAAA;IAE5C;;;;;;OAMG;IACH,gBAAgB,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAE3B;;;;OAIG;IACH,YAAY,EAAE,MAAM,CAAA;IACpB,OAAO,EAAE,MAAM,CAAA;IACf,SAAS,EAAE,MAAM,CAAA;CAClB;AAED,MAAM,CAAC,OAAO,UAAU,KAAK,CAAC,CAAC,SAAS,YAAY,EAClD,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,GAAG;IAClD;;;;;;OAMG;IACH,YAAY,EAAE,MAAM,CAAA;CACrB,GACA,WAAW,CAAC,CAAC,CAAC,CA6BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/atlassian.d.ts b/node_modules/next-auth/providers/atlassian.d.ts
index 5d515e4..e4bf8f7 100644
--- a/node_modules/next-auth/providers/atlassian.d.ts
+++ b/node_modules/next-auth/providers/atlassian.d.ts
@@ -7,4 +7,3 @@ interface AtlassianProfile extends Record<string, any> {
 }
 export default function Atlassian<P extends AtlassianProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
 export {};
-//# sourceMappingURL=atlassian.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/atlassian.d.ts.map b/node_modules/next-auth/providers/atlassian.d.ts.map
deleted file mode 100644
index 9312b91..0000000
--- a/node_modules/next-auth/providers/atlassian.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"atlassian.d.ts","sourceRoot":"","sources":["../src/providers/atlassian.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,UAAU,gBAAiB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACpD,UAAU,EAAE,MAAM,CAAA;IAClB,IAAI,EAAE,MAAM,CAAA;IACZ,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,CAAC,SAAS,gBAAgB,EAC1D,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAgChB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/auth0.d.ts b/node_modules/next-auth/providers/auth0.d.ts
index 5a3eaf2..90fc58f 100644
--- a/node_modules/next-auth/providers/auth0.d.ts
+++ b/node_modules/next-auth/providers/auth0.d.ts
@@ -6,4 +6,3 @@ export interface Auth0Profile extends Record<string, any> {
     picture: string;
 }
 export default function Auth0<P extends Auth0Profile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=auth0.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/auth0.d.ts.map b/node_modules/next-auth/providers/auth0.d.ts.map
deleted file mode 100644
index 4979cd5..0000000
--- a/node_modules/next-auth/providers/auth0.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"auth0.d.ts","sourceRoot":"","sources":["../src/providers/auth0.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,YAAa,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACvD,GAAG,EAAE,MAAM,CAAA;IACX,QAAQ,EAAE,MAAM,CAAA;IAChB,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,CAAC,OAAO,UAAU,KAAK,CAAC,CAAC,SAAS,YAAY,EAClD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA2BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/authentik.d.ts b/node_modules/next-auth/providers/authentik.d.ts
index 4711c3b..3619f88 100644
--- a/node_modules/next-auth/providers/authentik.d.ts
+++ b/node_modules/next-auth/providers/authentik.d.ts
@@ -20,4 +20,3 @@ export interface AuthentikProfile extends Record<string, any> {
     groups: string[];
 }
 export default function Authentik<P extends AuthentikProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=authentik.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/authentik.d.ts.map b/node_modules/next-auth/providers/authentik.d.ts.map
deleted file mode 100644
index 78c1d96..0000000
--- a/node_modules/next-auth/providers/authentik.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"authentik.d.ts","sourceRoot":"","sources":["../src/providers/authentik.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,gBAAiB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC3D,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,SAAS,EAAE,MAAM,CAAA;IACjB,GAAG,EAAE,MAAM,CAAA;IACX,MAAM,EAAE,MAAM,CAAA;IACd,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;IACf,KAAK,EAAE,MAAM,CAAA;IACb,cAAc,EAAE,OAAO,CAAA;IACvB,IAAI,EAAE,MAAM,CAAA;IACZ,UAAU,EAAE,MAAM,CAAA;IAClB,WAAW,EAAE,MAAM,CAAA;IACnB,kBAAkB,EAAE,MAAM,CAAA;IAC1B,QAAQ,EAAE,MAAM,CAAA;IAChB,MAAM,EAAE,MAAM,EAAE,CAAA;CACjB;AAED,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,CAAC,SAAS,gBAAgB,EAC1D,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAkBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/azure-ad-b2c.d.ts b/node_modules/next-auth/providers/azure-ad-b2c.d.ts
index 7447b2a..566327f 100644
--- a/node_modules/next-auth/providers/azure-ad-b2c.d.ts
+++ b/node_modules/next-auth/providers/azure-ad-b2c.d.ts
@@ -19,4 +19,3 @@ export default function AzureADB2C<P extends AzureB2CProfile>(options: OAuthUser
     primaryUserFlow?: string;
     tenantId?: string;
 }): OAuthConfig<P>;
-//# sourceMappingURL=azure-ad-b2c.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/azure-ad-b2c.d.ts.map b/node_modules/next-auth/providers/azure-ad-b2c.d.ts.map
deleted file mode 100644
index 4f2e424..0000000
--- a/node_modules/next-auth/providers/azure-ad-b2c.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"azure-ad-b2c.d.ts","sourceRoot":"","sources":["../src/providers/azure-ad-b2c.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,eAAgB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC1D,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,SAAS,EAAE,MAAM,CAAA;IACjB,GAAG,EAAE,MAAM,CAAA;IACX,OAAO,EAAE,MAAM,CAAA;IACf,IAAI,EAAE,MAAM,CAAA;IACZ,UAAU,EAAE,MAAM,CAAA;IAClB,MAAM,EAAE,MAAM,EAAE,CAAA;IAChB,GAAG,EAAE,MAAM,CAAA;CACZ;AAED,MAAM,CAAC,OAAO,UAAU,UAAU,CAAC,CAAC,SAAS,eAAe,EAC1D,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAAG;IAC5B,eAAe,CAAC,EAAE,MAAM,CAAA;IACxB,QAAQ,CAAC,EAAE,MAAM,CAAA;CAClB,GACA,WAAW,CAAC,CAAC,CAAC,CA8BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/azure-ad.d.ts b/node_modules/next-auth/providers/azure-ad.d.ts
index ac03152..1f83ebb 100644
--- a/node_modules/next-auth/providers/azure-ad.d.ts
+++ b/node_modules/next-auth/providers/azure-ad.d.ts
@@ -14,4 +14,3 @@ export default function AzureAD<P extends AzureADProfile>(options: OAuthUserConf
     /** @default "common" */
     tenantId?: string;
 }): OAuthConfig<P>;
-//# sourceMappingURL=azure-ad.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/azure-ad.d.ts.map b/node_modules/next-auth/providers/azure-ad.d.ts.map
deleted file mode 100644
index 5ebba4e..0000000
--- a/node_modules/next-auth/providers/azure-ad.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"azure-ad.d.ts","sourceRoot":"","sources":["../src/providers/azure-ad.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,cAAe,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACzD,GAAG,EAAE,MAAM,CAAA;IACX,QAAQ,EAAE,MAAM,CAAA;IAChB,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,CAAC,OAAO,UAAU,OAAO,CAAC,CAAC,SAAS,cAAc,EACtD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAAG;IAC5B;;;OAGG;IACH,gBAAgB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA;IACnE,wBAAwB;IACxB,QAAQ,CAAC,EAAE,MAAM,CAAA;CAClB,GACA,WAAW,CAAC,CAAC,CAAC,CAiDhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/battlenet.d.ts b/node_modules/next-auth/providers/battlenet.d.ts
index 58c2a22..dd94b2c 100644
--- a/node_modules/next-auth/providers/battlenet.d.ts
+++ b/node_modules/next-auth/providers/battlenet.d.ts
@@ -4,8 +4,7 @@ export interface BattleNetProfile extends Record<string, any> {
     battle_tag: string;
 }
 /** See the [available regions](https://develop.battle.net/documentation/guides/regionality-and-apis) */
-export type BattleNetIssuer = "https://www.battlenet.com.cn/oauth" | `https://${"us" | "eu" | "kr" | "tw"}.battle.net/oauth`;
+export declare type BattleNetIssuer = "https://www.battlenet.com.cn/oauth" | `https://${"us" | "eu" | "kr" | "tw"}.battle.net/oauth`;
 export default function BattleNet<P extends BattleNetProfile>(options: OAuthUserConfig<P> & {
     issuer: BattleNetIssuer;
 }): OAuthConfig<P>;
-//# sourceMappingURL=battlenet.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/battlenet.d.ts.map b/node_modules/next-auth/providers/battlenet.d.ts.map
deleted file mode 100644
index 9f3e13b..0000000
--- a/node_modules/next-auth/providers/battlenet.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"battlenet.d.ts","sourceRoot":"","sources":["../src/providers/battlenet.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,gBAAiB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC3D,GAAG,EAAE,MAAM,CAAA;IACX,UAAU,EAAE,MAAM,CAAA;CACnB;AAED,wGAAwG;AACxG,MAAM,MAAM,eAAe,GACvB,oCAAoC,GACpC,WAAW,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,mBAAmB,CAAA;AAE3D,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,CAAC,SAAS,gBAAgB,EAC1D,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAAG;IAAE,MAAM,EAAE,eAAe,CAAA;CAAE,GACxD,WAAW,CAAC,CAAC,CAAC,CAwBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/box.d.ts b/node_modules/next-auth/providers/box.d.ts
index 2f2a832..94f6dfa 100644
--- a/node_modules/next-auth/providers/box.d.ts
+++ b/node_modules/next-auth/providers/box.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function Box(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=box.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/box.d.ts.map b/node_modules/next-auth/providers/box.d.ts.map
deleted file mode 100644
index bb8935b..0000000
--- a/node_modules/next-auth/providers/box.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"box.d.ts","sourceRoot":"","sources":["../src/providers/box.js"],"names":[],"mappings":"AA4BmuI,sHAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/boxyhq-saml.d.ts b/node_modules/next-auth/providers/boxyhq-saml.d.ts
index d39bcee..5a5556e 100644
--- a/node_modules/next-auth/providers/boxyhq-saml.d.ts
+++ b/node_modules/next-auth/providers/boxyhq-saml.d.ts
@@ -6,4 +6,3 @@ export interface BoxyHQSAMLProfile extends Record<string, any> {
     lastName?: string;
 }
 export default function SAMLJackson<P extends BoxyHQSAMLProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=boxyhq-saml.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/boxyhq-saml.d.ts.map b/node_modules/next-auth/providers/boxyhq-saml.d.ts.map
deleted file mode 100644
index 2f745a5..0000000
--- a/node_modules/next-auth/providers/boxyhq-saml.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"boxyhq-saml.d.ts","sourceRoot":"","sources":["../src/providers/boxyhq-saml.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,iBAAkB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC5D,EAAE,EAAE,MAAM,CAAA;IACV,KAAK,EAAE,MAAM,CAAA;IACb,SAAS,CAAC,EAAE,MAAM,CAAA;IAClB,QAAQ,CAAC,EAAE,MAAM,CAAA;CAClB;AAED,MAAM,CAAC,OAAO,UAAU,WAAW,CAAC,CAAC,SAAS,iBAAiB,EAC7D,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAyBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/bungie.d.ts b/node_modules/next-auth/providers/bungie.d.ts
index 48fef52..182f02e 100644
--- a/node_modules/next-auth/providers/bungie.d.ts
+++ b/node_modules/next-auth/providers/bungie.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function Bungie(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=bungie.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/bungie.d.ts.map b/node_modules/next-auth/providers/bungie.d.ts.map
deleted file mode 100644
index 14ff547..0000000
--- a/node_modules/next-auth/providers/bungie.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"bungie.d.ts","sourceRoot":"","sources":["../src/providers/bungie.js"],"names":[],"mappings":"AAyBspI,yHAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/cognito.d.ts b/node_modules/next-auth/providers/cognito.d.ts
index 017e9da..541c7cf 100644
--- a/node_modules/next-auth/providers/cognito.d.ts
+++ b/node_modules/next-auth/providers/cognito.d.ts
@@ -6,4 +6,3 @@ export interface CognitoProfile extends Record<string, any> {
     picture: string;
 }
 export default function Cognito<P extends CognitoProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=cognito.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/cognito.d.ts.map b/node_modules/next-auth/providers/cognito.d.ts.map
deleted file mode 100644
index 7cea4e8..0000000
--- a/node_modules/next-auth/providers/cognito.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"cognito.d.ts","sourceRoot":"","sources":["../src/providers/cognito.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,cAAe,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACzD,GAAG,EAAE,MAAM,CAAA;IACX,IAAI,EAAE,MAAM,CAAA;IACZ,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,CAAC,OAAO,UAAU,OAAO,CAAC,CAAC,SAAS,cAAc,EACtD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAyBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/coinbase.d.ts b/node_modules/next-auth/providers/coinbase.d.ts
index 4c6e0ab..f1309f4 100644
--- a/node_modules/next-auth/providers/coinbase.d.ts
+++ b/node_modules/next-auth/providers/coinbase.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function Coinbase(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=coinbase.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/coinbase.d.ts.map b/node_modules/next-auth/providers/coinbase.d.ts.map
deleted file mode 100644
index 0937f0b..0000000
--- a/node_modules/next-auth/providers/coinbase.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"coinbase.d.ts","sourceRoot":"","sources":["../src/providers/coinbase.js"],"names":[],"mappings":"AAqBwzI,2HAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/credentials.d.ts b/node_modules/next-auth/providers/credentials.d.ts
index 64bb303..01c5f46 100644
--- a/node_modules/next-auth/providers/credentials.d.ts
+++ b/node_modules/next-auth/providers/credentials.d.ts
@@ -12,9 +12,8 @@ export interface CredentialsConfig<C extends Record<string, CredentialInput> = R
     credentials: C;
     authorize: (credentials: Record<keyof C, string> | undefined, req: Pick<RequestInternal, "body" | "query" | "headers" | "method">) => Awaitable<User | null>;
 }
-export type CredentialsProvider = <C extends Record<string, CredentialInput>>(options: Partial<CredentialsConfig<C>>) => CredentialsConfig<C>;
-export type CredentialsProviderType = "Credentials";
-type UserCredentialsConfig<C extends Record<string, CredentialInput>> = Partial<Omit<CredentialsConfig<C>, "options">> & Pick<CredentialsConfig<C>, "authorize" | "credentials">;
+export declare type CredentialsProvider = <C extends Record<string, CredentialInput>>(options: Partial<CredentialsConfig<C>>) => CredentialsConfig<C>;
+export declare type CredentialsProviderType = "Credentials";
+declare type UserCredentialsConfig<C extends Record<string, CredentialInput>> = Partial<Omit<CredentialsConfig<C>, "options">> & Pick<CredentialsConfig<C>, "authorize" | "credentials">;
 export default function Credentials<C extends Record<string, CredentialInput> = Record<string, CredentialInput>>(options: UserCredentialsConfig<C>): CredentialsConfig<C>;
 export {};
-//# sourceMappingURL=credentials.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/credentials.d.ts.map b/node_modules/next-auth/providers/credentials.d.ts.map
deleted file mode 100644
index 802caf2..0000000
--- a/node_modules/next-auth/providers/credentials.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"credentials.d.ts","sourceRoot":"","sources":["../src/providers/credentials.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,SAAS,CAAA;AAC9C,OAAO,KAAK,EAAE,qBAAqB,EAAE,MAAM,GAAG,CAAA;AAC9C,OAAO,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,IAAI,CAAA;AAEzC,MAAM,WAAW,eAAe;IAC9B,KAAK,CAAC,EAAE,MAAM,CAAA;IACd,IAAI,CAAC,EAAE,MAAM,CAAA;IACb,KAAK,CAAC,EAAE,MAAM,CAAA;IACd,WAAW,CAAC,EAAE,MAAM,CAAA;CACrB;AAED,MAAM,WAAW,iBAAiB,CAChC,CAAC,SAAS,MAAM,CAAC,MAAM,EAAE,eAAe,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,eAAe,CAAC,CAC3E,SAAQ,qBAAqB;IAC7B,IAAI,EAAE,aAAa,CAAA;IACnB,WAAW,EAAE,CAAC,CAAA;IACd,SAAS,EAAE,CACT,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,SAAS,EAChD,GAAG,EAAE,IAAI,CAAC,eAAe,EAAE,MAAM,GAAG,OAAO,GAAG,SAAS,GAAG,QAAQ,CAAC,KAChE,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,CAAA;CAC5B;AAED,MAAM,MAAM,mBAAmB,GAAG,CAAC,CAAC,SAAS,MAAM,CAAC,MAAM,EAAE,eAAe,CAAC,EAC1E,OAAO,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KACnC,iBAAiB,CAAC,CAAC,CAAC,CAAA;AAEzB,MAAM,MAAM,uBAAuB,GAAG,aAAa,CAAA;AAEnD,KAAK,qBAAqB,CAAC,CAAC,SAAS,MAAM,CAAC,MAAM,EAAE,eAAe,CAAC,IAAI,OAAO,CAC7E,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CACtC,GACC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,WAAW,GAAG,aAAa,CAAC,CAAA;AAEzD,MAAM,CAAC,OAAO,UAAU,WAAW,CACjC,CAAC,SAAS,MAAM,CAAC,MAAM,EAAE,eAAe,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,eAAe,CAAC,EAC3E,OAAO,EAAE,qBAAqB,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CASzD"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/discord.d.ts b/node_modules/next-auth/providers/discord.d.ts
index c61c5a8..1b794ef 100644
--- a/node_modules/next-auth/providers/discord.d.ts
+++ b/node_modules/next-auth/providers/discord.d.ts
@@ -17,4 +17,3 @@ export interface DiscordProfile extends Record<string, any> {
     verified: boolean;
 }
 export default function Discord<P extends DiscordProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=discord.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/discord.d.ts.map b/node_modules/next-auth/providers/discord.d.ts.map
deleted file mode 100644
index 8abcc2b..0000000
--- a/node_modules/next-auth/providers/discord.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"discord.d.ts","sourceRoot":"","sources":["../src/providers/discord.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,cAAe,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACzD,YAAY,EAAE,MAAM,CAAA;IACpB,MAAM,EAAE,MAAM,CAAA;IACd,MAAM,EAAE,MAAM,CAAA;IACd,YAAY,EAAE,MAAM,CAAA;IACpB,aAAa,EAAE,MAAM,CAAA;IACrB,KAAK,EAAE,MAAM,CAAA;IACb,KAAK,EAAE,MAAM,CAAA;IACb,EAAE,EAAE,MAAM,CAAA;IACV,SAAS,EAAE,MAAM,CAAA;IACjB,MAAM,EAAE,MAAM,CAAA;IACd,WAAW,EAAE,OAAO,CAAA;IACpB,YAAY,EAAE,MAAM,CAAA;IACpB,YAAY,EAAE,MAAM,CAAA;IACpB,QAAQ,EAAE,MAAM,CAAA;IAChB,QAAQ,EAAE,OAAO,CAAA;CAClB;AAED,MAAM,CAAC,OAAO,UAAU,OAAO,CAAC,CAAC,SAAS,cAAc,EACtD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAkChB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/dropbox.d.ts b/node_modules/next-auth/providers/dropbox.d.ts
index f384fc8..15000c2 100644
--- a/node_modules/next-auth/providers/dropbox.d.ts
+++ b/node_modules/next-auth/providers/dropbox.d.ts
@@ -1,2 +1,31 @@
+/**
+ * @param {import("../core").Provider} options
+ * @example
+ *
+ * ```js
+ * // pages/api/auth/[...nextauth].js
+ * import Providers from `next-auth/providers`
+ * ...
+ * providers: [
+ *   Providers.Dropbox({
+ *     clientId: process.env.DROPBOX_CLIENT_ID,
+ *     clientSecret: process.env.DROPBOX_CLIENT_SECRET
+ *   })
+ * ]
+ * ...
+ *
+ * // pages/index
+ * import { signIn } from "next-auth/react"
+ * ...
+ * <button onClick={() => signIn("dropbox")}>
+ *   Sign in
+ * </button>
+ * ...
+ * ```
+ * *Resources:*
+ * - [NextAuth.js Documentation](https://next-auth.js.org/providers/dropbox)
+ * - [Dropbox Documentation](https://developers.dropbox.com/oauth-guide)
+ * - [Configuration](https://www.dropbox.com/developers/apps)
+ */
+/** @type {import(".").OAuthProvider} */
 export default function Dropbox(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=dropbox.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/dropbox.d.ts.map b/node_modules/next-auth/providers/dropbox.d.ts.map
deleted file mode 100644
index 48d06a4..0000000
--- a/node_modules/next-auth/providers/dropbox.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"dropbox.d.ts","sourceRoot":"","sources":["../src/providers/dropbox.js"],"names":[],"mappings":"AAmDiiH,0HAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/duende-identity-server6.d.ts b/node_modules/next-auth/providers/duende-identity-server6.d.ts
index 03442bf..abbb980 100644
--- a/node_modules/next-auth/providers/duende-identity-server6.d.ts
+++ b/node_modules/next-auth/providers/duende-identity-server6.d.ts
@@ -6,4 +6,3 @@ export interface DuendeISUser extends Record<string, any> {
     verified: boolean;
 }
 export default function DuendeIdentityServer6<P extends DuendeISUser>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=duende-identity-server6.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/duende-identity-server6.d.ts.map b/node_modules/next-auth/providers/duende-identity-server6.d.ts.map
deleted file mode 100644
index 7a6d26a..0000000
--- a/node_modules/next-auth/providers/duende-identity-server6.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"duende-identity-server6.d.ts","sourceRoot":"","sources":["../src/providers/duende-identity-server6.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,SAAS,CAAA;AAE3D,MAAM,WAAW,YAAa,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACvD,KAAK,EAAE,MAAM,CAAA;IACb,EAAE,EAAE,MAAM,CAAA;IACV,IAAI,EAAE,MAAM,CAAA;IACZ,QAAQ,EAAE,OAAO,CAAA;CAClB;AAED,MAAM,CAAC,OAAO,UAAU,qBAAqB,CAAC,CAAC,SAAS,YAAY,EAClE,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAmBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/email.d.ts b/node_modules/next-auth/providers/email.d.ts
index 02c1e92..76c46b0 100644
--- a/node_modules/next-auth/providers/email.d.ts
+++ b/node_modules/next-auth/providers/email.d.ts
@@ -56,8 +56,7 @@ export interface EmailConfig extends CommonProviderOptions {
     normalizeIdentifier?: (identifier: string) => string;
     options: EmailUserConfig;
 }
-export type EmailUserConfig = Partial<Omit<EmailConfig, "options">>;
-export type EmailProvider = (options: EmailUserConfig) => EmailConfig;
-export type EmailProviderType = "Email";
+export declare type EmailUserConfig = Partial<Omit<EmailConfig, "options">>;
+export declare type EmailProvider = (options: EmailUserConfig) => EmailConfig;
+export declare type EmailProviderType = "Email";
 export default function Email(options: EmailUserConfig): EmailConfig;
-//# sourceMappingURL=email.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/email.d.ts.map b/node_modules/next-auth/providers/email.d.ts.map
deleted file mode 100644
index d786cf0..0000000
--- a/node_modules/next-auth/providers/email.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"email.d.ts","sourceRoot":"","sources":["../src/providers/email.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,qBAAqB,EAAE,MAAM,GAAG,CAAA;AAC9C,OAAO,KAAK,EAAE,OAAO,IAAI,oBAAoB,EAAE,MAAM,+BAA+B,CAAA;AACpF,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,IAAI,CAAA;AACnC,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,eAAe,CAAA;AAE1C,MAAM,WAAW,6BAA6B;IAC5C,UAAU,EAAE,MAAM,CAAA;IAClB,GAAG,EAAE,MAAM,CAAA;IACX,OAAO,EAAE,IAAI,CAAA;IACb,QAAQ,EAAE,WAAW,CAAA;IACrB,KAAK,EAAE,MAAM,CAAA;IACb,KAAK,EAAE,KAAK,CAAA;CACb;AAED,MAAM,WAAW,WAAY,SAAQ,qBAAqB;IACxD,IAAI,EAAE,OAAO,CAAA;IAEb,MAAM,EAAE,MAAM,GAAG,oBAAoB,CAAA;IACrC,iDAAiD;IACjD,IAAI,CAAC,EAAE,MAAM,CAAA;IACb;;;;OAIG;IACH,MAAM,CAAC,EAAE,MAAM,CAAA;IACf,mFAAmF;IACnF,uBAAuB,EAAE,CACvB,MAAM,EAAE,6BAA6B,KAClC,SAAS,CAAC,IAAI,CAAC,CAAA;IACpB;;;;;;;;;;;;OAYG;IACH,yBAAyB,CAAC,EAAE,MAAM,SAAS,CAAC,MAAM,CAAC,CAAA;IACnD,0FAA0F;IAC1F,MAAM,CAAC,EAAE,MAAM,CAAA;IACf;;;;;;;;;;;;;OAaG;IACH,mBAAmB,CAAC,EAAE,CAAC,UAAU,EAAE,MAAM,KAAK,MAAM,CAAA;IACpD,OAAO,EAAE,eAAe,CAAA;CACzB;AAED,MAAM,MAAM,eAAe,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAA;AAEnE,MAAM,MAAM,aAAa,GAAG,CAAC,OAAO,EAAE,eAAe,KAAK,WAAW,CAAA;AAIrE,MAAM,MAAM,iBAAiB,GAAG,OAAO,CAAA;AAEvC,MAAM,CAAC,OAAO,UAAU,KAAK,CAAC,OAAO,EAAE,eAAe,GAAG,WAAW,CA2BnE"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/eveonline.d.ts b/node_modules/next-auth/providers/eveonline.d.ts
index 6710a3a..c20d91f 100644
--- a/node_modules/next-auth/providers/eveonline.d.ts
+++ b/node_modules/next-auth/providers/eveonline.d.ts
@@ -9,4 +9,3 @@ export interface EVEOnlineProfile extends Record<string, any> {
     IntellectualProperty: string;
 }
 export default function EVEOnline<P extends EVEOnlineProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=eveonline.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/eveonline.d.ts.map b/node_modules/next-auth/providers/eveonline.d.ts.map
deleted file mode 100644
index a9b37e7..0000000
--- a/node_modules/next-auth/providers/eveonline.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"eveonline.d.ts","sourceRoot":"","sources":["../src/providers/eveonline.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,gBAAiB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC3D,WAAW,EAAE,MAAM,CAAA;IACnB,aAAa,EAAE,MAAM,CAAA;IACrB,SAAS,EAAE,MAAM,CAAA;IACjB,MAAM,EAAE,MAAM,CAAA;IACd,SAAS,EAAE,MAAM,CAAA;IACjB,kBAAkB,EAAE,MAAM,CAAA;IAC1B,oBAAoB,EAAE,MAAM,CAAA;CAC7B;AAED,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,CAAC,SAAS,gBAAgB,EAC1D,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAkBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/facebook.d.ts b/node_modules/next-auth/providers/facebook.d.ts
index f4f65d6..7855859 100644
--- a/node_modules/next-auth/providers/facebook.d.ts
+++ b/node_modules/next-auth/providers/facebook.d.ts
@@ -11,4 +11,3 @@ export interface FacebookProfile extends Record<string, any> {
 }
 export default function Facebook<P extends FacebookProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
 export {};
-//# sourceMappingURL=facebook.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/facebook.d.ts.map b/node_modules/next-auth/providers/facebook.d.ts.map
deleted file mode 100644
index 5103c7a..0000000
--- a/node_modules/next-auth/providers/facebook.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"facebook.d.ts","sourceRoot":"","sources":["../src/providers/facebook.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,UAAU,mBAAmB;IAC3B,GAAG,EAAE,MAAM,CAAA;CACZ;AAED,UAAU,eAAe;IACvB,IAAI,EAAE,mBAAmB,CAAA;CAC1B;AACD,MAAM,WAAW,eAAgB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC1D,EAAE,EAAE,MAAM,CAAA;IACV,OAAO,EAAE,eAAe,CAAA;CACzB;AAED,MAAM,CAAC,OAAO,UAAU,QAAQ,CAAC,CAAC,SAAS,eAAe,EACxD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAqChB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/faceit.d.ts b/node_modules/next-auth/providers/faceit.d.ts
index b6816ff..58db066 100644
--- a/node_modules/next-auth/providers/faceit.d.ts
+++ b/node_modules/next-auth/providers/faceit.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function FACEIT(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=faceit.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/faceit.d.ts.map b/node_modules/next-auth/providers/faceit.d.ts.map
deleted file mode 100644
index 12c157a..0000000
--- a/node_modules/next-auth/providers/faceit.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"faceit.d.ts","sourceRoot":"","sources":["../src/providers/faceit.js"],"names":[],"mappings":"AAyBssI,yHAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/foursquare.d.ts b/node_modules/next-auth/providers/foursquare.d.ts
index b70c164..a71536f 100644
--- a/node_modules/next-auth/providers/foursquare.d.ts
+++ b/node_modules/next-auth/providers/foursquare.d.ts
@@ -1,2 +1,3 @@
+/** @type {import("src/providers").OAuthProvider} */
+/** @type {import(".").OAuthProvider} */
 export default function Foursquare(options: Partial<import("src/providers").OAuthConfig<any>>): import("src/providers").OAuthConfig<any>;
-//# sourceMappingURL=foursquare.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/foursquare.d.ts.map b/node_modules/next-auth/providers/foursquare.d.ts.map
deleted file mode 100644
index 85c6ca3..0000000
--- a/node_modules/next-auth/providers/foursquare.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"foursquare.d.ts","sourceRoot":"","sources":["../src/providers/foursquare.js"],"names":[],"mappings":"AA+DwnG,yIAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/freshbooks.d.ts b/node_modules/next-auth/providers/freshbooks.d.ts
index d66028d..642c6df 100644
--- a/node_modules/next-auth/providers/freshbooks.d.ts
+++ b/node_modules/next-auth/providers/freshbooks.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function Freshbooks(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=freshbooks.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/freshbooks.d.ts.map b/node_modules/next-auth/providers/freshbooks.d.ts.map
deleted file mode 100644
index 8f1d286..0000000
--- a/node_modules/next-auth/providers/freshbooks.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"freshbooks.d.ts","sourceRoot":"","sources":["../src/providers/freshbooks.js"],"names":[],"mappings":"AA8BmgI,6HAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/fusionauth.d.ts b/node_modules/next-auth/providers/fusionauth.d.ts
index fa8f4ca..e3c810e 100644
--- a/node_modules/next-auth/providers/fusionauth.d.ts
+++ b/node_modules/next-auth/providers/fusionauth.d.ts
@@ -21,4 +21,3 @@ export interface FusionAuthProfile extends Record<string, any> {
 export default function FusionAuth<P extends FusionAuthProfile>(options: OAuthUserConfig<P> & {
     tenantId?: string;
 }): OAuthConfig<P>;
-//# sourceMappingURL=fusionauth.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/fusionauth.d.ts.map b/node_modules/next-auth/providers/fusionauth.d.ts.map
deleted file mode 100644
index 090f166..0000000
--- a/node_modules/next-auth/providers/fusionauth.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"fusionauth.d.ts","sourceRoot":"","sources":["../src/providers/fusionauth.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,SAAS,CAAA;AAEtD;;GAEG;AACH,MAAM,WAAW,iBAAkB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC5D,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,kBAAkB,EAAE,MAAM,CAAA;IAC1B,KAAK,EAAE,MAAM,CAAA;IACb,cAAc,EAAE,OAAO,CAAA;IACvB,kBAAkB,EAAE,MAAM,CAAA;IAC1B,OAAO,EAAE,MAAM,CAAA;IACf,MAAM,EAAE,MAAM,CAAA;IACd,KAAK,EAAE,MAAM,CAAA;IACb,GAAG,EAAE,MAAM,CAAA;CACZ;AAED,MAAM,CAAC,OAAO,UAAU,UAAU,CAAC,CAAC,SAAS,iBAAiB,EAE5D,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAAG;IAAE,QAAQ,CAAC,EAAE,MAAM,CAAA;CAAE,GAClD,WAAW,CAAC,CAAC,CAAC,CAwBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/github.d.ts b/node_modules/next-auth/providers/github.d.ts
index 6864f3a..5c3ff32 100644
--- a/node_modules/next-auth/providers/github.d.ts
+++ b/node_modules/next-auth/providers/github.d.ts
@@ -54,4 +54,3 @@ export interface GithubEmail extends Record<string, any> {
     visibility: "public" | "private";
 }
 export default function Github<P extends GithubProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=github.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/github.d.ts.map b/node_modules/next-auth/providers/github.d.ts.map
deleted file mode 100644
index c6b4686..0000000
--- a/node_modules/next-auth/providers/github.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"github.d.ts","sourceRoot":"","sources":["../src/providers/github.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,kFAAkF;AAClF,MAAM,WAAW,aAAc,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACxD,KAAK,EAAE,MAAM,CAAA;IACb,EAAE,EAAE,MAAM,CAAA;IACV,OAAO,EAAE,MAAM,CAAA;IACf,UAAU,EAAE,MAAM,CAAA;IAClB,WAAW,EAAE,MAAM,GAAG,IAAI,CAAA;IAC1B,GAAG,EAAE,MAAM,CAAA;IACX,QAAQ,EAAE,MAAM,CAAA;IAChB,aAAa,EAAE,MAAM,CAAA;IACrB,aAAa,EAAE,MAAM,CAAA;IACrB,SAAS,EAAE,MAAM,CAAA;IACjB,WAAW,EAAE,MAAM,CAAA;IACnB,iBAAiB,EAAE,MAAM,CAAA;IACzB,iBAAiB,EAAE,MAAM,CAAA;IACzB,SAAS,EAAE,MAAM,CAAA;IACjB,UAAU,EAAE,MAAM,CAAA;IAClB,mBAAmB,EAAE,MAAM,CAAA;IAC3B,IAAI,EAAE,MAAM,CAAA;IACZ,UAAU,EAAE,OAAO,CAAA;IACnB,IAAI,EAAE,MAAM,GAAG,IAAI,CAAA;IACnB,OAAO,EAAE,MAAM,GAAG,IAAI,CAAA;IACtB,IAAI,EAAE,MAAM,GAAG,IAAI,CAAA;IACnB,QAAQ,EAAE,MAAM,GAAG,IAAI,CAAA;IACvB,KAAK,EAAE,MAAM,GAAG,IAAI,CAAA;IACpB,QAAQ,EAAE,OAAO,GAAG,IAAI,CAAA;IACxB,GAAG,EAAE,MAAM,GAAG,IAAI,CAAA;IAClB,gBAAgB,CAAC,EAAE,MAAM,GAAG,IAAI,CAAA;IAChC,YAAY,EAAE,MAAM,CAAA;IACpB,YAAY,EAAE,MAAM,CAAA;IACpB,SAAS,EAAE,MAAM,CAAA;IACjB,SAAS,EAAE,MAAM,CAAA;IACjB,UAAU,EAAE,MAAM,CAAA;IAClB,UAAU,EAAE,MAAM,CAAA;IAClB,aAAa,CAAC,EAAE,MAAM,CAAA;IACtB,mBAAmB,CAAC,EAAE,MAAM,CAAA;IAC5B,mBAAmB,CAAC,EAAE,MAAM,CAAA;IAC5B,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,YAAY,CAAC,EAAE,MAAM,GAAG,IAAI,CAAA;IAC5B,aAAa,CAAC,EAAE,MAAM,CAAA;IACtB,yBAAyB,EAAE,OAAO,CAAA;IAClC,IAAI,CAAC,EAAE;QACL,aAAa,EAAE,MAAM,CAAA;QACrB,IAAI,EAAE,MAAM,CAAA;QACZ,KAAK,EAAE,MAAM,CAAA;QACb,aAAa,EAAE,MAAM,CAAA;KACtB,CAAA;CACF;AAED,MAAM,WAAW,WAAY,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACtD,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,OAAO,CAAA;IAChB,QAAQ,EAAE,OAAO,CAAA;IACjB,UAAU,EAAE,QAAQ,GAAG,SAAS,CAAA;CACjC;AAED,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,CAAC,SAAS,aAAa,EACpD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAkDhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/gitlab.d.ts b/node_modules/next-auth/providers/gitlab.d.ts
index ab86aa3..d27091b 100644
--- a/node_modules/next-auth/providers/gitlab.d.ts
+++ b/node_modules/next-auth/providers/gitlab.d.ts
@@ -44,4 +44,3 @@ export interface GitLabProfile extends Record<string, any> {
     extra_shared_runners_minutes_limit: number;
 }
 export default function GitLab<P extends GitLabProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=gitlab.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/gitlab.d.ts.map b/node_modules/next-auth/providers/gitlab.d.ts.map
deleted file mode 100644
index 6145d9f..0000000
--- a/node_modules/next-auth/providers/gitlab.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"gitlab.d.ts","sourceRoot":"","sources":["../src/providers/gitlab.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,aAAc,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACxD,EAAE,EAAE,MAAM,CAAA;IACV,QAAQ,EAAE,MAAM,CAAA;IAChB,KAAK,EAAE,MAAM,CAAA;IACb,IAAI,EAAE,MAAM,CAAA;IACZ,KAAK,EAAE,MAAM,CAAA;IACb,UAAU,EAAE,MAAM,CAAA;IAClB,OAAO,EAAE,MAAM,CAAA;IACf,UAAU,EAAE,MAAM,CAAA;IAClB,GAAG,EAAE,MAAM,CAAA;IACX,QAAQ,CAAC,EAAE,MAAM,CAAA;IACjB,YAAY,EAAE,MAAM,CAAA;IACpB,KAAK,EAAE,MAAM,CAAA;IACb,QAAQ,EAAE,MAAM,CAAA;IAChB,OAAO,EAAE,MAAM,CAAA;IACf,WAAW,EAAE,MAAM,CAAA;IACnB,YAAY,EAAE,MAAM,CAAA;IACpB,SAAS,EAAE,MAAM,CAAA;IACjB,QAAQ,EAAE,MAAM,CAAA;IAChB,GAAG,EAAE,OAAO,CAAA;IACZ,gBAAgB,CAAC,EAAE,MAAM,CAAA;IACzB,SAAS,EAAE,MAAM,CAAA;IACjB,SAAS,EAAE,MAAM,CAAA;IACjB,UAAU,EAAE,MAAM,CAAA;IAClB,eAAe,EAAE,MAAM,CAAA;IACvB,YAAY,EAAE,MAAM,CAAA;IACpB,QAAQ,EAAE,MAAM,CAAA;IAChB,gBAAgB,EAAE,MAAM,CAAA;IACxB,eAAe,EAAE,MAAM,CAAA;IACvB,cAAc,EAAE,MAAM,CAAA;IACtB,kBAAkB,EAAE,MAAM,CAAA;IAC1B,UAAU,EAAE,KAAK,CAAC;QAChB,QAAQ,EAAE,MAAM,CAAA;QAChB,UAAU,EAAE,MAAM,CAAA;KACnB,CAAC,CAAA;IACF,gBAAgB,EAAE,OAAO,CAAA;IACzB,kBAAkB,EAAE,OAAO,CAAA;IAC3B,kBAAkB,EAAE,OAAO,CAAA;IAC3B,QAAQ,EAAE,OAAO,CAAA;IACjB,eAAe,EAAE,OAAO,CAAA;IACxB,YAAY,EAAE,MAAM,CAAA;IACpB,4BAA4B,EAAE,MAAM,CAAA;IACpC,kCAAkC,EAAE,MAAM,CAAA;CAC3C;AAED,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,CAAC,SAAS,aAAa,EACpD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA8BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/google.d.ts b/node_modules/next-auth/providers/google.d.ts
index c72c7af..694021a 100644
--- a/node_modules/next-auth/providers/google.d.ts
+++ b/node_modules/next-auth/providers/google.d.ts
@@ -17,4 +17,3 @@ export interface GoogleProfile extends Record<string, any> {
     sub: string;
 }
 export default function Google<P extends GoogleProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=google.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/google.d.ts.map b/node_modules/next-auth/providers/google.d.ts.map
deleted file mode 100644
index 079c5a7..0000000
--- a/node_modules/next-auth/providers/google.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"google.d.ts","sourceRoot":"","sources":["../src/providers/google.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,aAAc,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACxD,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,KAAK,EAAE,MAAM,CAAA;IACb,cAAc,EAAE,OAAO,CAAA;IACvB,GAAG,EAAE,MAAM,CAAA;IACX,WAAW,EAAE,MAAM,CAAA;IACnB,UAAU,EAAE,MAAM,CAAA;IAClB,EAAE,EAAE,MAAM,CAAA;IACV,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,IAAI,EAAE,MAAM,CAAA;IACZ,GAAG,EAAE,MAAM,CAAA;IACX,OAAO,EAAE,MAAM,CAAA;IACf,GAAG,EAAE,MAAM,CAAA;CACZ;AAED,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,CAAC,SAAS,aAAa,EACpD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA2BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/hubspot.d.ts b/node_modules/next-auth/providers/hubspot.d.ts
index c639448..73cb03e 100644
--- a/node_modules/next-auth/providers/hubspot.d.ts
+++ b/node_modules/next-auth/providers/hubspot.d.ts
@@ -7,4 +7,3 @@ interface HubSpotProfile extends Record<string, any> {
 }
 export default function HubSpot<P extends HubSpotProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
 export {};
-//# sourceMappingURL=hubspot.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/hubspot.d.ts.map b/node_modules/next-auth/providers/hubspot.d.ts.map
deleted file mode 100644
index b1a4ef5..0000000
--- a/node_modules/next-auth/providers/hubspot.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"hubspot.d.ts","sourceRoot":"","sources":["../src/providers/hubspot.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,UAAU,cAAe,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAIlD,IAAI,EAAE,MAAM,CAAA;IACZ,OAAO,EAAE,MAAM,CAAA;IAEf,UAAU,EAAE,MAAM,CAAA;IAClB,MAAM,EAAE,MAAM,CAAA;CACf;AAQD,MAAM,CAAC,OAAO,UAAU,OAAO,CAAC,CAAC,SAAS,cAAc,EACtD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAuDhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/identity-server4.d.ts b/node_modules/next-auth/providers/identity-server4.d.ts
index ea4420c..5ba4adc 100644
--- a/node_modules/next-auth/providers/identity-server4.d.ts
+++ b/node_modules/next-auth/providers/identity-server4.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function IdentityServer4(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=identity-server4.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/identity-server4.d.ts.map b/node_modules/next-auth/providers/identity-server4.d.ts.map
deleted file mode 100644
index cf9309f..0000000
--- a/node_modules/next-auth/providers/identity-server4.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"identity-server4.d.ts","sourceRoot":"","sources":["../src/providers/identity-server4.js"],"names":[],"mappings":"AAqB61I,kIAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/index.d.ts b/node_modules/next-auth/providers/index.d.ts
index 5fe65d9..532005b 100644
--- a/node_modules/next-auth/providers/index.d.ts
+++ b/node_modules/next-auth/providers/index.d.ts
@@ -4,20 +4,19 @@ import type { CredentialsConfig, CredentialsProvider, CredentialsProviderType }
 export * from "./oauth";
 export * from "./email";
 export * from "./credentials";
-export type ProviderType = "oauth" | "email" | "credentials";
+export declare type ProviderType = "oauth" | "email" | "credentials";
 export interface CommonProviderOptions {
     id: string;
     name: string;
     type: ProviderType;
     options?: Record<string, unknown>;
 }
-export type Provider = OAuthConfig<any> | EmailConfig | CredentialsConfig;
-export type BuiltInProviders = Record<OAuthProviderType, OAuthProvider> & Record<CredentialsProviderType, CredentialsProvider> & Record<EmailProviderType, EmailProvider>;
-export type AppProviders = Array<Provider | ReturnType<BuiltInProviders[keyof BuiltInProviders]>>;
+export declare type Provider = OAuthConfig<any> | EmailConfig | CredentialsConfig;
+export declare type BuiltInProviders = Record<OAuthProviderType, OAuthProvider> & Record<CredentialsProviderType, CredentialsProvider> & Record<EmailProviderType, EmailProvider>;
+export declare type AppProviders = Array<Provider | ReturnType<BuiltInProviders[keyof BuiltInProviders]>>;
 export interface AppProvider extends CommonProviderOptions {
     signinUrl: string;
     callbackUrl: string;
 }
-export type RedirectableProviderType = "email" | "credentials";
-export type BuiltInProviderType = RedirectableProviderType | OAuthProviderType;
-//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
+export declare type RedirectableProviderType = "email" | "credentials";
+export declare type BuiltInProviderType = RedirectableProviderType | OAuthProviderType;
diff --git a/node_modules/next-auth/providers/index.d.ts.map b/node_modules/next-auth/providers/index.d.ts.map
deleted file mode 100644
index da7f72b..0000000
--- a/node_modules/next-auth/providers/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/providers/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,aAAa,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAA;AAE5E,OAAO,KAAK,EAAE,WAAW,EAAE,aAAa,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAA;AAE5E,OAAO,KAAK,EACV,iBAAiB,EACjB,mBAAmB,EACnB,uBAAuB,EACxB,MAAM,eAAe,CAAA;AAEtB,cAAc,SAAS,CAAA;AACvB,cAAc,SAAS,CAAA;AACvB,cAAc,eAAe,CAAA;AAE7B,MAAM,MAAM,YAAY,GAAG,OAAO,GAAG,OAAO,GAAG,aAAa,CAAA;AAE5D,MAAM,WAAW,qBAAqB;IACpC,EAAE,EAAE,MAAM,CAAA;IACV,IAAI,EAAE,MAAM,CAAA;IACZ,IAAI,EAAE,YAAY,CAAA;IAClB,OAAO,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;CAClC;AAED,MAAM,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,GAAG,WAAW,GAAG,iBAAiB,CAAA;AAEzE,MAAM,MAAM,gBAAgB,GAAG,MAAM,CAAC,iBAAiB,EAAE,aAAa,CAAC,GACrE,MAAM,CAAC,uBAAuB,EAAE,mBAAmB,CAAC,GACpD,MAAM,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAA;AAE1C,MAAM,MAAM,YAAY,GAAG,KAAK,CAC9B,QAAQ,GAAG,UAAU,CAAC,gBAAgB,CAAC,MAAM,gBAAgB,CAAC,CAAC,CAChE,CAAA;AAED,MAAM,WAAW,WAAY,SAAQ,qBAAqB;IACxD,SAAS,EAAE,MAAM,CAAA;IACjB,WAAW,EAAE,MAAM,CAAA;CACpB;AAED,MAAM,MAAM,wBAAwB,GAAG,OAAO,GAAG,aAAa,CAAA;AAE9D,MAAM,MAAM,mBAAmB,GAAG,wBAAwB,GAAG,iBAAiB,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/instagram.d.ts b/node_modules/next-auth/providers/instagram.d.ts
index 83bb23d..7406fde 100644
--- a/node_modules/next-auth/providers/instagram.d.ts
+++ b/node_modules/next-auth/providers/instagram.d.ts
@@ -1,2 +1,28 @@
+/**
+ * @type {import("src/providers").OAuthProvider} options
+ * @example
+ *
+ * ```js
+ * // pages/api/auth/[...nextauth].js
+ * import Providers from `next-auth/providers`
+ * ...
+ * providers: [
+ *   Providers.Instagram({
+ *     clientId: process.env.INSTAGRAM_CLIENT_ID,
+ *     clientSecret: process.env.INSTAGRAM_CLIENT_SECRET
+ *   })
+ * ]
+ * ...
+ *
+ * // pages/index
+ * import { signIn } from "next-auth/react"
+ * ...
+ * <button onClick={() => signIn("instagram")}>
+ *   Sign in
+ * </button>
+ * ...
+ * ```
+ * [NextAuth.js Documentation](https://next-auth.js.org/providers/instagram) | [Instagram Documentation](https://developers.facebook.com/docs/instagram-basic-display-api/getting-started) | [Configuration](https://developers.facebook.com/apps)
+ */
+/** @type {import(".").OAuthProvider} */
 export default function Instagram(options: Partial<import("src/providers").OAuthConfig<any>>): import("src/providers").OAuthConfig<any>;
-//# sourceMappingURL=instagram.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/instagram.d.ts.map b/node_modules/next-auth/providers/instagram.d.ts.map
deleted file mode 100644
index d980bab..0000000
--- a/node_modules/next-auth/providers/instagram.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"instagram.d.ts","sourceRoot":"","sources":["../src/providers/instagram.js"],"names":[],"mappings":"AA2Dm1G,wIAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/kakao.d.ts b/node_modules/next-auth/providers/kakao.d.ts
index cf69e1e..ca64e76 100644
--- a/node_modules/next-auth/providers/kakao.d.ts
+++ b/node_modules/next-auth/providers/kakao.d.ts
@@ -1,7 +1,7 @@
 import type { OAuthConfig, OAuthUserConfig } from ".";
-export type DateTime = string;
-export type Gender = "female" | "male";
-export type AgeRange = "1-9" | "10-14" | "15-19" | "20-29" | "30-39" | "40-49" | "50-59" | "60-69" | "70-79" | "80-89" | "90-";
+export declare type DateTime = string;
+export declare type Gender = "female" | "male";
+export declare type AgeRange = "1-9" | "10-14" | "15-19" | "20-29" | "30-39" | "40-49" | "50-59" | "60-69" | "70-79" | "80-89" | "90-";
 /**
  * https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api#req-user-info
  * type from : https://gist.github.com/ziponia/cdce1ebd88f979b2a6f3f53416b56a77
@@ -53,4 +53,3 @@ export interface KakaoProfile extends Record<string, any> {
     };
 }
 export default function Kakao<P extends KakaoProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=kakao.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/kakao.d.ts.map b/node_modules/next-auth/providers/kakao.d.ts.map
deleted file mode 100644
index f827c11..0000000
--- a/node_modules/next-auth/providers/kakao.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"kakao.d.ts","sourceRoot":"","sources":["../src/providers/kakao.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,MAAM,QAAQ,GAAG,MAAM,CAAA;AAC7B,MAAM,MAAM,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAA;AACtC,MAAM,MAAM,QAAQ,GAChB,KAAK,GACL,OAAO,GACP,OAAO,GACP,OAAO,GACP,OAAO,GACP,OAAO,GACP,OAAO,GACP,OAAO,GACP,OAAO,GACP,OAAO,GACP,KAAK,CAAA;AAET;;;GAGG;AACH,MAAM,WAAW,YAAa,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACvD,EAAE,EAAE,MAAM,CAAA;IACV,aAAa,CAAC,EAAE,OAAO,CAAA;IACvB,YAAY,CAAC,EAAE,QAAQ,CAAA;IACvB,UAAU,CAAC,EAAE,QAAQ,CAAA;IACrB,UAAU,CAAC,EAAE;QACX,EAAE,CAAC,EAAE,MAAM,CAAA;QACX,MAAM,CAAC,EAAE,MAAM,CAAA;QACf,aAAa,CAAC,EAAE,QAAQ,CAAA;QACxB,WAAW,CAAC,EAAE,OAAO,CAAA;QACrB,QAAQ,CAAC,EAAE,MAAM,CAAA;QACjB,aAAa,CAAC,EAAE,MAAM,CAAA;QACtB,eAAe,CAAC,EAAE,MAAM,CAAA;KACzB,CAAA;IACD,aAAa,CAAC,EAAE;QACd,uBAAuB,CAAC,EAAE,OAAO,CAAA;QACjC,gCAAgC,CAAC,EAAE,OAAO,CAAA;QAC1C,6BAA6B,CAAC,EAAE,OAAO,CAAA;QACvC,OAAO,CAAC,EAAE;YACR,QAAQ,CAAC,EAAE,MAAM,CAAA;YACjB,mBAAmB,CAAC,EAAE,MAAM,CAAA;YAC5B,iBAAiB,CAAC,EAAE,MAAM,CAAA;YAC1B,gBAAgB,CAAC,EAAE,OAAO,CAAA;SAC3B,CAAA;QACD,oBAAoB,CAAC,EAAE,OAAO,CAAA;QAC9B,IAAI,CAAC,EAAE,MAAM,CAAA;QACb,qBAAqB,CAAC,EAAE,OAAO,CAAA;QAC/B,cAAc,CAAC,EAAE,OAAO,CAAA;QACxB,iBAAiB,CAAC,EAAE,OAAO,CAAA;QAC3B,KAAK,CAAC,EAAE,MAAM,CAAA;QACd,yBAAyB,CAAC,EAAE,OAAO,CAAA;QACnC,SAAS,CAAC,EAAE,QAAQ,CAAA;QACpB,yBAAyB,CAAC,EAAE,OAAO,CAAA;QACnC,SAAS,CAAC,EAAE,MAAM,CAAA;QAClB,wBAAwB,CAAC,EAAE,OAAO,CAAA;QAClC,QAAQ,CAAC,EAAE,MAAM,CAAA;QACjB,aAAa,CAAC,EAAE,MAAM,CAAA;QACtB,sBAAsB,CAAC,EAAE,OAAO,CAAA;QAChC,MAAM,CAAC,EAAE,MAAM,CAAA;QACf,4BAA4B,CAAC,EAAE,OAAO,CAAA;QACtC,YAAY,CAAC,EAAE,MAAM,CAAA;QACrB,kBAAkB,CAAC,EAAE,OAAO,CAAA;QAC5B,EAAE,CAAC,EAAE,MAAM,CAAA;QACX,mBAAmB,CAAC,EAAE,QAAQ,CAAA;KAC/B,CAAA;CACF;AAED,MAAM,CAAC,OAAO,UAAU,KAAK,CAAC,CAAC,SAAS,YAAY,EAClD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAqBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/keycloak.d.ts b/node_modules/next-auth/providers/keycloak.d.ts
index e12b2e7..b15bf8e 100644
--- a/node_modules/next-auth/providers/keycloak.d.ts
+++ b/node_modules/next-auth/providers/keycloak.d.ts
@@ -23,4 +23,3 @@ export interface KeycloakProfile extends Record<string, any> {
     user: any;
 }
 export default function Keycloak<P extends KeycloakProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=keycloak.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/keycloak.d.ts.map b/node_modules/next-auth/providers/keycloak.d.ts.map
deleted file mode 100644
index 8210351..0000000
--- a/node_modules/next-auth/providers/keycloak.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"keycloak.d.ts","sourceRoot":"","sources":["../src/providers/keycloak.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,eAAgB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC1D,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,SAAS,EAAE,MAAM,CAAA;IACjB,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,aAAa,EAAE,MAAM,CAAA;IACrB,OAAO,EAAE,MAAM,CAAA;IACf,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,cAAc,EAAE,OAAO,CAAA;IACvB,IAAI,EAAE,MAAM,CAAA;IACZ,kBAAkB,EAAE,MAAM,CAAA;IAC1B,UAAU,EAAE,MAAM,CAAA;IAClB,WAAW,EAAE,MAAM,CAAA;IACnB,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;IACf,IAAI,EAAE,GAAG,CAAA;CACV;AAED,MAAM,CAAC,OAAO,UAAU,QAAQ,CAAC,CAAC,SAAS,eAAe,EACxD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA2BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/line.d.ts b/node_modules/next-auth/providers/line.d.ts
index f1df6ed..dffbdff 100644
--- a/node_modules/next-auth/providers/line.d.ts
+++ b/node_modules/next-auth/providers/line.d.ts
@@ -11,4 +11,3 @@ export interface LineProfile extends Record<string, any> {
     user: any;
 }
 export default function LINE<P extends LineProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=line.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/line.d.ts.map b/node_modules/next-auth/providers/line.d.ts.map
deleted file mode 100644
index c9ee0b5..0000000
--- a/node_modules/next-auth/providers/line.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"line.d.ts","sourceRoot":"","sources":["../src/providers/line.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,WAAY,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACtD,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,EAAE,CAAA;IACb,IAAI,EAAE,MAAM,CAAA;IACZ,OAAO,EAAE,MAAM,CAAA;IACf,IAAI,EAAE,GAAG,CAAA;CACV;AAED,MAAM,CAAC,OAAO,UAAU,IAAI,CAAC,CAAC,SAAS,WAAW,EAChD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA6BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/linkedin.d.ts b/node_modules/next-auth/providers/linkedin.d.ts
index 8ae6663..0c03e9c 100644
--- a/node_modules/next-auth/providers/linkedin.d.ts
+++ b/node_modules/next-auth/providers/linkedin.d.ts
@@ -17,4 +17,3 @@ export interface LinkedInProfile extends Record<string, any> {
 }
 export default function LinkedIn<P extends LinkedInProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
 export {};
-//# sourceMappingURL=linkedin.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/linkedin.d.ts.map b/node_modules/next-auth/providers/linkedin.d.ts.map
deleted file mode 100644
index f5436dc..0000000
--- a/node_modules/next-auth/providers/linkedin.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"linkedin.d.ts","sourceRoot":"","sources":["../src/providers/linkedin.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,UAAU,UAAU;IAClB,UAAU,EAAE,MAAM,CAAA;CACnB;AAED,UAAU,OAAO;IACf,WAAW,CAAC,EAAE,UAAU,EAAE,CAAA;CAC3B;AAED,MAAM,WAAW,eAAgB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC1D,EAAE,EAAE,MAAM,CAAA;IACV,kBAAkB,EAAE,MAAM,CAAA;IAC1B,iBAAiB,EAAE,MAAM,CAAA;IACzB,cAAc,EAAE;QACd,eAAe,EAAE;YACf,QAAQ,CAAC,EAAE,OAAO,EAAE,CAAA;SACrB,CAAA;KACF,CAAA;CACF;AAED,MAAM,CAAC,OAAO,UAAU,QAAQ,CAAC,CAAC,SAAS,eAAe,EACxD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA4ChB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/mailchimp.d.ts b/node_modules/next-auth/providers/mailchimp.d.ts
index 9cb051e..ea53aec 100644
--- a/node_modules/next-auth/providers/mailchimp.d.ts
+++ b/node_modules/next-auth/providers/mailchimp.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function Mailchimp(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=mailchimp.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/mailchimp.d.ts.map b/node_modules/next-auth/providers/mailchimp.d.ts.map
deleted file mode 100644
index 5abd549..0000000
--- a/node_modules/next-auth/providers/mailchimp.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"mailchimp.d.ts","sourceRoot":"","sources":["../src/providers/mailchimp.js"],"names":[],"mappings":"AA4B6qI,4HAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/mailru.d.ts b/node_modules/next-auth/providers/mailru.d.ts
index 9b0f95c..a3cee24 100644
--- a/node_modules/next-auth/providers/mailru.d.ts
+++ b/node_modules/next-auth/providers/mailru.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function MailRu(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=mailru.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/mailru.d.ts.map b/node_modules/next-auth/providers/mailru.d.ts.map
deleted file mode 100644
index d2d79d6..0000000
--- a/node_modules/next-auth/providers/mailru.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"mailru.d.ts","sourceRoot":"","sources":["../src/providers/mailru.js"],"names":[],"mappings":"AAoB84I,yHAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/medium.d.ts b/node_modules/next-auth/providers/medium.d.ts
index c1a5eab..a5f1040 100644
--- a/node_modules/next-auth/providers/medium.d.ts
+++ b/node_modules/next-auth/providers/medium.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function Medium(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=medium.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/medium.d.ts.map b/node_modules/next-auth/providers/medium.d.ts.map
deleted file mode 100644
index 633735a..0000000
--- a/node_modules/next-auth/providers/medium.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"medium.d.ts","sourceRoot":"","sources":["../src/providers/medium.js"],"names":[],"mappings":"AAoBs3I,yHAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/naver.d.ts b/node_modules/next-auth/providers/naver.d.ts
index 7e60de4..c2bc444 100644
--- a/node_modules/next-auth/providers/naver.d.ts
+++ b/node_modules/next-auth/providers/naver.d.ts
@@ -17,4 +17,3 @@ export interface NaverProfile extends Record<string, any> {
     };
 }
 export default function Naver<P extends NaverProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=naver.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/naver.d.ts.map b/node_modules/next-auth/providers/naver.d.ts.map
deleted file mode 100644
index b81acf4..0000000
--- a/node_modules/next-auth/providers/naver.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"naver.d.ts","sourceRoot":"","sources":["../src/providers/naver.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,iEAAiE;AACjE,MAAM,WAAW,YAAa,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACvD,UAAU,EAAE,MAAM,CAAA;IAClB,OAAO,EAAE,MAAM,CAAA;IACf,QAAQ,EAAE;QACR,EAAE,EAAE,MAAM,CAAA;QACV,QAAQ,CAAC,EAAE,MAAM,CAAA;QACjB,IAAI,CAAC,EAAE,MAAM,CAAA;QACb,KAAK,CAAC,EAAE,MAAM,CAAA;QACd,MAAM,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA;QACxB,GAAG,CAAC,EAAE,MAAM,CAAA;QACZ,QAAQ,CAAC,EAAE,MAAM,CAAA;QACjB,aAAa,CAAC,EAAE,MAAM,CAAA;QACtB,SAAS,CAAC,EAAE,MAAM,CAAA;QAClB,MAAM,CAAC,EAAE,MAAM,CAAA;KAChB,CAAA;CACF;AAED,MAAM,CAAC,OAAO,UAAU,KAAK,CAAC,CAAC,SAAS,YAAY,EAClD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAmBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/netlify.d.ts b/node_modules/next-auth/providers/netlify.d.ts
index 76ace9e..a122aa0 100644
--- a/node_modules/next-auth/providers/netlify.d.ts
+++ b/node_modules/next-auth/providers/netlify.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function Netlify(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=netlify.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/netlify.d.ts.map b/node_modules/next-auth/providers/netlify.d.ts.map
deleted file mode 100644
index 99aefec..0000000
--- a/node_modules/next-auth/providers/netlify.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"netlify.d.ts","sourceRoot":"","sources":["../src/providers/netlify.js"],"names":[],"mappings":"AAoB83I,0HAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/oauth-types.d.ts b/node_modules/next-auth/providers/oauth-types.d.ts
index 8f8c52d..66357c4 100644
--- a/node_modules/next-auth/providers/oauth-types.d.ts
+++ b/node_modules/next-auth/providers/oauth-types.d.ts
@@ -1,2 +1 @@
-export type OAuthProviderType = "42-school" | "apple" | "atlassian" | "auth0" | "authentik" | "azure-ad-b2c" | "azure-ad" | "battlenet" | "box" | "boxyhq-saml" | "bungie" | "cognito" | "coinbase" | "credentials" | "discord" | "dropbox" | "duende-identity-server6" | "email" | "eveonline" | "facebook" | "faceit" | "foursquare" | "freshbooks" | "fusionauth" | "github" | "gitlab" | "google" | "hubspot" | "identity-server4" | "index" | "instagram" | "kakao" | "keycloak" | "line" | "linkedin" | "mailchimp" | "mailru" | "medium" | "naver" | "netlify" | "oauth-types" | "oauth" | "okta" | "onelogin" | "osso" | "osu" | "patreon" | "pinterest" | "pipedrive" | "reddit" | "salesforce" | "slack" | "spotify" | "strava" | "todoist" | "trakt" | "twitch" | "twitter" | "united-effects" | "vk" | "wikimedia" | "wordpress" | "workos" | "yandex" | "zitadel" | "zoho" | "zoom";
-//# sourceMappingURL=oauth-types.d.ts.map
\ No newline at end of file
+export declare type OAuthProviderType = "42-school" | "apple" | "atlassian" | "auth0" | "authentik" | "azure-ad-b2c" | "azure-ad" | "battlenet" | "box" | "boxyhq-saml" | "bungie" | "cognito" | "coinbase" | "credentials" | "discord" | "dropbox" | "duende-identity-server6" | "email" | "eveonline" | "facebook" | "faceit" | "foursquare" | "freshbooks" | "fusionauth" | "github" | "gitlab" | "google" | "hubspot" | "identity-server4" | "index" | "instagram" | "kakao" | "keycloak" | "line" | "linkedin" | "mailchimp" | "mailru" | "medium" | "naver" | "netlify" | "oauth-types" | "oauth" | "okta" | "onelogin" | "osso" | "osu" | "patreon" | "pinterest" | "pipedrive" | "reddit" | "salesforce" | "slack" | "spotify" | "strava" | "todoist" | "trakt" | "twitch" | "twitter" | "united-effects" | "vk" | "wikimedia" | "wordpress" | "workos" | "yandex" | "zitadel" | "zoho" | "zoom";
diff --git a/node_modules/next-auth/providers/oauth-types.d.ts.map b/node_modules/next-auth/providers/oauth-types.d.ts.map
deleted file mode 100644
index 12eee26..0000000
--- a/node_modules/next-auth/providers/oauth-types.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"oauth-types.d.ts","sourceRoot":"","sources":["../src/providers/oauth-types.ts"],"names":[],"mappings":"AAEA,MAAM,MAAM,iBAAiB,GACzB,WAAW,GACX,OAAO,GACP,WAAW,GACX,OAAO,GACP,WAAW,GACX,cAAc,GACd,UAAU,GACV,WAAW,GACX,KAAK,GACL,aAAa,GACb,QAAQ,GACR,SAAS,GACT,UAAU,GACV,aAAa,GACb,SAAS,GACT,SAAS,GACT,yBAAyB,GACzB,OAAO,GACP,WAAW,GACX,UAAU,GACV,QAAQ,GACR,YAAY,GACZ,YAAY,GACZ,YAAY,GACZ,QAAQ,GACR,QAAQ,GACR,QAAQ,GACR,SAAS,GACT,kBAAkB,GAClB,OAAO,GACP,WAAW,GACX,OAAO,GACP,UAAU,GACV,MAAM,GACN,UAAU,GACV,WAAW,GACX,QAAQ,GACR,QAAQ,GACR,OAAO,GACP,SAAS,GACT,aAAa,GACb,OAAO,GACP,MAAM,GACN,UAAU,GACV,MAAM,GACN,KAAK,GACL,SAAS,GACT,WAAW,GACX,WAAW,GACX,QAAQ,GACR,YAAY,GACZ,OAAO,GACP,SAAS,GACT,QAAQ,GACR,SAAS,GACT,OAAO,GACP,QAAQ,GACR,SAAS,GACT,gBAAgB,GAChB,IAAI,GACJ,WAAW,GACX,WAAW,GACX,QAAQ,GACR,QAAQ,GACR,SAAS,GACT,MAAM,GACN,MAAM,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/oauth.d.ts b/node_modules/next-auth/providers/oauth.d.ts
index c2adf84..f444657 100644
--- a/node_modules/next-auth/providers/oauth.d.ts
+++ b/node_modules/next-auth/providers/oauth.d.ts
@@ -2,13 +2,13 @@ import type { CommonProviderOptions } from "../providers";
 import type { Profile, TokenSet, User, Awaitable } from "..";
 import type { AuthorizationParameters, CallbackParamsType, Issuer, ClientMetadata, IssuerMetadata, OAuthCallbackChecks, OpenIDCallbackChecks, HttpOptions } from "openid-client";
 import type { JWK } from "jose";
-type Client = InstanceType<Issuer["Client"]>;
+declare type Client = InstanceType<Issuer["Client"]>;
 export type { OAuthProviderType } from "./oauth-types";
-type ChecksType = "pkce" | "state" | "none" | "nonce";
-export type OAuthChecks = OpenIDCallbackChecks | OAuthCallbackChecks;
-type PartialIssuer = Partial<Pick<IssuerMetadata, "jwks_endpoint" | "issuer">>;
-type UrlParams = Record<string, unknown>;
-type EndpointRequest<C, R, P> = (context: C & {
+declare type ChecksType = "pkce" | "state" | "none" | "nonce";
+export declare type OAuthChecks = OpenIDCallbackChecks | OAuthCallbackChecks;
+declare type PartialIssuer = Partial<Pick<IssuerMetadata, "jwks_endpoint" | "issuer">>;
+declare type UrlParams = Record<string, unknown>;
+declare type EndpointRequest<C, R, P> = (context: C & {
     /** `openid-client` Client */
     client: Client;
     /** Provider is passed for convenience, ans also contains the `callbackUrl`. */
@@ -34,9 +34,9 @@ interface AdvancedEndpointHandler<P extends UrlParams, C, R> {
     request?: EndpointRequest<C, R, P>;
 }
 /** Either an URL (containing all the parameters) or an object with more granular control. */
-export type EndpointHandler<P extends UrlParams, C = any, R = any> = AdvancedEndpointHandler<P, C, R>;
-export type AuthorizationEndpointHandler = EndpointHandler<AuthorizationParameters>;
-export type TokenEndpointHandler = EndpointHandler<UrlParams, {
+export declare type EndpointHandler<P extends UrlParams, C = any, R = any> = AdvancedEndpointHandler<P, C, R>;
+export declare type AuthorizationEndpointHandler = EndpointHandler<AuthorizationParameters>;
+export declare type TokenEndpointHandler = EndpointHandler<UrlParams, {
     /**
      * Parameters extracted from the request to the `/api/auth/callback/:providerId` endpoint.
      * Contains params like `state`.
@@ -50,7 +50,7 @@ export type TokenEndpointHandler = EndpointHandler<UrlParams, {
 }, {
     tokens: TokenSet;
 }>;
-export type UserinfoEndpointHandler = EndpointHandler<UrlParams, {
+export declare type UserinfoEndpointHandler = EndpointHandler<UrlParams, {
     tokens: TokenSet;
 }, Profile>;
 export interface OAuthProviderButtonStyles {
@@ -72,7 +72,6 @@ export interface OAuthConfig<P> extends CommonProviderOptions, PartialIssuer {
      * [Authorization Server Metadata](https://datatracker.ietf.org/doc/html/rfc8414#section-3)
      */
     wellKnown?: string;
-    jwks_endpoint?: string;
     /**
      * The login process will be initiated by sending the user to this URL.
      *
@@ -118,6 +117,5 @@ export interface OAuthConfig<P> extends CommonProviderOptions, PartialIssuer {
     encoding?: string;
     allowDangerousEmailAccountLinking?: boolean;
 }
-export type OAuthUserConfig<P> = Omit<Partial<OAuthConfig<P>>, "options" | "type"> & Required<Pick<OAuthConfig<P>, "clientId" | "clientSecret">>;
-export type OAuthProvider = (options: Partial<OAuthConfig<any>>) => OAuthConfig<any>;
-//# sourceMappingURL=oauth.d.ts.map
\ No newline at end of file
+export declare type OAuthUserConfig<P> = Omit<Partial<OAuthConfig<P>>, "options" | "type"> & Required<Pick<OAuthConfig<P>, "clientId" | "clientSecret">>;
+export declare type OAuthProvider = (options: Partial<OAuthConfig<any>>) => OAuthConfig<any>;
diff --git a/node_modules/next-auth/providers/oauth.d.ts.map b/node_modules/next-auth/providers/oauth.d.ts.map
deleted file mode 100644
index f25aadd..0000000
--- a/node_modules/next-auth/providers/oauth.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"oauth.d.ts","sourceRoot":"","sources":["../src/providers/oauth.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,qBAAqB,EAAE,MAAM,cAAc,CAAA;AACzD,OAAO,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,IAAI,CAAA;AAE5D,OAAO,KAAK,EACV,uBAAuB,EACvB,kBAAkB,EAClB,MAAM,EACN,cAAc,EACd,cAAc,EACd,mBAAmB,EACnB,oBAAoB,EACpB,WAAW,EACZ,MAAM,eAAe,CAAA;AACtB,OAAO,KAAK,EAAE,GAAG,EAAE,MAAM,MAAM,CAAA;AAE/B,KAAK,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA;AAE5C,YAAY,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAA;AAEtD,KAAK,UAAU,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,CAAA;AAErD,MAAM,MAAM,WAAW,GAAG,oBAAoB,GAAG,mBAAmB,CAAA;AAEpE,KAAK,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAA;AAE9E,KAAK,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;AAExC,KAAK,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAC9B,OAAO,EAAE,CAAC,GAAG;IACX,6BAA6B;IAC7B,MAAM,EAAE,MAAM,CAAA;IACd,+EAA+E;IAC/E,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC,GAAG;QACzB,SAAS,EAAE,MAAM,CAAA;QACjB,WAAW,EAAE,MAAM,CAAA;KACpB,CAAA;CACF,KACE,SAAS,CAAC,CAAC,CAAC,CAAA;AAEjB,kEAAkE;AAClE,UAAU,uBAAuB,CAAC,CAAC,SAAS,SAAS,EAAE,CAAC,EAAE,CAAC;IACzD,6EAA6E;IAC7E,GAAG,CAAC,EAAE,MAAM,CAAA;IACZ,2CAA2C;IAC3C,MAAM,CAAC,EAAE,CAAC,CAAA;IACV;;;;;;;OAOG;IACH,OAAO,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CACnC;AAED,6FAA6F;AAC7F,MAAM,MAAM,eAAe,CACzB,CAAC,SAAS,SAAS,EACnB,CAAC,GAAG,GAAG,EACP,CAAC,GAAG,GAAG,IACL,uBAAuB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AAEpC,MAAM,MAAM,4BAA4B,GACtC,eAAe,CAAC,uBAAuB,CAAC,CAAA;AAE1C,MAAM,MAAM,oBAAoB,GAAG,eAAe,CAChD,SAAS,EACT;IACE;;;OAGG;IACH,MAAM,EAAE,kBAAkB,CAAA;IAC1B;;;OAGG;IACH,MAAM,EAAE,WAAW,CAAA;CACpB,EACD;IACE,MAAM,EAAE,QAAQ,CAAA;CACjB,CACF,CAAA;AAED,MAAM,MAAM,uBAAuB,GAAG,eAAe,CACnD,SAAS,EACT;IAAE,MAAM,EAAE,QAAQ,CAAA;CAAE,EACpB,OAAO,CACR,CAAA;AAED,MAAM,WAAW,yBAAyB;IACxC,IAAI,EAAE,MAAM,CAAA;IACZ,QAAQ,EAAE,MAAM,CAAA;IAChB,EAAE,EAAE,MAAM,CAAA;IACV,MAAM,EAAE,MAAM,CAAA;IACd,IAAI,EAAE,MAAM,CAAA;IACZ,QAAQ,EAAE,MAAM,CAAA;CACjB;AAED,MAAM,WAAW,WAAW,CAAC,CAAC,CAAE,SAAQ,qBAAqB,EAAE,aAAa;IAC1E;;;;;;;;OAQG;IACH,SAAS,CAAC,EAAE,MAAM,CAAA;IAClB,aAAa,CAAC,EAAE,MAAM,CAAA;IACtB;;;;OAIG;IACH,aAAa,CAAC,EAAE,MAAM,GAAG,4BAA4B,CAAA;IACrD,KAAK,CAAC,EAAE,MAAM,GAAG,oBAAoB,CAAA;IACrC,QAAQ,CAAC,EAAE,MAAM,GAAG,uBAAuB,CAAA;IAC3C,IAAI,EAAE,OAAO,CAAA;IACb,OAAO,CAAC,EAAE,MAAM,CAAA;IAChB,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,KAAK,SAAS,CAAC,IAAI,CAAC,CAAA;IAC1D,MAAM,CAAC,EAAE,UAAU,GAAG,UAAU,EAAE,CAAA;IAClC,MAAM,CAAC,EAAE,OAAO,CAAC,cAAc,CAAC,CAAA;IAChC,IAAI,CAAC,EAAE;QAAE,IAAI,EAAE,GAAG,EAAE,CAAA;KAAE,CAAA;IACtB,QAAQ,CAAC,EAAE,MAAM,CAAA;IACjB,YAAY,CAAC,EAAE,MAAM,CAAA;IACrB;;;;;;;;OAQG;IACH,OAAO,CAAC,EAAE,OAAO,CAAA;IAEjB,MAAM,CAAC,EAAE,MAAM,CAAA;IAEf,MAAM,CAAC,EAAE,MAAM,CAAA;IACf,yGAAyG;IACzG,WAAW,CAAC,EAAE,WAAW,CAAA;IAEzB,KAAK,CAAC,EAAE,yBAAyB,CAAA;IAEjC;;;;OAIG;IACH,OAAO,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAA;IAG5B,cAAc,CAAC,EAAE,MAAM,CAAA;IACvB,eAAe,CAAC,EAAE,MAAM,CAAA;IACxB,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,QAAQ,CAAC,EAAE,MAAM,CAAA;IACjB,iCAAiC,CAAC,EAAE,OAAO,CAAA;CAC5C;AAED,MAAM,MAAM,eAAe,CAAC,CAAC,IAAI,IAAI,CACnC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EACvB,SAAS,GAAG,MAAM,CACnB,GACC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,UAAU,GAAG,cAAc,CAAC,CAAC,CAAA;AAE7D,MAAM,MAAM,aAAa,GAAG,CAC1B,OAAO,EAAE,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAC/B,WAAW,CAAC,GAAG,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/okta.d.ts b/node_modules/next-auth/providers/okta.d.ts
index 2050ee7..26fa1a5 100644
--- a/node_modules/next-auth/providers/okta.d.ts
+++ b/node_modules/next-auth/providers/okta.d.ts
@@ -33,4 +33,3 @@ export interface OktaProfile extends Record<string, any> {
     c_hash: string;
 }
 export default function Okta<P extends OktaProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=okta.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/okta.d.ts.map b/node_modules/next-auth/providers/okta.d.ts.map
deleted file mode 100644
index 035fe6f..0000000
--- a/node_modules/next-auth/providers/okta.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"okta.d.ts","sourceRoot":"","sources":["../src/providers/okta.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,WAAY,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACtD,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,SAAS,EAAE,MAAM,CAAA;IACjB,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,KAAK,EAAE,MAAM,CAAA;IACb,IAAI,EAAE,MAAM,CAAA;IACZ,QAAQ,EAAE,MAAM,CAAA;IAChB,kBAAkB,EAAE,MAAM,CAAA;IAC1B,UAAU,EAAE,MAAM,CAAA;IAClB,WAAW,EAAE,MAAM,CAAA;IACnB,WAAW,EAAE,MAAM,CAAA;IACnB,KAAK,EAAE,MAAM,CAAA;IACb,cAAc,EAAE,MAAM,CAAA;IACtB,OAAO,EAAE,MAAM,CAAA;IACf,QAAQ,EAAE,MAAM,CAAA;IAChB,MAAM,EAAE,MAAM,CAAA;IACd,OAAO,EAAE,MAAM,CAAA;IACf,YAAY,EAAE,MAAM,CAAA;IACpB,OAAO,EAAE,MAAM,CAAA;IACf,OAAO,EAAE,MAAM,CAAA;IACf,MAAM,EAAE,MAAM,CAAA;IACd,SAAS,EAAE,MAAM,CAAA;IACjB,UAAU,EAAE,MAAM,CAAA;IAClB,OAAO,EAAE,MAAM,CAAA;IACf,MAAM,EAAE,MAAM,CAAA;CACf;AAED,MAAM,CAAC,OAAO,UAAU,IAAI,CAAC,CAAC,SAAS,WAAW,EAChD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA0BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/onelogin.d.ts b/node_modules/next-auth/providers/onelogin.d.ts
index fc940e4..f88bbb9 100644
--- a/node_modules/next-auth/providers/onelogin.d.ts
+++ b/node_modules/next-auth/providers/onelogin.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function OneLogin(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=onelogin.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/onelogin.d.ts.map b/node_modules/next-auth/providers/onelogin.d.ts.map
deleted file mode 100644
index 90b1d85..0000000
--- a/node_modules/next-auth/providers/onelogin.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"onelogin.d.ts","sourceRoot":"","sources":["../src/providers/onelogin.js"],"names":[],"mappings":"AAoB43I,2HAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/osso.d.ts b/node_modules/next-auth/providers/osso.d.ts
index d80ed73..38b6b72 100644
--- a/node_modules/next-auth/providers/osso.d.ts
+++ b/node_modules/next-auth/providers/osso.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function Osso(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=osso.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/osso.d.ts.map b/node_modules/next-auth/providers/osso.d.ts.map
deleted file mode 100644
index 47bfabf..0000000
--- a/node_modules/next-auth/providers/osso.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"osso.d.ts","sourceRoot":"","sources":["../src/providers/osso.js"],"names":[],"mappings":"AAoB46I,uHAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/osu.d.ts b/node_modules/next-auth/providers/osu.d.ts
index d7b4306..815e1ce 100644
--- a/node_modules/next-auth/providers/osu.d.ts
+++ b/node_modules/next-auth/providers/osu.d.ts
@@ -47,4 +47,3 @@ export interface OsuProfile extends OsuUserCompact, Record<string, any> {
     is_restricted: boolean;
 }
 export default function Osu<P extends OsuProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=osu.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/osu.d.ts.map b/node_modules/next-auth/providers/osu.d.ts.map
deleted file mode 100644
index 72599c9..0000000
--- a/node_modules/next-auth/providers/osu.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"osu.d.ts","sourceRoot":"","sources":["../src/providers/osu.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,cAAc;IAC7B,UAAU,EAAE,MAAM,CAAA;IAClB,YAAY,EAAE,MAAM,CAAA;IACpB,aAAa,EAAE,MAAM,CAAA;IACrB,EAAE,EAAE,MAAM,CAAA;IACV,SAAS,EAAE,OAAO,CAAA;IAClB,MAAM,EAAE,OAAO,CAAA;IACf,UAAU,EAAE,OAAO,CAAA;IACnB,SAAS,EAAE,OAAO,CAAA;IAClB,YAAY,EAAE,OAAO,CAAA;IACrB,UAAU,EAAE,IAAI,GAAG,IAAI,CAAA;IACvB,eAAe,EAAE,OAAO,CAAA;IACxB,cAAc,EAAE,MAAM,GAAG,IAAI,CAAA;IAC7B,QAAQ,EAAE,MAAM,CAAA;CACjB;AAED,MAAM,WAAW,UAAW,SAAQ,cAAc,EAAE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACrE,OAAO,EAAE,MAAM,GAAG,IAAI,CAAA;IACtB,aAAa,EAAE,OAAO,CAAA;IACtB,SAAS,EAAE,MAAM,GAAG,IAAI,CAAA;IACxB,SAAS,EAAE,IAAI,CAAA;IACf,MAAM,EAAE;QACN,SAAS,EAAE,MAAM,CAAA;QACjB,KAAK,EAAE,MAAM,CAAA;KACd,CAAA;IACD,QAAQ,EAAE,MAAM,GAAG,IAAI,CAAA;IACvB,UAAU,EAAE,MAAM,CAAA;IAClB,WAAW,EAAE,MAAM,CAAA;IACnB,UAAU,EAAE,MAAM,GAAG,IAAI,CAAA;IACzB,QAAQ,EAAE,MAAM,CAAA;IAChB,SAAS,EAAE,MAAM,EAAE,CAAA;IACnB,UAAU,EAAE,MAAM,CAAA;IAClB,aAAa,EAAE,MAAM,EAAE,CAAA;IACvB,KAAK,EAAE,MAAM,GAAG,IAAI,CAAA;IACpB,SAAS,EAAE,MAAM,GAAG,IAAI,CAAA;IACxB,OAAO,EAAE,MAAM,GAAG,IAAI,CAAA;IACtB,OAAO,EAAE,MAAM,GAAG,IAAI,CAAA;IACtB,OAAO,EAAE;QACP,IAAI,EAAE,MAAM,CAAA;QACZ,IAAI,EAAE,MAAM,CAAA;KACb,CAAA;IACD,KAAK,EAAE;QACL,UAAU,EAAE,MAAM,GAAG,IAAI,CAAA;QACzB,GAAG,EAAE,MAAM,CAAA;QACX,EAAE,EAAE,MAAM,GAAG,IAAI,CAAA;KAClB,CAAA;IACD,aAAa,EAAE,OAAO,CAAA;CACvB;AAED,MAAM,CAAC,OAAO,UAAU,GAAG,CAAC,CAAC,SAAS,UAAU,EAC9C,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAuBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/patreon.d.ts b/node_modules/next-auth/providers/patreon.d.ts
index bc477ca..4eb96f7 100644
--- a/node_modules/next-auth/providers/patreon.d.ts
+++ b/node_modules/next-auth/providers/patreon.d.ts
@@ -6,4 +6,3 @@ export interface PatreonProfile extends Record<string, any> {
     picture: string;
 }
 export default function Patreon<P extends PatreonProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=patreon.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/patreon.d.ts.map b/node_modules/next-auth/providers/patreon.d.ts.map
deleted file mode 100644
index def82a5..0000000
--- a/node_modules/next-auth/providers/patreon.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"patreon.d.ts","sourceRoot":"","sources":["../src/providers/patreon.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,cAAe,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACzD,GAAG,EAAE,MAAM,CAAA;IACX,QAAQ,EAAE,MAAM,CAAA;IAChB,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,CAAC,OAAO,UAAU,OAAO,CAAC,CAAC,SAAS,cAAc,EACtD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA8BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/pinterest.d.ts b/node_modules/next-auth/providers/pinterest.d.ts
index 83542d2..2a2d734 100644
--- a/node_modules/next-auth/providers/pinterest.d.ts
+++ b/node_modules/next-auth/providers/pinterest.d.ts
@@ -6,4 +6,3 @@ export interface PinterestProfile extends Record<string, any> {
     username: string;
 }
 export default function PinterestProvider<P extends PinterestProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=pinterest.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/pinterest.d.ts.map b/node_modules/next-auth/providers/pinterest.d.ts.map
deleted file mode 100644
index ebbb099..0000000
--- a/node_modules/next-auth/providers/pinterest.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"pinterest.d.ts","sourceRoot":"","sources":["../src/providers/pinterest.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAEhD,MAAM,WAAW,gBAAiB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC3D,YAAY,EAAE,UAAU,GAAG,QAAQ,CAAA;IACnC,aAAa,EAAE,MAAM,CAAA;IACrB,WAAW,EAAE,MAAM,CAAA;IACnB,QAAQ,EAAE,MAAM,CAAA;CACjB;AAED,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAC,CAAC,SAAS,gBAAgB,EAClE,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAsBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/pipedrive.d.ts b/node_modules/next-auth/providers/pipedrive.d.ts
index 9182532..d11df6c 100644
--- a/node_modules/next-auth/providers/pipedrive.d.ts
+++ b/node_modules/next-auth/providers/pipedrive.d.ts
@@ -34,4 +34,3 @@ export interface PipedriveProfile extends Record<string, any> {
     };
 }
 export default function Pipedrive<P extends PipedriveProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=pipedrive.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/pipedrive.d.ts.map b/node_modules/next-auth/providers/pipedrive.d.ts.map
deleted file mode 100644
index 8bab8e5..0000000
--- a/node_modules/next-auth/providers/pipedrive.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"pipedrive.d.ts","sourceRoot":"","sources":["../src/providers/pipedrive.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,gBAAiB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC3D,OAAO,EAAE,OAAO,CAAA;IAChB,IAAI,EAAE;QACJ,EAAE,EAAE,MAAM,CAAA;QACV,IAAI,EAAE,MAAM,CAAA;QACZ,gBAAgB,CAAC,EAAE,MAAM,CAAA;QACzB,MAAM,CAAC,EAAE,MAAM,CAAA;QACf,IAAI,CAAC,EAAE,MAAM,CAAA;QACb,KAAK,EAAE,MAAM,CAAA;QACb,KAAK,CAAC,EAAE,MAAM,CAAA;QACd,SAAS,CAAC,EAAE,OAAO,CAAA;QACnB,UAAU,CAAC,EAAE,IAAI,CAAA;QACjB,OAAO,CAAC,EAAE,IAAI,CAAA;QACd,QAAQ,CAAC,EAAE,IAAI,CAAA;QACf,qBAAqB,CAAC,EAAE,MAAM,CAAA;QAC9B,mBAAmB,CAAC,EAAE,OAAO,CAAA;QAC7B,QAAQ,CAAC,EAAE,MAAM,CAAA;QACjB,WAAW,CAAC,EAAE,OAAO,CAAA;QACrB,aAAa,CAAC,EAAE,MAAM,CAAA;QACtB,eAAe,CAAC,EAAE,MAAM,CAAA;QACxB,OAAO,CAAC,EAAE,MAAM,CAAA;QAChB,QAAQ,CAAC,EAAE,MAAM,CAAA;QACjB,MAAM,CAAC,EAAE,OAAO,CAAA;QAChB,UAAU,CAAC,EAAE,MAAM,CAAA;QACnB,YAAY,CAAC,EAAE,MAAM,CAAA;QACrB,cAAc,CAAC,EAAE,MAAM,CAAA;QACvB,eAAe,CAAC,EAAE,MAAM,CAAA;QACxB,gBAAgB,CAAC,EAAE,MAAM,CAAA;QACzB,QAAQ,CAAC,EAAE;YACT,aAAa,CAAC,EAAE,MAAM,CAAA;YACtB,YAAY,CAAC,EAAE,MAAM,CAAA;SACtB,CAAA;KACF,CAAA;CACF;AAED,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,CAAC,SAAS,gBAAgB,EAC1D,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAmBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/reddit.d.ts b/node_modules/next-auth/providers/reddit.d.ts
index 26038ad..acaac07 100644
--- a/node_modules/next-auth/providers/reddit.d.ts
+++ b/node_modules/next-auth/providers/reddit.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function Reddit(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=reddit.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/reddit.d.ts.map b/node_modules/next-auth/providers/reddit.d.ts.map
deleted file mode 100644
index 3384add..0000000
--- a/node_modules/next-auth/providers/reddit.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"reddit.d.ts","sourceRoot":"","sources":["../src/providers/reddit.js"],"names":[],"mappings":"AAoBi4I,yHAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/salesforce.d.ts b/node_modules/next-auth/providers/salesforce.d.ts
index 084c65c..bd596b4 100644
--- a/node_modules/next-auth/providers/salesforce.d.ts
+++ b/node_modules/next-auth/providers/salesforce.d.ts
@@ -6,4 +6,3 @@ export interface SalesforceProfile extends Record<string, any> {
     picture: string;
 }
 export default function Salesforce<P extends SalesforceProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=salesforce.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/salesforce.d.ts.map b/node_modules/next-auth/providers/salesforce.d.ts.map
deleted file mode 100644
index e7ead4d..0000000
--- a/node_modules/next-auth/providers/salesforce.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"salesforce.d.ts","sourceRoot":"","sources":["../src/providers/salesforce.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,iBAAkB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC5D,GAAG,EAAE,MAAM,CAAA;IACX,QAAQ,EAAE,MAAM,CAAA;IAChB,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,CAAC,OAAO,UAAU,UAAU,CAAC,CAAC,SAAS,iBAAiB,EAC5D,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAoBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/slack.d.ts b/node_modules/next-auth/providers/slack.d.ts
index 72b7deb..f3d973f 100644
--- a/node_modules/next-auth/providers/slack.d.ts
+++ b/node_modules/next-auth/providers/slack.d.ts
@@ -31,4 +31,3 @@ export interface SlackProfile extends Record<string, any> {
     "https://slack.com/team_image_default": boolean;
 }
 export default function Slack<P extends SlackProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=slack.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/slack.d.ts.map b/node_modules/next-auth/providers/slack.d.ts.map
deleted file mode 100644
index 9d687d2..0000000
--- a/node_modules/next-auth/providers/slack.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"slack.d.ts","sourceRoot":"","sources":["../src/providers/slack.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,YAAa,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACvD,EAAE,EAAE,OAAO,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,2BAA2B,EAAE,MAAM,CAAA;IACnC,2BAA2B,EAAE,MAAM,CAAA;IACnC,KAAK,EAAE,MAAM,CAAA;IACb,cAAc,EAAE,OAAO,CAAA;IACvB,mBAAmB,EAAE,MAAM,CAAA;IAC3B,IAAI,EAAE,MAAM,CAAA;IACZ,OAAO,EAAE,MAAM,CAAA;IACf,UAAU,EAAE,MAAM,CAAA;IAClB,WAAW,EAAE,MAAM,CAAA;IACnB,MAAM,EAAE,MAAM,CAAA;IACd,6BAA6B,EAAE,MAAM,CAAA;IACrC,+BAA+B,EAAE,MAAM,CAAA;IACvC,iCAAiC,EAAE,MAAM,CAAA;IACzC,iCAAiC,EAAE,MAAM,CAAA;IACzC,iCAAiC,EAAE,MAAM,CAAA;IACzC,iCAAiC,EAAE,MAAM,CAAA;IACzC,kCAAkC,EAAE,MAAM,CAAA;IAC1C,kCAAkC,EAAE,MAAM,CAAA;IAC1C,mCAAmC,EAAE,MAAM,CAAA;IAC3C,iCAAiC,EAAE,MAAM,CAAA;IACzC,iCAAiC,EAAE,MAAM,CAAA;IACzC,iCAAiC,EAAE,MAAM,CAAA;IACzC,iCAAiC,EAAE,MAAM,CAAA;IACzC,kCAAkC,EAAE,MAAM,CAAA;IAC1C,kCAAkC,EAAE,MAAM,CAAA;IAC1C,kCAAkC,EAAE,MAAM,CAAA;IAC1C,sCAAsC,EAAE,OAAO,CAAA;CAChD;AAED,MAAM,CAAC,OAAO,UAAU,KAAK,CAAC,CAAC,SAAS,YAAY,EAClD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAyBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/spotify.d.ts b/node_modules/next-auth/providers/spotify.d.ts
index 816d74b..2f8e685 100644
--- a/node_modules/next-auth/providers/spotify.d.ts
+++ b/node_modules/next-auth/providers/spotify.d.ts
@@ -9,4 +9,3 @@ export interface SpotifyProfile extends Record<string, any> {
     images: SpotifyImage[];
 }
 export default function Spotify<P extends SpotifyProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=spotify.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/spotify.d.ts.map b/node_modules/next-auth/providers/spotify.d.ts.map
deleted file mode 100644
index 00c0013..0000000
--- a/node_modules/next-auth/providers/spotify.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"spotify.d.ts","sourceRoot":"","sources":["../src/providers/spotify.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,YAAY;IAC3B,GAAG,EAAE,MAAM,CAAA;CACZ;AAED,MAAM,WAAW,cAAe,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACzD,EAAE,EAAE,MAAM,CAAA;IACV,YAAY,EAAE,MAAM,CAAA;IACpB,KAAK,EAAE,MAAM,CAAA;IACb,MAAM,EAAE,YAAY,EAAE,CAAA;CACvB;AACD,MAAM,CAAC,OAAO,UAAU,OAAO,CAAC,CAAC,SAAS,cAAc,EACtD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA2BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/spotify.js b/node_modules/next-auth/providers/spotify.js
index 89989d0..6dc96d0 100644
--- a/node_modules/next-auth/providers/spotify.js
+++ b/node_modules/next-auth/providers/spotify.js
@@ -6,11 +6,20 @@ Object.defineProperty(exports, "__esModule", {
 exports.default = Spotify;
 
 function Spotify(options) {
+  const scopes = [
+    "user-read-email",
+    "user-read-recently-played",
+    "user-read-currently-playing",
+    "playlist-modify-private",
+    "playlist-modify-public",
+    "playlist-read-private",
+    "ugc-image-upload",
+  ].join("%20");
   return {
     id: "spotify",
     name: "Spotify",
     type: "oauth",
-    authorization: "https://accounts.spotify.com/authorize?scope=user-read-email",
+    authorization: `https://accounts.spotify.com/authorize?scope=${scopes}`,
     token: "https://accounts.spotify.com/api/token",
     userinfo: "https://api.spotify.com/v1/me",
 
diff --git a/node_modules/next-auth/providers/strava.d.ts b/node_modules/next-auth/providers/strava.d.ts
index dc241da..17f9efc 100644
--- a/node_modules/next-auth/providers/strava.d.ts
+++ b/node_modules/next-auth/providers/strava.d.ts
@@ -6,4 +6,3 @@ export interface StravaProfile extends Record<string, any> {
     profile: string;
 }
 export default function Strava<P extends StravaProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=strava.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/strava.d.ts.map b/node_modules/next-auth/providers/strava.d.ts.map
deleted file mode 100644
index a1bb7d1..0000000
--- a/node_modules/next-auth/providers/strava.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"strava.d.ts","sourceRoot":"","sources":["../src/providers/strava.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,aAAc,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACxD,EAAE,EAAE,MAAM,CAAA;IACV,SAAS,EAAE,MAAM,CAAA;IACjB,QAAQ,EAAE,MAAM,CAAA;IAChB,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,CAAC,SAAS,aAAa,EACpD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA8BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/todoist.d.ts b/node_modules/next-auth/providers/todoist.d.ts
index 444555f..75c86c3 100644
--- a/node_modules/next-auth/providers/todoist.d.ts
+++ b/node_modules/next-auth/providers/todoist.d.ts
@@ -10,4 +10,3 @@ interface TodoistProfile extends Record<string, any> {
 }
 export default function TodoistProvider<P extends TodoistProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
 export {};
-//# sourceMappingURL=todoist.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/todoist.d.ts.map b/node_modules/next-auth/providers/todoist.d.ts.map
deleted file mode 100644
index 6747cdb..0000000
--- a/node_modules/next-auth/providers/todoist.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"todoist.d.ts","sourceRoot":"","sources":["../src/providers/todoist.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD;;GAEG;AACH,UAAU,cAAe,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAClD,UAAU,EAAE,MAAM,CAAA;IAClB,KAAK,EAAE,MAAM,CAAA;IACb,SAAS,EAAE,MAAM,CAAA;IACjB,EAAE,EAAE,MAAM,CAAA;CACX;AAED,MAAM,CAAC,OAAO,UAAU,eAAe,CAAC,CAAC,SAAS,cAAc,EAC9D,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAmDhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/trakt.d.ts b/node_modules/next-auth/providers/trakt.d.ts
index b5ab267..947d907 100644
--- a/node_modules/next-auth/providers/trakt.d.ts
+++ b/node_modules/next-auth/providers/trakt.d.ts
@@ -20,4 +20,3 @@ export interface TraktUser extends Record<string, any> {
     };
 }
 export default function Trakt<P extends TraktUser>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=trakt.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/trakt.d.ts.map b/node_modules/next-auth/providers/trakt.d.ts.map
deleted file mode 100644
index cb53261..0000000
--- a/node_modules/next-auth/providers/trakt.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"trakt.d.ts","sourceRoot":"","sources":["../src/providers/trakt.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,SAAU,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACpD,QAAQ,EAAE,MAAM,CAAA;IAChB,OAAO,EAAE,OAAO,CAAA;IAChB,IAAI,EAAE,MAAM,CAAA;IACZ,GAAG,EAAE,OAAO,CAAA;IACZ,MAAM,EAAE,OAAO,CAAA;IACf,GAAG,EAAE;QAAE,IAAI,EAAE,MAAM,CAAA;KAAE,CAAA;IACrB,SAAS,EAAE,MAAM,CAAA;IACjB,QAAQ,EAAE,MAAM,GAAG,IAAI,CAAA;IACvB,KAAK,EAAE,MAAM,GAAG,IAAI,CAAA;IACpB,MAAM,EAAE,MAAM,GAAG,IAAI,CAAA;IACrB,GAAG,EAAE,MAAM,GAAG,IAAI,CAAA;IAClB,MAAM,EAAE;QAAE,MAAM,EAAE;YAAE,IAAI,EAAE,MAAM,CAAA;SAAE,CAAA;KAAE,CAAA;CACrC;AAED,MAAM,CAAC,OAAO,UAAU,KAAK,CAAC,CAAC,SAAS,SAAS,EAC/C,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CA4ChB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/twitch.d.ts b/node_modules/next-auth/providers/twitch.d.ts
index b9c3c91..12c952f 100644
--- a/node_modules/next-auth/providers/twitch.d.ts
+++ b/node_modules/next-auth/providers/twitch.d.ts
@@ -6,4 +6,3 @@ export interface TwitchProfile extends Record<string, any> {
     picture: string;
 }
 export default function Twitch<P extends TwitchProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=twitch.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/twitch.d.ts.map b/node_modules/next-auth/providers/twitch.d.ts.map
deleted file mode 100644
index b65933f..0000000
--- a/node_modules/next-auth/providers/twitch.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"twitch.d.ts","sourceRoot":"","sources":["../src/providers/twitch.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,aAAc,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACxD,GAAG,EAAE,MAAM,CAAA;IACX,kBAAkB,EAAE,MAAM,CAAA;IAC1B,KAAK,EAAE,MAAM,CAAA;IACb,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,CAAC,SAAS,aAAa,EACpD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAqChB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/twitter.d.ts b/node_modules/next-auth/providers/twitter.d.ts
index 3e8d0d7..b35290c 100644
--- a/node_modules/next-auth/providers/twitter.d.ts
+++ b/node_modules/next-auth/providers/twitter.d.ts
@@ -137,4 +137,3 @@ export interface TwitterProfile {
     };
 }
 export default function Twitter<P extends Record<string, any> = TwitterLegacyProfile | TwitterProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=twitter.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/twitter.d.ts.map b/node_modules/next-auth/providers/twitter.d.ts.map
deleted file mode 100644
index bfb1382..0000000
--- a/node_modules/next-auth/providers/twitter.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"twitter.d.ts","sourceRoot":"","sources":["../src/providers/twitter.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/united-effects.d.ts b/node_modules/next-auth/providers/united-effects.d.ts
index cda610d..ff48ace 100644
--- a/node_modules/next-auth/providers/united-effects.d.ts
+++ b/node_modules/next-auth/providers/united-effects.d.ts
@@ -6,4 +6,3 @@ export interface UnitedEffectsProfile extends Record<string, any> {
 export default function UnitedEffects<P extends UnitedEffectsProfile>(options: OAuthUserConfig<P> & {
     issuer: string;
 }): OAuthConfig<P>;
-//# sourceMappingURL=united-effects.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/united-effects.d.ts.map b/node_modules/next-auth/providers/united-effects.d.ts.map
deleted file mode 100644
index 2a79004..0000000
--- a/node_modules/next-auth/providers/united-effects.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"united-effects.d.ts","sourceRoot":"","sources":["../src/providers/united-effects.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,oBAAqB,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IAC/D,GAAG,EAAE,MAAM,CAAA;IACX,KAAK,EAAE,MAAM,CAAA;CACd;AAED,MAAM,CAAC,OAAO,UAAU,aAAa,CAAC,CAAC,SAAS,oBAAoB,EAClE,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAAG;IAAE,MAAM,EAAE,MAAM,CAAA;CAAE,GAC/C,WAAW,CAAC,CAAC,CAAC,CAqBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/vk.d.ts b/node_modules/next-auth/providers/vk.d.ts
index 4587795..8f33167 100644
--- a/node_modules/next-auth/providers/vk.d.ts
+++ b/node_modules/next-auth/providers/vk.d.ts
@@ -254,4 +254,3 @@ export interface VkProfile {
     }>;
 }
 export default function VK<P extends Record<string, any> = VkProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=vk.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/vk.d.ts.map b/node_modules/next-auth/providers/vk.d.ts.map
deleted file mode 100644
index 4ff5e4d..0000000
--- a/node_modules/next-auth/providers/vk.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"vk.d.ts","sourceRoot":"","sources":["../src/providers/vk.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/wikimedia.d.ts b/node_modules/next-auth/providers/wikimedia.d.ts
index d1bd56c..0de1d8c 100644
--- a/node_modules/next-auth/providers/wikimedia.d.ts
+++ b/node_modules/next-auth/providers/wikimedia.d.ts
@@ -1,7 +1,7 @@
 import type { OAuthConfig, OAuthUserConfig } from ".";
-export type WikimediaGroup = "*" | "user" | "autoconfirmed" | "extendedconfirmed" | "bot" | "sysop" | "bureaucrat" | "steward" | "accountcreator" | "import" | "transwiki" | "ipblock-exempt" | "oversight" | "rollbacker" | "propertycreator" | "wikidata-staff" | "flood" | "translationadmin" | "confirmed" | "flow-bot" | "checkuser";
-export type WikimediaGrant = "basic" | "blockusers" | "checkuser" | "createaccount" | "delete" | "editinterface" | "editmycssjs" | "editmyoptions" | "editmywatchlist" | "editpage" | "editprotected" | "editsiteconfig" | "globalblock" | "highvolume" | "import" | "mergehistory" | "oath" | "oversight" | "patrol" | "privateinfo" | "protect" | "rollback" | "sendemail" | "shortenurls" | "uploadfile" | "viewdeleted" | "viewmywatchlist";
-export type WikimediaRight = "abusefilter-log" | "apihighlimits" | "applychangetags" | "autoconfirmed" | "autopatrol" | "autoreview" | "bigdelete" | "block" | "blockemail" | "bot" | "browsearchive" | "changetags" | "checkuser" | "checkuser-log" | "createaccount" | "createpage" | "createpagemainns" | "createtalk" | "delete" | "delete-redirect" | "deletedhistory" | "deletedtext" | "deletelogentry" | "deleterevision" | "edit" | "edit-legal" | "editinterface" | "editmyoptions" | "editmyusercss" | "editmyuserjs" | "editmyuserjson" | "editmywatchlist" | "editprotected" | "editsemiprotected" | "editsitecss" | "editsitejs" | "editsitejson" | "editusercss" | "edituserjs" | "edituserjson" | "globalblock" | "import" | "importupload" | "ipblock-exempt" | "item-merge" | "item-redirect" | "item-term" | "markbotedits" | "massmessage" | "mergehistory" | "minoredit" | "move" | "move-subpages" | "movefile" | "movestable" | "mwoauth-authonlyprivate" | "nominornewtalk" | "noratelimit" | "nuke" | "patrol" | "patrolmarks" | "property-create" | "property-term" | "protect" | "purge" | "read" | "reupload" | "reupload-own" | "reupload-shared" | "rollback" | "sendemail" | "skipcaptcha" | "suppressionlog" | "tboverride" | "templateeditor" | "torunblocked" | "transcode-reset" | "translate" | "undelete" | "unwatchedpages" | "upload" | "upload_by_url" | "viewmywatchlist" | "viewsuppressed" | "writeapi";
+export declare type WikimediaGroup = "*" | "user" | "autoconfirmed" | "extendedconfirmed" | "bot" | "sysop" | "bureaucrat" | "steward" | "accountcreator" | "import" | "transwiki" | "ipblock-exempt" | "oversight" | "rollbacker" | "propertycreator" | "wikidata-staff" | "flood" | "translationadmin" | "confirmed" | "flow-bot" | "checkuser";
+export declare type WikimediaGrant = "basic" | "blockusers" | "checkuser" | "createaccount" | "delete" | "editinterface" | "editmycssjs" | "editmyoptions" | "editmywatchlist" | "editpage" | "editprotected" | "editsiteconfig" | "globalblock" | "highvolume" | "import" | "mergehistory" | "oath" | "oversight" | "patrol" | "privateinfo" | "protect" | "rollback" | "sendemail" | "shortenurls" | "uploadfile" | "viewdeleted" | "viewmywatchlist";
+export declare type WikimediaRight = "abusefilter-log" | "apihighlimits" | "applychangetags" | "autoconfirmed" | "autopatrol" | "autoreview" | "bigdelete" | "block" | "blockemail" | "bot" | "browsearchive" | "changetags" | "checkuser" | "checkuser-log" | "createaccount" | "createpage" | "createpagemainns" | "createtalk" | "delete" | "delete-redirect" | "deletedhistory" | "deletedtext" | "deletelogentry" | "deleterevision" | "edit" | "edit-legal" | "editinterface" | "editmyoptions" | "editmyusercss" | "editmyuserjs" | "editmyuserjson" | "editmywatchlist" | "editprotected" | "editsemiprotected" | "editsitecss" | "editsitejs" | "editsitejson" | "editusercss" | "edituserjs" | "edituserjson" | "globalblock" | "import" | "importupload" | "ipblock-exempt" | "item-merge" | "item-redirect" | "item-term" | "markbotedits" | "massmessage" | "mergehistory" | "minoredit" | "move" | "move-subpages" | "movefile" | "movestable" | "mwoauth-authonlyprivate" | "nominornewtalk" | "noratelimit" | "nuke" | "patrol" | "patrolmarks" | "property-create" | "property-term" | "protect" | "purge" | "read" | "reupload" | "reupload-own" | "reupload-shared" | "rollback" | "sendemail" | "skipcaptcha" | "suppressionlog" | "tboverride" | "templateeditor" | "torunblocked" | "transcode-reset" | "translate" | "undelete" | "unwatchedpages" | "upload" | "upload_by_url" | "viewmywatchlist" | "viewsuppressed" | "writeapi";
 export interface WikimediaProfile extends Record<string, any> {
     sub: string;
     username: string;
@@ -23,4 +23,3 @@ export interface WikimediaProfile extends Record<string, any> {
  * (Documentation)[https://www.mediawiki.org/wiki/Extension:OAuth]
  */
 export default function Wikimedia<P extends WikimediaProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=wikimedia.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/wikimedia.d.ts.map b/node_modules/next-auth/providers/wikimedia.d.ts.map
deleted file mode 100644
index b576d14..0000000
--- a/node_modules/next-auth/providers/wikimedia.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"wikimedia.d.ts","sourceRoot":"","sources":["../src/providers/wikimedia.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/wordpress.d.ts b/node_modules/next-auth/providers/wordpress.d.ts
index a857d59..3430312 100644
--- a/node_modules/next-auth/providers/wordpress.d.ts
+++ b/node_modules/next-auth/providers/wordpress.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function WordPress(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=wordpress.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/wordpress.d.ts.map b/node_modules/next-auth/providers/wordpress.d.ts.map
deleted file mode 100644
index 159b7bc..0000000
--- a/node_modules/next-auth/providers/wordpress.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"wordpress.d.ts","sourceRoot":"","sources":["../src/providers/wordpress.js"],"names":[],"mappings":"AAqB8zI,4HAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/workos.d.ts b/node_modules/next-auth/providers/workos.d.ts
index 41732b7..272dec7 100644
--- a/node_modules/next-auth/providers/workos.d.ts
+++ b/node_modules/next-auth/providers/workos.d.ts
@@ -18,4 +18,3 @@ export interface WorkOSProfile extends Record<string, any> {
     };
 }
 export default function WorkOS<P extends WorkOSProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=workos.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/workos.d.ts.map b/node_modules/next-auth/providers/workos.d.ts.map
deleted file mode 100644
index fff5050..0000000
--- a/node_modules/next-auth/providers/workos.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"workos.d.ts","sourceRoot":"","sources":["../src/providers/workos.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,aAAc,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACxD,MAAM,EAAE,MAAM,CAAA;IACd,EAAE,EAAE,MAAM,CAAA;IACV,eAAe,EAAE,MAAM,CAAA;IACvB,aAAa,EAAE,MAAM,CAAA;IACrB,eAAe,EAAE,MAAM,CAAA;IACvB,MAAM,EAAE,MAAM,CAAA;IACd,KAAK,EAAE,MAAM,CAAA;IACb,UAAU,EAAE,MAAM,CAAA;IAClB,SAAS,EAAE,MAAM,CAAA;IACjB,cAAc,EAAE;QACd,EAAE,EAAE,MAAM,CAAA;QACV,KAAK,EAAE,MAAM,CAAA;QACb,QAAQ,EAAE,MAAM,CAAA;QAChB,SAAS,EAAE,MAAM,CAAA;QACjB,OAAO,EAAE,MAAM,CAAA;KAChB,CAAA;CACF;AAED,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,CAAC,SAAS,aAAa,EACpD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAiChB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/yandex.d.ts b/node_modules/next-auth/providers/yandex.d.ts
index 818006a..8749c0a 100644
--- a/node_modules/next-auth/providers/yandex.d.ts
+++ b/node_modules/next-auth/providers/yandex.d.ts
@@ -1,113 +1,2 @@
-/**
- * <div style={{backgroundColor: "#ffcc00", display: "flex", justifyContent: "space-between", color: "#000", padding: 16}}>
- * <span>Built-in <b>Yandex</b> integration.</span>
- * <a href="https://github.com">
- *   <img style={{display: "block"}} src="https://authjs.dev/img/providers/yandex.svg" height="48" width="48"/>
- * </a>
- * </div>
- *
- * ---
- * @module providers/yandex
- */
-import { OAuthConfig, OAuthUserConfig } from ".";
-/**
- * @see [Getting information about the user](https://yandex.com/dev/id/doc/en/user-information)
- * @see [Access to email address](https://yandex.com/dev/id/doc/en/user-information#email-access)
- * @see [Access to the user's profile picture](https://yandex.com/dev/id/doc/en/user-information#avatar-access)
- * @see [Access to the date of birth](https://yandex.com/dev/id/doc/en/user-information#birthday-access)
- * @see [Access to login, first name, last name, and gender](https://yandex.com/dev/id/doc/en/user-information#name-access)
- * @see [Access to the phone number](https://yandex.com/dev/id/doc/en/user-information#phone-access)
- */
-export interface YandexProfile {
-    /** User's Yandex login. */
-    login: string;
-    /** Yandex user's unique ID. */
-    id: string;
-    /**
-     * The ID of the app the OAuth token in the request was issued for.
-     * Available in the [app properties](https://oauth.yandex.com/). To open properties, click the app name.
-     */
-    client_id: string;
-    /** Authorized Yandex user ID. It is formed on the Yandex side based on the `client_id` and `user_id` pair. */
-    psuid: string;
-    /** An array of the user's email addresses. Currently only includes the default email address. */
-    emails?: string[];
-    /** The default email address for contacting the user. */
-    default_email?: string;
-    /**
-     * Indicates that the stub (profile picture that is automatically assigned when registering in Yandex)
-     * ID is specified in the `default_avatar_id` field.
-     */
-    is_avatar_empty?: boolean;
-    /**
-     * ID of the Yandex user's profile picture.
-     * The profile picture with this ID can be downloaded via a link that looks like this:
-     * @example "https://avatars.yandex.net/get-yapic/31804/BYkogAC6AoB17bN1HKRFAyKiM4-1/islands-200"
-     */
-    default_avatar_id?: "islands-small" | "islands-34" | "islands-middle" | "islands-50" | "islands-retina-small" | "islands-68" | "islands-75" | "islands-retina-middle" | "islands-retina-50" | "islands-200";
-    /**
-     * The user's date of birth in YYYY-MM-DD format.
-     * Unknown elements of the date are filled in with zeros, such as: `0000-12-23`.
-     * If the user's date of birth is unknow, birthday will be `null`
-     */
-    birthday?: string | null;
-    first_name?: string;
-    last_name?: string;
-    display_name?: string;
-    /**
-     * The first and last name that the user specified in Yandex ID.
-     * Non-Latin characters of the first and last names are presented in Unicode format.
-     */
-    real_name?: string;
-    /** User's gender. Possible values: Male: `male', Female: `female`, Unknown gender: `null` */
-    sex?: string;
-    /**
-     * The default phone number for contacting the user.
-     * The API can exclude the user's phone number from the response at its discretion.
-     * The field contains the following parameters:
-     * id: Phone number ID.
-     * number: The user's phone number.
-     */
-    default_phone?: {
-        id: number;
-        number: string;
-    };
-}
-/**
- * Add Yandex login to your page
- *
- * ## Example
- *
- * ```ts
- * import { Auth } from "@auth/core"
- * import Yandex from "@auth/core/providers/yandex"
- *
- * const request = new Request("https://example.com")
- * const response = await Auth(request, {
- *  providers: [Yandex({ clientId: "", clientSecret: "" })],
- * })
- * ```
- *
- * ## Resources
- *
- * @see [Yandex - Creating an OAuth app](https://yandex.com/dev/id/doc/en/register-client#create)
- * @see [Yandex - Manage OAuth apps](https://oauth.yandex.com/)
- * @see [Yandex - OAuth documentation](https://yandex.com/dev/id/doc/en/)
- * @see [Learn more about OAuth](https://authjs.dev/concepts/oauth)
- * @see [Source code](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/yandex.ts)
- *
- *:::tip
- * The Yandex provider comes with a [default configuration](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/yandex.ts).
- * To override the defaults for your use case, check out [customizing a built-in OAuth provider](https://authjs.dev/guides/providers/custom-provider#override-default-options).
- * :::
- *
- * :::info **Disclaimer**
- * If you think you found a bug in the default configuration, you can [open an issue](https://authjs.dev/new/provider-issue).
- *
- * Auth.js strictly adheres to the specification and it cannot take responsibility for any deviation from
- * the spec by the provider. You can open an issue, but if the problem is non-compliance with the spec,
- * we might not pursue a resolution. You can ask for more help in [Discussions](https://authjs.dev/new/github-discussions).
- * :::
- */
-export default function Yandex(options: OAuthUserConfig<YandexProfile>): OAuthConfig<YandexProfile>;
-//# sourceMappingURL=yandex.d.ts.map
\ No newline at end of file
+/** @type {import(".").OAuthProvider} */
+export default function Yandex(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
diff --git a/node_modules/next-auth/providers/yandex.d.ts.map b/node_modules/next-auth/providers/yandex.d.ts.map
deleted file mode 100644
index 5ef9d21..0000000
--- a/node_modules/next-auth/providers/yandex.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"yandex.d.ts","sourceRoot":"","sources":["../src/providers/yandex.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;GAUG;AAEH,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAEhD;;;;;;;GAOG;AACH,MAAM,WAAW,aAAa;IAC5B,2BAA2B;IAC3B,KAAK,EAAE,MAAM,CAAA;IACb,+BAA+B;IAC/B,EAAE,EAAE,MAAM,CAAA;IACV;;;OAGG;IACH,SAAS,EAAE,MAAM,CAAA;IACjB,8GAA8G;IAC9G,KAAK,EAAE,MAAM,CAAA;IACb,iGAAiG;IACjG,MAAM,CAAC,EAAE,MAAM,EAAE,CAAA;IACjB,yDAAyD;IACzD,aAAa,CAAC,EAAE,MAAM,CAAA;IACtB;;;OAGG;IACH,eAAe,CAAC,EAAE,OAAO,CAAA;IACzB;;;;OAIG;IACH,iBAAiB,CAAC,EACd,eAAe,GACf,YAAY,GACZ,gBAAgB,GAChB,YAAY,GACZ,sBAAsB,GACtB,YAAY,GACZ,YAAY,GACZ,uBAAuB,GACvB,mBAAmB,GACnB,aAAa,CAAA;IACjB;;;;OAIG;IACH,QAAQ,CAAC,EAAE,MAAM,GAAG,IAAI,CAAA;IACxB,UAAU,CAAC,EAAE,MAAM,CAAA;IACnB,SAAS,CAAC,EAAE,MAAM,CAAA;IAClB,YAAY,CAAC,EAAE,MAAM,CAAA;IACrB;;;OAGG;IACH,SAAS,CAAC,EAAE,MAAM,CAAA;IAClB,6FAA6F;IAC7F,GAAG,CAAC,EAAE,MAAM,CAAA;IACZ;;;;;;OAMG;IACH,aAAa,CAAC,EAAE;QAAE,EAAE,EAAE,MAAM,CAAC;QAAC,MAAM,EAAE,MAAM,CAAA;KAAE,CAAA;CAC/C;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,MAAM,CAAC,OAAO,UAAU,MAAM,CAC5B,OAAO,EAAE,eAAe,CAAC,aAAa,CAAC,GACtC,WAAW,CAAC,aAAa,CAAC,CA+B5B"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/yandex.js b/node_modules/next-auth/providers/yandex.js
index 59cb94c..5c97204 100644
--- a/node_modules/next-auth/providers/yandex.js
+++ b/node_modules/next-auth/providers/yandex.js
@@ -10,29 +10,19 @@ function Yandex(options) {
     id: "yandex",
     name: "Yandex",
     type: "oauth",
-    authorization: "https://oauth.yandex.ru/authorize?scope=login:info+login:email+login:avatar",
+    authorization: "https://oauth.yandex.ru/authorize?scope=login:email+login:info",
     token: "https://oauth.yandex.ru/token",
     userinfo: "https://login.yandex.ru/info?format=json",
 
     profile(profile) {
-      var _ref, _profile$display_name, _ref2, _profile$default_emai, _profile$emails;
-
       return {
         id: profile.id,
-        name: (_ref = (_profile$display_name = profile.display_name) !== null && _profile$display_name !== void 0 ? _profile$display_name : profile.real_name) !== null && _ref !== void 0 ? _ref : profile.first_name,
-        email: (_ref2 = (_profile$default_emai = profile.default_email) !== null && _profile$default_emai !== void 0 ? _profile$default_emai : (_profile$emails = profile.emails) === null || _profile$emails === void 0 ? void 0 : _profile$emails[0]) !== null && _ref2 !== void 0 ? _ref2 : null,
-        image: !profile.is_avatar_empty && profile.default_avatar_id ? `https://avatars.yandex.net/get-yapic/${profile.default_avatar_id}/islands-200` : null
+        name: profile.real_name,
+        email: profile.default_email,
+        image: profile.is_avatar_empty ? null : `https://avatars.yandex.net/get-yapic/${profile.default_avatar_id}/islands-200`
       };
     },
 
-    style: {
-      logo: "/yandex.svg",
-      logoDark: "/yandex.svg",
-      bg: "#ffcc00",
-      text: "#000",
-      bgDark: "#ffcc00",
-      textDark: "#000"
-    },
     options
   };
 }
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/zitadel.d.ts b/node_modules/next-auth/providers/zitadel.d.ts
index 8b386a9..13fe6e6 100644
--- a/node_modules/next-auth/providers/zitadel.d.ts
+++ b/node_modules/next-auth/providers/zitadel.d.ts
@@ -23,4 +23,3 @@ export interface ZitadelProfile extends Record<string, any> {
     sub: string;
 }
 export default function Zitadel<P extends ZitadelProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=zitadel.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/zitadel.d.ts.map b/node_modules/next-auth/providers/zitadel.d.ts.map
deleted file mode 100644
index 7b748b1..0000000
--- a/node_modules/next-auth/providers/zitadel.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"zitadel.d.ts","sourceRoot":"","sources":["../src/providers/zitadel.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,cAAe,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACzD,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,SAAS,EAAE,MAAM,CAAA;IACjB,GAAG,EAAE,MAAM,CAAA;IACX,KAAK,EAAE,MAAM,CAAA;IACb,cAAc,EAAE,OAAO,CAAA;IACvB,GAAG,EAAE,MAAM,CAAA;IACX,WAAW,EAAE,MAAM,CAAA;IACnB,UAAU,EAAE,MAAM,CAAA;IAClB,MAAM,EAAE,MAAM,CAAA;IACd,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,GAAG,EAAE,MAAM,CAAA;IACX,MAAM,EAAE,MAAM,CAAA;IACd,IAAI,EAAE,MAAM,CAAA;IACZ,GAAG,EAAE,MAAM,CAAA;IACX,OAAO,EAAE,MAAM,CAAA;IACf,KAAK,EAAE,MAAM,CAAA;IACb,cAAc,EAAE,OAAO,CAAA;IACvB,kBAAkB,EAAE,MAAM,CAAA;IAC1B,GAAG,EAAE,MAAM,CAAA;CACZ;AAED,MAAM,CAAC,OAAO,UAAU,OAAO,CAAC,CAAC,SAAS,cAAc,EACtD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAsBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/zoho.d.ts b/node_modules/next-auth/providers/zoho.d.ts
index 68a99b4..6b1c33e 100644
--- a/node_modules/next-auth/providers/zoho.d.ts
+++ b/node_modules/next-auth/providers/zoho.d.ts
@@ -1,2 +1,2 @@
+/** @type {import(".").OAuthProvider} */
 export default function Zoho(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
-//# sourceMappingURL=zoho.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/zoho.d.ts.map b/node_modules/next-auth/providers/zoho.d.ts.map
deleted file mode 100644
index 009dae2..0000000
--- a/node_modules/next-auth/providers/zoho.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"zoho.d.ts","sourceRoot":"","sources":["../src/providers/zoho.js"],"names":[],"mappings":"AAqBo0I,uHAA6D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/zoom.d.ts b/node_modules/next-auth/providers/zoom.d.ts
index 19d66f2..de490d2 100644
--- a/node_modules/next-auth/providers/zoom.d.ts
+++ b/node_modules/next-auth/providers/zoom.d.ts
@@ -28,4 +28,3 @@ export interface ZoomProfile extends Record<string, any> {
     status: string;
 }
 export default function Zoom<P extends ZoomProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
-//# sourceMappingURL=zoom.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/providers/zoom.d.ts.map b/node_modules/next-auth/providers/zoom.d.ts.map
deleted file mode 100644
index 77b2b46..0000000
--- a/node_modules/next-auth/providers/zoom.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"zoom.d.ts","sourceRoot":"","sources":["../src/providers/zoom.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,CAAA;AAErD,MAAM,WAAW,WAAY,SAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;IACtD,EAAE,EAAE,MAAM,CAAA;IACV,UAAU,EAAE,MAAM,CAAA;IAClB,SAAS,EAAE,MAAM,CAAA;IACjB,KAAK,EAAE,MAAM,CAAA;IACb,IAAI,EAAE,MAAM,CAAA;IACZ,SAAS,EAAE,MAAM,CAAA;IACjB,GAAG,EAAE,MAAM,CAAA;IACX,OAAO,EAAE,OAAO,CAAA;IAChB,UAAU,EAAE,MAAM,CAAA;IAClB,oBAAoB,EAAE,MAAM,CAAA;IAC5B,QAAQ,EAAE,MAAM,CAAA;IAChB,QAAQ,EAAE,MAAM,CAAA;IAChB,IAAI,EAAE,MAAM,CAAA;IACZ,UAAU,EAAE,MAAM,CAAA;IAClB,eAAe,EAAE,MAAM,CAAA;IACvB,mBAAmB,EAAE,MAAM,CAAA;IAC3B,OAAO,EAAE,MAAM,CAAA;IACf,QAAQ,EAAE,MAAM,CAAA;IAChB,GAAG,EAAE,MAAM,CAAA;IACX,SAAS,EAAE,MAAM,EAAE,CAAA;IACnB,YAAY,EAAE,MAAM,EAAE,CAAA;IACtB,UAAU,EAAE,MAAM,CAAA;IAClB,QAAQ,EAAE,MAAM,CAAA;IAChB,aAAa,EAAE,MAAM,CAAA;IACrB,YAAY,EAAE,MAAM,CAAA;IACpB,MAAM,EAAE,MAAM,CAAA;CACf;AAED,MAAM,CAAC,OAAO,UAAU,IAAI,CAAC,CAAC,SAAS,WAAW,EAChD,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,GAC1B,WAAW,CAAC,CAAC,CAAC,CAkBhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/react/index.d.ts b/node_modules/next-auth/react/index.d.ts
index 35c5184..dab185c 100644
--- a/node_modules/next-auth/react/index.d.ts
+++ b/node_modules/next-auth/react/index.d.ts
@@ -4,30 +4,23 @@ import { CtxOrReq } from "../client/_utils";
 import type { ClientSafeProvider, LiteralUnion, SessionProviderProps, SignInAuthorizationParams, SignInOptions, SignInResponse, SignOutParams, SignOutResponse, UseSessionOptions } from "./types";
 import type { BuiltInProviderType, RedirectableProviderType } from "../providers";
 export * from "./types";
-type UpdateSession = (data?: any) => Promise<Session | null>;
-export type SessionContextValue<R extends boolean = false> = R extends true ? {
-    update: UpdateSession;
+export declare type SessionContextValue<R extends boolean = false> = R extends true ? {
     data: Session;
     status: "authenticated";
 } | {
-    update: UpdateSession;
     data: null;
     status: "loading";
 } : {
-    update: UpdateSession;
     data: Session;
     status: "authenticated";
 } | {
-    update: UpdateSession;
     data: null;
     status: "unauthenticated" | "loading";
 };
 export declare const SessionContext: React.Context<{
-    update: UpdateSession;
     data: Session;
     status: "authenticated";
 } | {
-    update: UpdateSession;
     data: null;
     status: "unauthenticated" | "loading";
 } | undefined>;
@@ -37,8 +30,11 @@ export declare const SessionContext: React.Context<{
  *
  * [Documentation](https://next-auth.js.org/getting-started/client#usesession)
  */
-export declare function useSession<R extends boolean>(options?: UseSessionOptions<R>): SessionContextValue<R>;
-export type GetSessionParams = CtxOrReq & {
+export declare function useSession<R extends boolean>(options?: UseSessionOptions<R>): SessionContextValue<R> | {
+    readonly data: null;
+    readonly status: "loading";
+};
+export declare type GetSessionParams = CtxOrReq & {
     event?: "storage" | "timer" | "hidden" | string;
     triggerEvent?: boolean;
     broadcast?: boolean;
@@ -84,4 +80,3 @@ export declare function signOut<R extends boolean = true>(options?: SignOutParam
  * [Documentation](https://next-auth.js.org/getting-started/client#sessionprovider)
  */
 export declare function SessionProvider(props: SessionProviderProps): JSX.Element;
-//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/react/index.d.ts.map b/node_modules/next-auth/react/index.d.ts.map
deleted file mode 100644
index b741e1b..0000000
--- a/node_modules/next-auth/react/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/react/index.tsx"],"names":[],"mappings":"AAUA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAG9B,OAAO,EAAE,OAAO,EAAE,MAAM,IAAI,CAAA;AAC5B,OAAO,EAEL,QAAQ,EAKT,MAAM,kBAAkB,CAAA;AAEzB,OAAO,KAAK,EACV,kBAAkB,EAClB,YAAY,EACZ,oBAAoB,EACpB,yBAAyB,EACzB,aAAa,EACb,cAAc,EACd,aAAa,EACb,eAAe,EACf,iBAAiB,EAClB,MAAM,SAAS,CAAA;AAEhB,OAAO,KAAK,EACV,mBAAmB,EACnB,wBAAwB,EACzB,MAAM,cAAc,CAAA;AAErB,cAAc,SAAS,CAAA;AAiDvB,KAAK,aAAa,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,CAAA;AAE5D,MAAM,MAAM,mBAAmB,CAAC,CAAC,SAAS,OAAO,GAAG,KAAK,IAAI,CAAC,SAAS,IAAI,GAEnE;IAAE,MAAM,EAAE,aAAa,CAAC;IAAC,IAAI,EAAE,OAAO,CAAC;IAAC,MAAM,EAAE,eAAe,CAAA;CAAE,GACjE;IAAE,MAAM,EAAE,aAAa,CAAC;IAAC,IAAI,EAAE,IAAI,CAAC;IAAC,MAAM,EAAE,SAAS,CAAA;CAAE,GAExD;IAAE,MAAM,EAAE,aAAa,CAAC;IAAC,IAAI,EAAE,OAAO,CAAC;IAAC,MAAM,EAAE,eAAe,CAAA;CAAE,GACjE;IACE,MAAM,EAAE,aAAa,CAAA;IACrB,IAAI,EAAE,IAAI,CAAA;IACV,MAAM,EAAE,iBAAiB,GAAG,SAAS,CAAA;CACtC,CAAA;AAET,eAAO,MAAM,cAAc;YAPT,aAAa;UAAQ,OAAO;YAAU,eAAe;;YAErD,aAAa;UACf,IAAI;YACF,iBAAiB,GAAG,SAAS;cAKnC,CAAA;AAEZ;;;;;GAKG;AACH,wBAAgB,UAAU,CAAC,CAAC,SAAS,OAAO,EAC1C,OAAO,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,GAC7B,mBAAmB,CAAC,CAAC,CAAC,CAqCxB;AAED,MAAM,MAAM,gBAAgB,GAAG,QAAQ,GAAG;IACxC,KAAK,CAAC,EAAE,SAAS,GAAG,OAAO,GAAG,QAAQ,GAAG,MAAM,CAAA;IAC/C,YAAY,CAAC,EAAE,OAAO,CAAA;IACtB,SAAS,CAAC,EAAE,OAAO,CAAA;CACpB,CAAA;AAED,wBAAsB,UAAU,CAAC,MAAM,CAAC,EAAE,gBAAgB,2BAWzD;AAED;;;;;;;GAOG;AACH,wBAAsB,YAAY,CAAC,MAAM,CAAC,EAAE,QAAQ,+BAQnD;AAED;;;;;;GAMG;AACH,wBAAsB,YAAY,0FAIjC;AAED;;;;;;GAMG;AACH,wBAAsB,MAAM,CAC1B,CAAC,SAAS,wBAAwB,GAAG,SAAS,GAAG,SAAS,EAE1D,QAAQ,CAAC,EAAE,YAAY,CACrB,CAAC,SAAS,wBAAwB,GAC9B,CAAC,GAAG,mBAAmB,GACvB,mBAAmB,CACxB,EACD,OAAO,CAAC,EAAE,aAAa,EACvB,mBAAmB,CAAC,EAAE,yBAAyB,GAC9C,OAAO,CACR,CAAC,SAAS,wBAAwB,GAAG,cAAc,GAAG,SAAS,GAAG,SAAS,CAC5E,CAiEA;AAED;;;;;GAKG;AACH,wBAAsB,OAAO,CAAC,CAAC,SAAS,OAAO,GAAG,IAAI,EACpD,OAAO,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,GACzB,OAAO,CAAC,CAAC,SAAS,IAAI,GAAG,SAAS,GAAG,eAAe,CAAC,CAgCvD;AAED;;;;;;GAMG;AACH,wBAAgB,eAAe,CAAC,KAAK,EAAE,oBAAoB,eA0J1D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/react/index.js b/node_modules/next-auth/react/index.js
index ffa4362..b86d7fc 100644
--- a/node_modules/next-auth/react/index.js
+++ b/node_modules/next-auth/react/index.js
@@ -137,7 +137,6 @@ function useSession(options) {
   if (requiredAndNotLoading) {
     return {
       data: value.data,
-      update: value.update,
       status: "loading"
     };
   }
@@ -150,19 +149,19 @@ function getSession(_x) {
 }
 
 function _getSession2() {
-  _getSession2 = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee3(params) {
+  _getSession2 = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2(params) {
     var _params$broadcast;
 
     var session;
-    return _regenerator.default.wrap(function _callee3$(_context3) {
+    return _regenerator.default.wrap(function _callee2$(_context2) {
       while (1) {
-        switch (_context3.prev = _context3.next) {
+        switch (_context2.prev = _context2.next) {
           case 0:
-            _context3.next = 2;
+            _context2.next = 2;
             return (0, _utils.fetchData)("session", __NEXTAUTH, logger, params);
 
           case 2:
-            session = _context3.sent;
+            session = _context2.sent;
 
             if ((_params$broadcast = params === null || params === void 0 ? void 0 : params.broadcast) !== null && _params$broadcast !== void 0 ? _params$broadcast : true) {
               broadcast.post({
@@ -173,14 +172,14 @@ function _getSession2() {
               });
             }
 
-            return _context3.abrupt("return", session);
+            return _context2.abrupt("return", session);
 
           case 5:
           case "end":
-            return _context3.stop();
+            return _context2.stop();
         }
       }
-    }, _callee3);
+    }, _callee2);
   }));
   return _getSession2.apply(this, arguments);
 }
@@ -190,25 +189,25 @@ function getCsrfToken(_x2) {
 }
 
 function _getCsrfToken() {
-  _getCsrfToken = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee4(params) {
+  _getCsrfToken = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee3(params) {
     var response;
-    return _regenerator.default.wrap(function _callee4$(_context4) {
+    return _regenerator.default.wrap(function _callee3$(_context3) {
       while (1) {
-        switch (_context4.prev = _context4.next) {
+        switch (_context3.prev = _context3.next) {
           case 0:
-            _context4.next = 2;
+            _context3.next = 2;
             return (0, _utils.fetchData)("csrf", __NEXTAUTH, logger, params);
 
           case 2:
-            response = _context4.sent;
-            return _context4.abrupt("return", response === null || response === void 0 ? void 0 : response.csrfToken);
+            response = _context3.sent;
+            return _context3.abrupt("return", response === null || response === void 0 ? void 0 : response.csrfToken);
 
           case 4:
           case "end":
-            return _context4.stop();
+            return _context3.stop();
         }
       }
-    }, _callee4);
+    }, _callee3);
   }));
   return _getCsrfToken.apply(this, arguments);
 }
@@ -218,23 +217,23 @@ function getProviders() {
 }
 
 function _getProviders() {
-  _getProviders = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee5() {
-    return _regenerator.default.wrap(function _callee5$(_context5) {
+  _getProviders = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee4() {
+    return _regenerator.default.wrap(function _callee4$(_context4) {
       while (1) {
-        switch (_context5.prev = _context5.next) {
+        switch (_context4.prev = _context4.next) {
           case 0:
-            _context5.next = 2;
+            _context4.next = 2;
             return (0, _utils.fetchData)("providers", __NEXTAUTH, logger);
 
           case 2:
-            return _context5.abrupt("return", _context5.sent);
+            return _context4.abrupt("return", _context4.sent);
 
           case 3:
           case "end":
-            return _context5.stop();
+            return _context4.stop();
         }
       }
-    }, _callee5);
+    }, _callee4);
   }));
   return _getProviders.apply(this, arguments);
 }
@@ -244,39 +243,39 @@ function signIn(_x3, _x4, _x5) {
 }
 
 function _signIn() {
-  _signIn = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee6(provider, options, authorizationParams) {
+  _signIn = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee5(provider, options, authorizationParams) {
     var _ref5, _ref5$callbackUrl, callbackUrl, _ref5$redirect, redirect, baseUrl, providers, isCredentials, isEmail, isSupportingReturn, signInUrl, _signInUrl, res, data, _data$url, url, error;
 
-    return _regenerator.default.wrap(function _callee6$(_context6) {
+    return _regenerator.default.wrap(function _callee5$(_context5) {
       while (1) {
-        switch (_context6.prev = _context6.next) {
+        switch (_context5.prev = _context5.next) {
           case 0:
             _ref5 = options !== null && options !== void 0 ? options : {}, _ref5$callbackUrl = _ref5.callbackUrl, callbackUrl = _ref5$callbackUrl === void 0 ? window.location.href : _ref5$callbackUrl, _ref5$redirect = _ref5.redirect, redirect = _ref5$redirect === void 0 ? true : _ref5$redirect;
             baseUrl = (0, _utils.apiBaseUrl)(__NEXTAUTH);
-            _context6.next = 4;
+            _context5.next = 4;
             return getProviders();
 
           case 4:
-            providers = _context6.sent;
+            providers = _context5.sent;
 
             if (providers) {
-              _context6.next = 8;
+              _context5.next = 8;
               break;
             }
 
             window.location.href = "".concat(baseUrl, "/error");
-            return _context6.abrupt("return");
+            return _context5.abrupt("return");
 
           case 8:
             if (!(!provider || !(provider in providers))) {
-              _context6.next = 11;
+              _context5.next = 11;
               break;
             }
 
             window.location.href = "".concat(baseUrl, "/signin?").concat(new URLSearchParams({
               callbackUrl: callbackUrl
             }));
-            return _context6.abrupt("return");
+            return _context5.abrupt("return");
 
           case 11:
             isCredentials = providers[provider].type === "credentials";
@@ -284,69 +283,69 @@ function _signIn() {
             isSupportingReturn = isCredentials || isEmail;
             signInUrl = "".concat(baseUrl, "/").concat(isCredentials ? "callback" : "signin", "/").concat(provider);
             _signInUrl = "".concat(signInUrl, "?").concat(new URLSearchParams(authorizationParams));
-            _context6.t0 = fetch;
-            _context6.t1 = _signInUrl;
-            _context6.t2 = {
+            _context5.t0 = fetch;
+            _context5.t1 = _signInUrl;
+            _context5.t2 = {
               "Content-Type": "application/x-www-form-urlencoded"
             };
-            _context6.t3 = URLSearchParams;
-            _context6.t4 = _objectSpread;
-            _context6.t5 = _objectSpread({}, options);
-            _context6.t6 = {};
-            _context6.next = 25;
+            _context5.t3 = URLSearchParams;
+            _context5.t4 = _objectSpread;
+            _context5.t5 = _objectSpread({}, options);
+            _context5.t6 = {};
+            _context5.next = 25;
             return getCsrfToken();
 
           case 25:
-            _context6.t7 = _context6.sent;
-            _context6.t8 = callbackUrl;
-            _context6.t9 = {
-              csrfToken: _context6.t7,
-              callbackUrl: _context6.t8,
+            _context5.t7 = _context5.sent;
+            _context5.t8 = callbackUrl;
+            _context5.t9 = {
+              csrfToken: _context5.t7,
+              callbackUrl: _context5.t8,
               json: true
             };
-            _context6.t10 = (0, _context6.t4)(_context6.t5, _context6.t6, _context6.t9);
-            _context6.t11 = new _context6.t3(_context6.t10);
-            _context6.t12 = {
+            _context5.t10 = (0, _context5.t4)(_context5.t5, _context5.t6, _context5.t9);
+            _context5.t11 = new _context5.t3(_context5.t10);
+            _context5.t12 = {
               method: "post",
-              headers: _context6.t2,
-              body: _context6.t11
+              headers: _context5.t2,
+              body: _context5.t11
             };
-            _context6.next = 33;
-            return (0, _context6.t0)(_context6.t1, _context6.t12);
+            _context5.next = 33;
+            return (0, _context5.t0)(_context5.t1, _context5.t12);
 
           case 33:
-            res = _context6.sent;
-            _context6.next = 36;
+            res = _context5.sent;
+            _context5.next = 36;
             return res.json();
 
           case 36:
-            data = _context6.sent;
+            data = _context5.sent;
 
             if (!(redirect || !isSupportingReturn)) {
-              _context6.next = 42;
+              _context5.next = 42;
               break;
             }
 
             url = (_data$url = data.url) !== null && _data$url !== void 0 ? _data$url : callbackUrl;
             window.location.href = url;
             if (url.includes("#")) window.location.reload();
-            return _context6.abrupt("return");
+            return _context5.abrupt("return");
 
           case 42:
             error = new URL(data.url).searchParams.get("error");
 
             if (!res.ok) {
-              _context6.next = 46;
+              _context5.next = 46;
               break;
             }
 
-            _context6.next = 46;
+            _context5.next = 46;
             return __NEXTAUTH._getSession({
               event: "storage"
             });
 
           case 46:
-            return _context6.abrupt("return", {
+            return _context5.abrupt("return", {
               error: error,
               status: res.status,
               ok: res.ok,
@@ -355,10 +354,10 @@ function _signIn() {
 
           case 47:
           case "end":
-            return _context6.stop();
+            return _context5.stop();
         }
       }
-    }, _callee6);
+    }, _callee5);
   }));
   return _signIn.apply(this, arguments);
 }
@@ -368,48 +367,48 @@ function signOut(_x6) {
 }
 
 function _signOut() {
-  _signOut = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee7(options) {
+  _signOut = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee6(options) {
     var _options$redirect;
 
     var _ref6, _ref6$callbackUrl, callbackUrl, baseUrl, fetchOptions, res, data, _data$url2, url;
 
-    return _regenerator.default.wrap(function _callee7$(_context7) {
+    return _regenerator.default.wrap(function _callee6$(_context6) {
       while (1) {
-        switch (_context7.prev = _context7.next) {
+        switch (_context6.prev = _context6.next) {
           case 0:
             _ref6 = options !== null && options !== void 0 ? options : {}, _ref6$callbackUrl = _ref6.callbackUrl, callbackUrl = _ref6$callbackUrl === void 0 ? window.location.href : _ref6$callbackUrl;
             baseUrl = (0, _utils.apiBaseUrl)(__NEXTAUTH);
-            _context7.t0 = {
+            _context6.t0 = {
               "Content-Type": "application/x-www-form-urlencoded"
             };
-            _context7.t1 = URLSearchParams;
-            _context7.next = 6;
+            _context6.t1 = URLSearchParams;
+            _context6.next = 6;
             return getCsrfToken();
 
           case 6:
-            _context7.t2 = _context7.sent;
-            _context7.t3 = callbackUrl;
-            _context7.t4 = {
-              csrfToken: _context7.t2,
-              callbackUrl: _context7.t3,
+            _context6.t2 = _context6.sent;
+            _context6.t3 = callbackUrl;
+            _context6.t4 = {
+              csrfToken: _context6.t2,
+              callbackUrl: _context6.t3,
               json: true
             };
-            _context7.t5 = new _context7.t1(_context7.t4);
+            _context6.t5 = new _context6.t1(_context6.t4);
             fetchOptions = {
               method: "post",
-              headers: _context7.t0,
-              body: _context7.t5
+              headers: _context6.t0,
+              body: _context6.t5
             };
-            _context7.next = 13;
+            _context6.next = 13;
             return fetch("".concat(baseUrl, "/signout"), fetchOptions);
 
           case 13:
-            res = _context7.sent;
-            _context7.next = 16;
+            res = _context6.sent;
+            _context6.next = 16;
             return res.json();
 
           case 16:
-            data = _context7.sent;
+            data = _context6.sent;
             broadcast.post({
               event: "session",
               data: {
@@ -418,30 +417,30 @@ function _signOut() {
             });
 
             if (!((_options$redirect = options === null || options === void 0 ? void 0 : options.redirect) !== null && _options$redirect !== void 0 ? _options$redirect : true)) {
-              _context7.next = 23;
+              _context6.next = 23;
               break;
             }
 
             url = (_data$url2 = data.url) !== null && _data$url2 !== void 0 ? _data$url2 : callbackUrl;
             window.location.href = url;
             if (url.includes("#")) window.location.reload();
-            return _context7.abrupt("return");
+            return _context6.abrupt("return");
 
           case 23:
-            _context7.next = 25;
+            _context6.next = 25;
             return __NEXTAUTH._getSession({
               event: "storage"
             });
 
           case 25:
-            return _context7.abrupt("return", data);
+            return _context6.abrupt("return", data);
 
           case 26:
           case "end":
-            return _context7.stop();
+            return _context6.stop();
         }
       }
-    }, _callee7);
+    }, _callee6);
   }));
   return _signOut.apply(this, arguments);
 }
@@ -593,69 +592,7 @@ function SessionProvider(props) {
   var value = React.useMemo(function () {
     return {
       data: session,
-      status: loading ? "loading" : session ? "authenticated" : "unauthenticated",
-      update: function update(data) {
-        return (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {
-          var newSession;
-          return _regenerator.default.wrap(function _callee2$(_context2) {
-            while (1) {
-              switch (_context2.prev = _context2.next) {
-                case 0:
-                  if (!(loading || !session)) {
-                    _context2.next = 2;
-                    break;
-                  }
-
-                  return _context2.abrupt("return");
-
-                case 2:
-                  setLoading(true);
-                  _context2.t0 = _utils.fetchData;
-                  _context2.t1 = __NEXTAUTH;
-                  _context2.t2 = logger;
-                  _context2.next = 8;
-                  return getCsrfToken();
-
-                case 8:
-                  _context2.t3 = _context2.sent;
-                  _context2.t4 = data;
-                  _context2.t5 = {
-                    csrfToken: _context2.t3,
-                    data: _context2.t4
-                  };
-                  _context2.t6 = {
-                    body: _context2.t5
-                  };
-                  _context2.t7 = {
-                    req: _context2.t6
-                  };
-                  _context2.next = 15;
-                  return (0, _context2.t0)("session", _context2.t1, _context2.t2, _context2.t7);
-
-                case 15:
-                  newSession = _context2.sent;
-                  setLoading(false);
-
-                  if (newSession) {
-                    setSession(newSession);
-                    broadcast.post({
-                      event: "session",
-                      data: {
-                        trigger: "getSession"
-                      }
-                    });
-                  }
-
-                  return _context2.abrupt("return", newSession);
-
-                case 19:
-                case "end":
-                  return _context2.stop();
-              }
-            }
-          }, _callee2);
-        }))();
-      }
+      status: loading ? "loading" : session ? "authenticated" : "unauthenticated"
     };
   }, [session, loading]);
   return (0, _jsxRuntime.jsx)(SessionContext.Provider, {
diff --git a/node_modules/next-auth/react/types.d.ts b/node_modules/next-auth/react/types.d.ts
index 129106e..5c3daa6 100644
--- a/node_modules/next-auth/react/types.d.ts
+++ b/node_modules/next-auth/react/types.d.ts
@@ -10,7 +10,7 @@ export interface UseSessionOptions<R extends boolean> {
  * Util type that matches some strings literally, but allows any other string as well.
  * @source https://github.com/microsoft/TypeScript/issues/29729#issuecomment-832522611
  */
-export type LiteralUnion<T extends U, U = string> = T | (U & Record<never, never>);
+export declare type LiteralUnion<T extends U, U = string> = T | (U & Record<never, never>);
 export interface ClientSafeProvider {
     id: LiteralUnion<BuiltInProviderType>;
     name: string;
@@ -35,7 +35,7 @@ export interface SignInResponse {
     url: string | null;
 }
 /** Match `inputType` of `new URLSearchParams(inputType)` */
-export type SignInAuthorizationParams = string | string[][] | Record<string, string> | URLSearchParams;
+export declare type SignInAuthorizationParams = string | string[][] | Record<string, string> | URLSearchParams;
 /** [Documentation](https://next-auth.js.org/getting-started/client#using-the-redirect-false-option-1) */
 export interface SignOutResponse {
     url: string;
@@ -69,4 +69,3 @@ export interface SessionProviderProps {
      */
     refetchWhenOffline?: false;
 }
-//# sourceMappingURL=types.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/react/types.d.ts.map b/node_modules/next-auth/react/types.d.ts.map
deleted file mode 100644
index e5b8e40..0000000
--- a/node_modules/next-auth/react/types.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"types.d.ts","sourceRoot":"","sources":["../src/react/types.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,OAAO,EAAE,MAAM,IAAI,CAAA;AACjC,OAAO,KAAK,EAAE,mBAAmB,EAAE,YAAY,EAAE,MAAM,cAAc,CAAA;AAErE,MAAM,WAAW,iBAAiB,CAAC,CAAC,SAAS,OAAO;IAClD,QAAQ,EAAE,CAAC,CAAA;IACX,2BAA2B;IAC3B,iBAAiB,CAAC,EAAE,MAAM,IAAI,CAAA;CAC/B;AAED;;;GAGG;AACH,MAAM,MAAM,YAAY,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,MAAM,IAC5C,CAAC,GACD,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAA;AAE9B,MAAM,WAAW,kBAAkB;IACjC,EAAE,EAAE,YAAY,CAAC,mBAAmB,CAAC,CAAA;IACrC,IAAI,EAAE,MAAM,CAAA;IACZ,IAAI,EAAE,YAAY,CAAA;IAClB,SAAS,EAAE,MAAM,CAAA;IACjB,WAAW,EAAE,MAAM,CAAA;CACpB;AAED,MAAM,WAAW,aAAc,SAAQ,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC;IAC5D;;;;OAIG;IACH,WAAW,CAAC,EAAE,MAAM,CAAA;IACpB,uGAAuG;IACvG,QAAQ,CAAC,EAAE,OAAO,CAAA;CACnB;AAED,MAAM,WAAW,cAAc;IAC7B,KAAK,EAAE,MAAM,GAAG,SAAS,CAAA;IACzB,MAAM,EAAE,MAAM,CAAA;IACd,EAAE,EAAE,OAAO,CAAA;IACX,GAAG,EAAE,MAAM,GAAG,IAAI,CAAA;CACnB;AAED,4DAA4D;AAC5D,MAAM,MAAM,yBAAyB,GACjC,MAAM,GACN,MAAM,EAAE,EAAE,GACV,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GACtB,eAAe,CAAA;AAEnB,yGAAyG;AACzG,MAAM,WAAW,eAAe;IAC9B,GAAG,EAAE,MAAM,CAAA;CACZ;AAED,MAAM,WAAW,aAAa,CAAC,CAAC,SAAS,OAAO,GAAG,IAAI;IACrD,kGAAkG;IAClG,WAAW,CAAC,EAAE,MAAM,CAAA;IACpB,wGAAwG;IACxG,QAAQ,CAAC,EAAE,CAAC,CAAA;CACb;AAED,+EAA+E;AAC/E,MAAM,WAAW,oBAAoB;IACnC,QAAQ,EAAE,KAAK,CAAC,SAAS,CAAA;IACzB,OAAO,CAAC,EAAE,OAAO,GAAG,IAAI,CAAA;IACxB,OAAO,CAAC,EAAE,MAAM,CAAA;IAChB,QAAQ,CAAC,EAAE,MAAM,CAAA;IACjB;;;OAGG;IACH,eAAe,CAAC,EAAE,MAAM,CAAA;IACxB;;;OAGG;IACH,oBAAoB,CAAC,EAAE,OAAO,CAAA;IAC9B;;;;OAIG;IACH,kBAAkB,CAAC,EAAE,KAAK,CAAA;CAC3B"}
\ No newline at end of file
diff --git a/node_modules/next-auth/src/adapters.ts b/node_modules/next-auth/src/adapters.ts
deleted file mode 100644
index b4389f2..0000000
--- a/node_modules/next-auth/src/adapters.ts
+++ /dev/null
@@ -1,130 +0,0 @@
-import { Account, User, Awaitable } from "."
-
-export interface AdapterUser extends User {
-  id: string
-  email: string
-  emailVerified: Date | null
-}
-
-export interface AdapterAccount extends Account {
-  userId: string
-}
-
-export interface AdapterSession {
-  /** A randomly generated value that is used to get hold of the session. */
-  sessionToken: string
-  /** Used to connect the session to a particular user */
-  userId: string
-  expires: Date
-}
-
-export interface VerificationToken {
-  identifier: string
-  expires: Date
-  token: string
-}
-
-/**
- * Using a custom adapter you can connect to any database backend or even several different databases.
- * Custom adapters created and maintained by our community can be found in the adapters repository.
- * Feel free to add a custom adapter from your project to the repository,
- * or even become a maintainer of a certain adapter.
- * Custom adapters can still be created and used in a project without being added to the repository.
- *
- * **Required methods**
- *
- * _(These methods are required for all sign in flows)_
- * - `createUser`
- * - `getUser`
- * - `getUserByEmail`
- * - `getUserByAccount`
- * - `linkAccount`
- * - `createSession`
- * - `getSessionAndUser`
- * - `updateSession`
- * - `deleteSession`
- * - `updateUser`
- *
- * _(Required to support email / passwordless sign in)_
- *
- * - `createVerificationToken`
- * - `useVerificationToken`
- *
- * **Unimplemented methods**
- *
- * _(These methods will be required in a future release, but are not yet invoked)_
- * - `deleteUser`
- * - `unlinkAccount`
- *
- * [Adapters Overview](https://next-auth.js.org/adapters/overview) |
- * [Create a custom adapter](https://next-auth.js.org/tutorials/creating-a-database-adapter)
- */
-export type Adapter<WithVerificationToken = boolean> = DefaultAdapter &
-  (WithVerificationToken extends true
-    ? {
-        createVerificationToken: (
-          verificationToken: VerificationToken
-        ) => Awaitable<VerificationToken | null | undefined>
-        /**
-         * Return verification token from the database
-         * and delete it so it cannot be used again.
-         */
-        useVerificationToken: (params: {
-          identifier: string
-          token: string
-        }) => Awaitable<VerificationToken | null>
-      }
-    : {})
-
-export interface DefaultAdapter {
-  createUser: (user: Omit<AdapterUser, "id">) => Awaitable<AdapterUser>
-  getUser: (id: string) => Awaitable<AdapterUser | null>
-  getUserByEmail: (email: string) => Awaitable<AdapterUser | null>
-  /** Using the provider id and the id of the user for a specific account, get the user. */
-  getUserByAccount: (
-    providerAccountId: Pick<AdapterAccount, "provider" | "providerAccountId">
-  ) => Awaitable<AdapterUser | null>
-  updateUser: (user: Partial<AdapterUser> & Pick<AdapterUser, 'id'>) => Awaitable<AdapterUser>
-  /** @todo Implement */
-  deleteUser?: (
-    userId: string
-  ) => Promise<void> | Awaitable<AdapterUser | null | undefined>
-  linkAccount: (
-    account: AdapterAccount
-  ) => Promise<void> | Awaitable<AdapterAccount | null | undefined>
-  /** @todo Implement */
-  unlinkAccount?: (
-    providerAccountId: Pick<AdapterAccount, "provider" | "providerAccountId">
-  ) => Promise<void> | Awaitable<AdapterAccount | undefined>
-  /** Creates a session for the user and returns it. */
-  createSession: (session: {
-    sessionToken: string
-    userId: string
-    expires: Date
-  }) => Awaitable<AdapterSession>
-  getSessionAndUser: (
-    sessionToken: string
-  ) => Awaitable<{ session: AdapterSession; user: AdapterUser } | null>
-  updateSession: (
-    session: Partial<AdapterSession> & Pick<AdapterSession, "sessionToken">
-  ) => Awaitable<AdapterSession | null | undefined>
-  /**
-   * Deletes a session from the database.
-   * It is preferred that this method also returns the session
-   * that is being deleted for logging purposes.
-   */
-  deleteSession: (
-    sessionToken: string
-  ) => Promise<void> | Awaitable<AdapterSession | null | undefined>
-  createVerificationToken?: (
-    verificationToken: VerificationToken
-  ) => Awaitable<VerificationToken | null | undefined>
-  /**
-   * Return verification token from the database
-   * and delete it so it cannot be used again.
-   */
-  useVerificationToken?: (params: {
-    identifier: string
-    token: string
-  }) => Awaitable<VerificationToken | null>
-}
diff --git a/node_modules/next-auth/src/client/__tests__/client-provider.test.js b/node_modules/next-auth/src/client/__tests__/client-provider.test.js
deleted file mode 100644
index e7dac68..0000000
--- a/node_modules/next-auth/src/client/__tests__/client-provider.test.js
+++ /dev/null
@@ -1,188 +0,0 @@
-import { rest } from "msw"
-import { render, screen, waitFor } from "@testing-library/react"
-import { server, mockSession } from "./helpers/mocks"
-import { printFetchCalls } from "./helpers/utils"
-import { SessionProvider, useSession, signOut, getSession } from "../../react"
-
-const origDocumentVisibility = document.visibilityState
-const fetchSpy = jest.spyOn(global, "fetch")
-
-beforeAll(() => {
-  server.listen()
-})
-
-afterEach(() => {
-  server.resetHandlers()
-  changeTabVisibility(origDocumentVisibility)
-  fetchSpy.mockClear()
-})
-
-afterAll(() => {
-  server.close()
-})
-
-test("fetches the session once and re-uses it for different consumers", async () => {
-  render(<ProviderFlow />)
-
-  expect(screen.getByTestId("session-1")).toHaveTextContent("loading")
-  expect(screen.getByTestId("session-2")).toHaveTextContent("loading")
-
-  return waitFor(() => {
-    expect(fetchSpy).toHaveBeenCalledTimes(1)
-
-    expect(fetchSpy).toHaveBeenCalledWith(
-      "/api/auth/session",
-      expect.anything()
-    )
-
-    const session1 = screen.getByTestId("session-1").textContent
-    const session2 = screen.getByTestId("session-2").textContent
-
-    expect(session1).toEqual(session2)
-  })
-})
-
-test("when there's an existing session, it won't try to fetch a new one straightaway", async () => {
-  render(<ProviderFlow session={mockSession} />)
-
-  expect(fetchSpy).not.toHaveBeenCalled()
-})
-
-test("will refetch the session when the browser tab becomes active again", async () => {
-  render(<ProviderFlow session={mockSession} />)
-
-  expect(fetchSpy).not.toHaveBeenCalled()
-
-  // Hide the current tab
-  changeTabVisibility("hidden")
-
-  // Given the current tab got hidden, it should not attempt to re-fetch the session
-  expect(fetchSpy).not.toHaveBeenCalled()
-
-  // Make the tab again visible
-  changeTabVisibility("visible")
-
-  // Given the user made the tab visible again, now attempts to sync and re-fetch the session
-  return waitFor(() => {
-    expect(fetchSpy).toHaveBeenCalledTimes(1)
-    expect(fetchSpy).toHaveBeenCalledWith(
-      "/api/auth/session",
-      expect.anything()
-    )
-  })
-})
-
-test("will refetch the session if told to do so programmatically from another window", async () => {
-  render(<ProviderFlow session={mockSession} />)
-
-  expect(fetchSpy).not.toHaveBeenCalled()
-
-  // Hide the current tab
-  changeTabVisibility("hidden")
-
-  // Given the current tab got hidden, it should not attempt to re-fetch the session
-  expect(fetchSpy).not.toHaveBeenCalled()
-
-  // simulate sign-out triggered by another tab
-  signOut({ redirect: false })
-
-  // Given signed out in another tab, it attempts to sync and re-fetch the session
-  return waitFor(() => {
-    expect(fetchSpy).toHaveBeenCalledWith(
-      "/api/auth/session",
-      expect.anything()
-    )
-
-    // We should have a call to sign-out and a call to refetch the session accordingly
-    expect(printFetchCalls(fetchSpy.mock.calls)).toMatchInlineSnapshot(`
-      Array [
-        "GET /api/auth/csrf",
-        "POST /api/auth/signout",
-        "GET /api/auth/session",
-      ]
-    `)
-  })
-})
-
-test("allows to customize how often the session will be re-fetched through polling", () => {
-  jest.useFakeTimers()
-
-  render(<ProviderFlow session={mockSession} refetchInterval={1} />)
-
-  // we provided a mock session so it shouldn't try to fetch a new one
-  expect(fetchSpy).not.toHaveBeenCalled()
-
-  jest.advanceTimersByTime(1000)
-
-  expect(fetchSpy).toHaveBeenCalledTimes(1)
-  expect(fetchSpy).toHaveBeenCalledWith("/api/auth/session", expect.anything())
-
-  jest.advanceTimersByTime(1000)
-
-  // it should have tried to refetch the session, hence counting 2 calls to the session endpoint
-  expect(fetchSpy).toHaveBeenCalledTimes(2)
-  expect(printFetchCalls(fetchSpy.mock.calls)).toMatchInlineSnapshot(`
-      Array [
-        "GET /api/auth/session",
-        "GET /api/auth/session",
-      ]
-    `)
-})
-
-test("allows to customize the URL for session fetching", async () => {
-  const myPath = "/api/v1/auth"
-
-  server.use(
-    rest.get(`${myPath}/session`, (req, res, ctx) =>
-      res(ctx.status(200), ctx.json(mockSession))
-    )
-  )
-
-  render(<ProviderFlow session={mockSession} basePath={myPath} />)
-
-  // there's an existing session so it should not try to fetch a new one
-  expect(fetchSpy).not.toHaveBeenCalled()
-
-  // force a session refetch across all clients...
-  getSession()
-
-  return waitFor(() => {
-    expect(fetchSpy).toHaveBeenCalledTimes(1)
-    expect(fetchSpy).toHaveBeenCalledWith(
-      `${myPath}/session`,
-      expect.anything()
-    )
-  })
-})
-
-function ProviderFlow(props) {
-  return (
-    <SessionProvider {...props}>
-      <SessionConsumer />
-      <SessionConsumer testId="2" />
-    </SessionProvider>
-  )
-}
-
-function SessionConsumer({ testId = 1, ...rest }) {
-  const { data: session, status } = useSession(rest)
-
-  return (
-    <div data-testid={`session-${testId}`}>
-      {status === "loading" ? "loading" : JSON.stringify(session)}
-    </div>
-  )
-}
-
-function changeTabVisibility(status) {
-  const visibleStates = ["visible", "hidden"]
-
-  if (!visibleStates.includes(status)) return
-
-  Object.defineProperty(document, "visibilityState", {
-    configurable: true,
-    value: status,
-  })
-
-  document.dispatchEvent(new Event("visibilitychange"))
-}
diff --git a/node_modules/next-auth/src/client/__tests__/csrf.test.js b/node_modules/next-auth/src/client/__tests__/csrf.test.js
deleted file mode 100644
index 1d6b126..0000000
--- a/node_modules/next-auth/src/client/__tests__/csrf.test.js
+++ /dev/null
@@ -1,104 +0,0 @@
-import { useState } from "react"
-import userEvent from "@testing-library/user-event"
-import { render, screen, waitFor } from "@testing-library/react"
-import { server, mockCSRFToken } from "./helpers/mocks"
-import logger from "../../utils/logger"
-import { getCsrfToken } from "../../react"
-import { rest } from "msw"
-
-jest.mock("../../utils/logger", () => ({
-  __esModule: true,
-  default: {
-    warn: jest.fn(),
-    debug: jest.fn(),
-    error: jest.fn(),
-  },
-  proxyLogger(logger) {
-    return logger
-  },
-}))
-
-beforeAll(() => {
-  server.listen()
-})
-
-afterEach(() => {
-  server.resetHandlers()
-  jest.clearAllMocks()
-})
-
-afterAll(() => {
-  server.close()
-})
-
-test("returns the Cross Site Request Forgery Token (CSRF Token) required to make POST requests", async () => {
-  render(<CSRFFlow />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(screen.getByTestId("csrf-result").textContent).toEqual(
-      mockCSRFToken.csrfToken
-    )
-  })
-})
-
-test("when there's no CSRF token returned, it'll reflect that", async () => {
-  server.use(
-    rest.get("*/api/auth/csrf", (req, res, ctx) =>
-      res(
-        ctx.status(200),
-        ctx.json({
-          ...mockCSRFToken,
-          csrfToken: null,
-        })
-      )
-    )
-  )
-
-  render(<CSRFFlow />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(screen.getByTestId("csrf-result").textContent).toBe("null-response")
-  })
-})
-
-test("when the fetch fails it'll throw a client fetch error", async () => {
-  server.use(
-    rest.get("*/api/auth/csrf", (req, res, ctx) =>
-      res(ctx.status(500), ctx.text("some error happened"))
-    )
-  )
-
-  render(<CSRFFlow />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(logger.error).toHaveBeenCalledTimes(1)
-    expect(logger.error).toBeCalledWith("CLIENT_FETCH_ERROR", {
-      url: "/api/auth/csrf",
-      error: new SyntaxError("Unexpected token s in JSON at position 0"),
-    })
-  })
-})
-
-function CSRFFlow() {
-  const [response, setResponse] = useState()
-
-  async function handleCSRF() {
-    const result = await getCsrfToken()
-    setResponse(result)
-  }
-
-  return (
-    <>
-      <p data-testid="csrf-result">
-        {response === null ? "null-response" : response || "no response"}
-      </p>
-      <button onClick={handleCSRF}>Get CSRF</button>
-    </>
-  )
-}
diff --git a/node_modules/next-auth/src/client/__tests__/helpers/mocks.js b/node_modules/next-auth/src/client/__tests__/helpers/mocks.js
deleted file mode 100644
index 79c532f..0000000
--- a/node_modules/next-auth/src/client/__tests__/helpers/mocks.js
+++ /dev/null
@@ -1,90 +0,0 @@
-import { setupServer } from "msw/node"
-import { rest } from "msw"
-import { randomBytes } from "crypto"
-
-export const mockSession = {
-  ok: true,
-  user: {
-    image: null,
-    name: "John",
-    email: "john@email.com",
-  },
-  expires: 123213139,
-}
-
-export const mockProviders = {
-  ok: true,
-  github: {
-    id: "github",
-    name: "Github",
-    type: "oauth",
-    signinUrl: "path/to/signin",
-    callbackUrl: "path/to/callback",
-  },
-  credentials: {
-    id: "credentials",
-    name: "Credentials",
-    type: "credentials",
-    authorize: null,
-    credentials: null,
-  },
-  email: {
-    id: "email",
-    type: "email",
-    name: "Email",
-  },
-}
-
-export const mockCSRFToken = {
-  ok: true,
-  csrfToken: randomBytes(32).toString("hex"),
-}
-
-export const mockGithubResponse = {
-  ok: true,
-  status: 200,
-  url: "https://path/to/github/url",
-}
-
-export const mockCredentialsResponse = {
-  ok: true,
-  status: 200,
-  url: "https://path/to/credentials/url",
-}
-
-export const mockEmailResponse = {
-  ok: true,
-  status: 200,
-  url: "https://path/to/email/url",
-}
-
-export const mockSignOutResponse = {
-  ok: true,
-  status: 200,
-  url: "https://path/to/signout/url",
-}
-
-export const server = setupServer(
-  rest.post("*/api/auth/signout", (req, res, ctx) =>
-    res(ctx.status(200), ctx.json(mockSignOutResponse))
-  ),
-  rest.get("*/api/auth/session", (req, res, ctx) =>
-    res(ctx.status(200), ctx.json(mockSession))
-  ),
-  rest.get("*/api/auth/csrf", (req, res, ctx) =>
-    res(ctx.status(200), ctx.json(mockCSRFToken))
-  ),
-  rest.get("*/api/auth/providers", (req, res, ctx) =>
-    res(ctx.status(200), ctx.json(mockProviders))
-  ),
-  rest.post("*/api/auth/signin/github", (req, res, ctx) =>
-    res(ctx.status(200), ctx.json(mockGithubResponse))
-  ),
-  rest.post("*/api/auth/callback/credentials", (req, res, ctx) =>
-    res(ctx.status(200), ctx.json(mockCredentialsResponse))
-  ),
-  rest.post("*/api/auth/signin/email", (req, res, ctx) =>
-    res(ctx.status(200), ctx.json(mockEmailResponse))
-  ),
-  rest.post("*/api/auth/_log", (req, res, ctx) => res(ctx.status(200)))
-)
diff --git a/node_modules/next-auth/src/client/__tests__/helpers/utils.js b/node_modules/next-auth/src/client/__tests__/helpers/utils.js
deleted file mode 100644
index df2844a..0000000
--- a/node_modules/next-auth/src/client/__tests__/helpers/utils.js
+++ /dev/null
@@ -1,14 +0,0 @@
-export function getBroadcastEvents() {
-  return window.localStorage.setItem.mock.calls
-    .filter((call) => call[0] === "nextauth.message")
-    .map(([eventName, value]) => {
-      const { timestamp, ...rest } = JSON.parse(value)
-      return { eventName, value: rest }
-    })
-}
-
-export function printFetchCalls(mockCalls) {
-  return mockCalls.map(([path, { method = "GET" }]) => {
-    return `${method.toUpperCase()} ${path}`
-  })
-}
diff --git a/node_modules/next-auth/src/client/__tests__/providers.test.js b/node_modules/next-auth/src/client/__tests__/providers.test.js
deleted file mode 100644
index 45d0550..0000000
--- a/node_modules/next-auth/src/client/__tests__/providers.test.js
+++ /dev/null
@@ -1,84 +0,0 @@
-import { useState } from "react"
-import userEvent from "@testing-library/user-event"
-import { render, screen, waitFor } from "@testing-library/react"
-import { server, mockProviders } from "./helpers/mocks"
-import { getProviders } from "../../react"
-import logger from "../../utils/logger"
-import { rest } from "msw"
-
-jest.mock("../../utils/logger", () => ({
-  __esModule: true,
-  default: {
-    warn: jest.fn(),
-    debug: jest.fn(),
-    error: jest.fn(),
-  },
-  proxyLogger(logger) {
-    return logger
-  },
-}))
-
-beforeAll(() => {
-  server.listen()
-})
-
-afterEach(() => {
-  server.resetHandlers()
-  jest.clearAllMocks()
-})
-
-afterAll(() => {
-  server.close()
-})
-
-test("when called it'll return the currently configured providers for sign in", async () => {
-  render(<ProvidersFlow />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(screen.getByTestId("providers-result").textContent).toEqual(
-      JSON.stringify(mockProviders)
-    )
-  })
-})
-
-test("when failing to fetch the providers, it'll log the error", async () => {
-  server.use(
-    rest.get("*/api/auth/providers", (req, res, ctx) =>
-      res(ctx.status(500), ctx.text("some error happened"))
-    )
-  )
-
-  render(<ProvidersFlow />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(logger.error).toHaveBeenCalledTimes(1)
-    expect(logger.error).toBeCalledWith("CLIENT_FETCH_ERROR", {
-      url: "/api/auth/providers",
-      error: new SyntaxError("Unexpected token s in JSON at position 0"),
-    })
-  })
-})
-
-function ProvidersFlow() {
-  const [response, setResponse] = useState()
-
-  async function handleGerProviders() {
-    const result = await getProviders()
-    setResponse(result)
-  }
-
-  return (
-    <>
-      <p data-testid="providers-result">
-        {response === null
-          ? "null-response"
-          : JSON.stringify(response) || "no response"}
-      </p>
-      <button onClick={handleGerProviders}>Get Providers</button>
-    </>
-  )
-}
diff --git a/node_modules/next-auth/src/client/__tests__/session.test.js b/node_modules/next-auth/src/client/__tests__/session.test.js
deleted file mode 100644
index 4940f81..0000000
--- a/node_modules/next-auth/src/client/__tests__/session.test.js
+++ /dev/null
@@ -1,97 +0,0 @@
-import { render, screen, waitFor } from "@testing-library/react"
-import { rest } from "msw"
-import { server, mockSession } from "./helpers/mocks"
-import logger from "../../utils/logger"
-import { useState, useEffect } from "react"
-import { getSession } from "../../react"
-import { getBroadcastEvents } from "./helpers/utils"
-
-jest.mock("../../utils/logger", () => ({
-  __esModule: true,
-  default: {
-    warn: jest.fn(),
-    debug: jest.fn(),
-    error: jest.fn(),
-  },
-  proxyLogger(logger) {
-    return logger
-  },
-}))
-
-beforeAll(() => server.listen())
-
-beforeEach(() => {
-  // eslint-disable-next-line no-proto
-  jest.spyOn(window.localStorage.__proto__, "setItem")
-})
-
-afterEach(() => {
-  server.resetHandlers()
-  jest.clearAllMocks()
-})
-
-afterAll(() => {
-  server.close()
-})
-
-test("if it can fetch the session, it should store it in `localStorage`", async () => {
-  render(<SessionFlow />)
-
-  // In the start, there is no session
-  const noSession = await screen.findByText("No session")
-  expect(noSession).toBeInTheDocument()
-
-  // After we fetched the session, it should have been rendered by `<SessionFlow />`
-  const session = await screen.findByText(new RegExp(mockSession.user.name))
-  expect(session).toBeInTheDocument()
-
-  const broadcastCalls = getBroadcastEvents()
-  const [broadcastedEvent] = broadcastCalls
-
-  expect(broadcastCalls).toHaveLength(1)
-  expect(broadcastCalls).toHaveLength(1)
-  expect(broadcastedEvent.eventName).toBe("nextauth.message")
-  expect(broadcastedEvent.value).toStrictEqual({
-    data: {
-      trigger: "getSession",
-    },
-    event: "session",
-  })
-})
-
-test("if there's an error fetching the session, it should log it", async () => {
-  server.use(
-    rest.get("*/api/auth/session", (req, res, ctx) => {
-      return res(ctx.status(500), ctx.body("Server error"))
-    })
-  )
-
-  render(<SessionFlow />)
-
-  await waitFor(() => {
-    expect(logger.error).toHaveBeenCalledTimes(1)
-    expect(logger.error).toBeCalledWith("CLIENT_FETCH_ERROR", {
-      url: "/api/auth/session",
-      error: new SyntaxError("Unexpected token S in JSON at position 0"),
-    })
-  })
-})
-
-function SessionFlow() {
-  const [session, setSession] = useState(null)
-  useEffect(() => {
-    async function fetchUserSession() {
-      try {
-        const result = await getSession()
-        setSession(result)
-      } catch (e) {
-        console.error(e)
-      }
-    }
-    fetchUserSession()
-  }, [])
-
-  if (session) return <pre>{JSON.stringify(session, null, 2)}</pre>
-
-  return <p>No session</p>
-}
diff --git a/node_modules/next-auth/src/client/__tests__/sign-in.test.js b/node_modules/next-auth/src/client/__tests__/sign-in.test.js
deleted file mode 100644
index 0422fe9..0000000
--- a/node_modules/next-auth/src/client/__tests__/sign-in.test.js
+++ /dev/null
@@ -1,290 +0,0 @@
-import { useState } from "react"
-import userEvent from "@testing-library/user-event"
-import { render, screen, waitFor } from "@testing-library/react"
-import logger from "../../utils/logger"
-import {
-  server,
-  mockCredentialsResponse,
-  mockEmailResponse,
-  mockGithubResponse,
-} from "./helpers/mocks"
-import { signIn } from "../../react"
-import { rest } from "msw"
-
-const { location } = window
-
-jest.mock("../../utils/logger", () => ({
-  __esModule: true,
-  default: {
-    warn: jest.fn(),
-    debug: jest.fn(),
-    error: jest.fn(),
-  },
-  proxyLogger(logger) {
-    return logger
-  },
-}))
-
-beforeAll(() => {
-  server.listen()
-
-  let _href = window.location.href
-  // Allows to mutate `window.location`...
-  delete window.location
-
-  window.location = {
-    reload: jest.fn(),
-  }
-  Object.defineProperty(window.location, "href", {
-    get: () => _href,
-    // whatwg-fetch or whatwg-url does not seem to work with relative URLs
-    set: (href) => {
-      _href = href.startsWith("/") ? `http://localhost${href}` : href
-      return _href
-    },
-  })
-})
-
-beforeEach(() => {
-  jest.clearAllMocks()
-  server.resetHandlers()
-})
-
-afterAll(() => {
-  window.location = location
-  server.close()
-})
-
-const callbackUrl = "https://redirects/to"
-
-test.each`
-  provider | type
-  ${""}    | ${"no"}
-  ${"foo"} | ${"unknown"}
-`(
-  "if $type provider, it redirects to the default sign-in page",
-  async ({ provider }) => {
-    render(<SignInFlow providerId={provider} callbackUrl={callbackUrl} />)
-
-    userEvent.click(screen.getByRole("button"))
-
-    await waitFor(() => {
-      expect(window.location.href).toBe(
-        `http://localhost/api/auth/signin?${new URLSearchParams({
-          callbackUrl,
-        })}`
-      )
-    })
-  }
-)
-
-test.each`
-  provider | type
-  ${""}    | ${"no"}
-  ${"foo"} | ${"unknown"}
-`(
-  "if $type provider supplied and no callback URL, redirects using the current location",
-  async ({ provider }) => {
-    render(<SignInFlow providerId={provider} />)
-
-    const callbackUrl = window.location.href
-    userEvent.click(screen.getByRole("button"))
-
-    await waitFor(() => {
-      expect(window.location.href).toBe(
-        `http://localhost/api/auth/signin?${new URLSearchParams({
-          callbackUrl,
-        })}`
-      )
-    })
-  }
-)
-
-test.each`
-  provider         | mockUrl
-  ${`email`}       | ${mockEmailResponse.url}
-  ${`credentials`} | ${mockCredentialsResponse.url}
-`(
-  "$provider provider redirects if `redirect` is `true`",
-  async ({ provider, mockUrl }) => {
-    render(<SignInFlow providerId={provider} redirect={true} />)
-
-    userEvent.click(screen.getByRole("button"))
-
-    await waitFor(() => {
-      expect(window.location.href).toBe(mockUrl)
-    })
-  }
-)
-
-test("redirection can't be stopped using an oauth provider", async () => {
-  render(
-    <SignInFlow
-      providerId="github"
-      callbackUrl={callbackUrl}
-      redirect={false}
-    />
-  )
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(window.location.href).toBe(mockGithubResponse.url)
-  })
-})
-
-test("redirection can be stopped using the 'credentials' provider", async () => {
-  render(
-    <SignInFlow
-      providerId="credentials"
-      callbackUrl={callbackUrl}
-      redirect={false}
-    />
-  )
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(window.location.href).not.toBe(mockCredentialsResponse.url)
-
-    expect(screen.getByTestId("signin-result").textContent).not.toBe(
-      "no response"
-    )
-  })
-
-  // snapshot the expected return shape from `signIn`
-  expect(JSON.parse(screen.getByTestId("signin-result").textContent))
-    .toMatchInlineSnapshot(`
-    Object {
-      "error": null,
-      "ok": true,
-      "status": 200,
-      "url": "https://path/to/credentials/url",
-    }
-  `)
-})
-
-test("redirection can be stopped using the 'email' provider", async () => {
-  render(
-    <SignInFlow providerId="email" callbackUrl={callbackUrl} redirect={false} />
-  )
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(window.location.href).not.toBe(mockEmailResponse.url)
-
-    expect(screen.getByTestId("signin-result").textContent).not.toBe(
-      "no response"
-    )
-  })
-
-  // snapshot the expected return shape from `signIn` oauth
-  expect(JSON.parse(screen.getByTestId("signin-result").textContent))
-    .toMatchInlineSnapshot(`
-    Object {
-      "error": null,
-      "ok": true,
-      "status": 200,
-      "url": "https://path/to/email/url",
-    }
-  `)
-})
-
-test("if callback URL contains a hash we force a window reload when re-directing", async () => {
-  const mockUrlWithHash = "https://path/to/email/url#foo-bar-baz"
-
-  server.use(
-    rest.post("*/api/auth/signin/email", (req, res, ctx) => {
-      return res(
-        ctx.status(200),
-        ctx.json({
-          ...mockEmailResponse,
-          url: mockUrlWithHash,
-        })
-      )
-    })
-  )
-
-  render(<SignInFlow providerId="email" callbackUrl={mockUrlWithHash} />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(window.location.href).toBe(mockUrlWithHash)
-    // the browser will not refresh the page if the redirect URL contains a hash, hence we force it on the client, see #1289
-    expect(window.location.reload).toHaveBeenCalledTimes(1)
-  })
-})
-
-test("params are propagated to the signin URL when supplied", async () => {
-  let matchedParams = ""
-  const authParams = "foo=bar&bar=foo"
-
-  server.use(
-    rest.post("*/auth/signin/github", (req, res, ctx) => {
-      matchedParams = req.url.search
-      return res(ctx.status(200), ctx.json(mockGithubResponse))
-    })
-  )
-
-  render(<SignInFlow providerId="github" authorizationParams={authParams} />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(matchedParams).toEqual(`?${authParams}`)
-  })
-})
-
-test("when it fails to fetch the providers, it redirected back to signin page", async () => {
-  const errorMsg = "Error when retrieving providers"
-
-  server.use(
-    rest.get("*/api/auth/providers", (req, res, ctx) =>
-      res(ctx.status(500), ctx.json(errorMsg))
-    )
-  )
-
-  render(<SignInFlow providerId="github" />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(window.location.href).toBe(`http://localhost/api/auth/error`)
-
-    expect(logger.error).toHaveBeenCalledTimes(1)
-    expect(logger.error).toBeCalledWith("CLIENT_FETCH_ERROR", {
-      error: "Error when retrieving providers",
-      url: "/api/auth/providers",
-    })
-  })
-})
-
-function SignInFlow({
-  providerId,
-  callbackUrl,
-  redirect = true,
-  authorizationParams = {},
-}) {
-  const [response, setResponse] = useState(null)
-
-  async function handleSignIn() {
-    const result = await signIn(
-      providerId,
-      { callbackUrl, redirect },
-      authorizationParams
-    )
-
-    setResponse(result)
-  }
-
-  return (
-    <>
-      <p data-testid="signin-result">
-        {response ? JSON.stringify(response) : "no response"}
-      </p>
-      <button onClick={handleSignIn}>Sign in</button>
-    </>
-  )
-}
diff --git a/node_modules/next-auth/src/client/__tests__/sign-out.test.js b/node_modules/next-auth/src/client/__tests__/sign-out.test.js
deleted file mode 100644
index 508ed25..0000000
--- a/node_modules/next-auth/src/client/__tests__/sign-out.test.js
+++ /dev/null
@@ -1,124 +0,0 @@
-import { useState } from "react"
-import userEvent from "@testing-library/user-event"
-import { render, screen, waitFor } from "@testing-library/react"
-import { server, mockSignOutResponse } from "./helpers/mocks"
-import { signOut } from "../../react"
-import { rest } from "msw"
-import { getBroadcastEvents } from "./helpers/utils"
-
-const { location } = window
-
-beforeAll(() => {
-  server.listen()
-  // Allows to mutate `window.location`...
-  delete window.location
-  window.location = {
-    reload: jest.fn(),
-    href: location.href,
-  }
-})
-
-beforeEach(() => {
-  // eslint-disable-next-line no-proto
-  jest.spyOn(window.localStorage.__proto__, "setItem")
-})
-
-afterEach(() => {
-  jest.clearAllMocks()
-  server.resetHandlers()
-})
-
-afterAll(() => {
-  window.location = location
-  server.close()
-})
-
-const callbackUrl = "https://redirects/to"
-
-test("by default it redirects to the current URL if the server did not provide one", async () => {
-  server.use(
-    rest.post("*/api/auth/signout", (req, res, ctx) =>
-      res(ctx.status(200), ctx.json({ ...mockSignOutResponse, url: undefined }))
-    )
-  )
-
-  render(<SignOutFlow />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(window.location.href).toBe(window.location.href)
-  })
-})
-
-test("it redirects to the URL allowed by the server", async () => {
-  render(<SignOutFlow callbackUrl={callbackUrl} />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(window.location.href).toBe(mockSignOutResponse.url)
-  })
-})
-
-test("if url contains a hash during redirection a page reload happens", async () => {
-  const mockUrlWithHash = "https://path/to/email/url#foo-bar-baz"
-
-  server.use(
-    rest.post("*/api/auth/signout", (req, res, ctx) => {
-      return res(
-        ctx.status(200),
-        ctx.json({
-          ...mockSignOutResponse,
-          url: mockUrlWithHash,
-        })
-      )
-    })
-  )
-
-  render(<SignOutFlow />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    expect(window.location.href).toBe(mockUrlWithHash)
-  })
-})
-
-test("will broadcast the signout event to other tabs", async () => {
-  render(<SignOutFlow />)
-
-  userEvent.click(screen.getByRole("button"))
-
-  await waitFor(() => {
-    const broadcastCalls = getBroadcastEvents()
-    const [broadcastedEvent] = broadcastCalls
-
-    expect(broadcastCalls).toHaveLength(1)
-    expect(broadcastedEvent.eventName).toBe("nextauth.message")
-    expect(broadcastedEvent.value).toStrictEqual({
-      data: {
-        trigger: "signout",
-      },
-      event: "session",
-    })
-  })
-})
-
-function SignOutFlow({ callbackUrl, redirect = true }) {
-  const [response, setResponse] = useState(null)
-
-  async function handleSignOut() {
-    const result = await signOut({ callbackUrl, redirect })
-    setResponse(result)
-  }
-
-  return (
-    <>
-      <p data-testid="signout-result">
-        {response ? JSON.stringify(response) : "no response"}
-      </p>
-      <button onClick={handleSignOut}>Sign out</button>
-    </>
-  )
-}
diff --git a/node_modules/next-auth/src/client/__tests__/use-session-hook.test.js b/node_modules/next-auth/src/client/__tests__/use-session-hook.test.js
deleted file mode 100644
index 86bd06b..0000000
--- a/node_modules/next-auth/src/client/__tests__/use-session-hook.test.js
+++ /dev/null
@@ -1,140 +0,0 @@
-import { rest } from "msw"
-import { renderHook } from "@testing-library/react-hooks"
-import { render, waitFor } from "@testing-library/react"
-import { SessionProvider, useSession, signOut } from "../../react"
-import { server, mockSession } from "./helpers/mocks"
-
-const origConsoleError = console.error
-const { location } = window
-
-let _href = window.location.href
-beforeAll(() => {
-  // Prevent noise on the terminal... `next-auth` will log to `console.error`
-  // every time a request fails, which makes the tests output very noisy...
-  console.error = jest.fn()
-
-  // Allows to mutate `window.location`...
-  delete window.location
-  window.location = {}
-  Object.defineProperty(window.location, "href", {
-    get: () => _href,
-    // whatwg-fetch or whatwg-url does not seem to work with relative URLs
-    set: (href) => {
-      _href = href.startsWith("/") ? `http://localhost${href}` : href
-      return _href
-    },
-  })
-
-  server.listen()
-})
-
-afterEach(() => {
-  server.resetHandlers()
-  _href = "http://localhost/"
-
-  // clear the internal session cache...
-  signOut({ redirect: false })
-})
-
-afterAll(() => {
-  console.error = origConsoleError
-  window.location = location
-  server.close()
-})
-
-test("it won't allow to fetch the session in isolation without a session context", () => {
-  function App() {
-    useSession()
-    return null
-  }
-
-  expect(() => render(<App />)).toThrow(
-    "[next-auth]: `useSession` must be wrapped in a <SessionProvider />"
-  )
-})
-
-test("when fetching the session, there won't be `data` and `status` will be 'loading'", () => {
-  const { result } = renderHook(() => useSession(), {
-    wrapper: SessionProvider,
-  })
-
-  expect(result.current.data).toBe(undefined)
-  expect(result.current.status).toBe("loading")
-})
-
-test("when session is fetched, `data` will contain the session data and `status` will be 'authenticated'", async () => {
-  const { result } = renderHook(() => useSession(), {
-    wrapper: SessionProvider,
-  })
-
-  await waitFor(() => {
-    expect(result.current.data).toEqual(mockSession)
-    expect(result.current.status).toBe("authenticated")
-  })
-})
-
-test("when it fails to fetch the session, `data` will be null and `status` will be 'unauthenticated'", async () => {
-  server.use(
-    rest.get(`http://localhost/api/auth/session`, (_, res, ctx) =>
-      res(ctx.status(401), ctx.json({}))
-    )
-  )
-
-  const { result } = renderHook(() => useSession(), {
-    wrapper: SessionProvider,
-  })
-
-  return waitFor(() => {
-    expect(result.current.data).toEqual(null)
-    expect(result.current.status).toBe("unauthenticated")
-  })
-})
-
-test("it'll redirect to sign-in page if the session is required and the user is not authenticated", async () => {
-  server.use(
-    rest.get(`http://localhost/api/auth/session`, (req, res, ctx) =>
-      res(ctx.status(401), ctx.json({}))
-    )
-  )
-
-  const callbackUrl = window.location.href
-  const { result } = renderHook(() => useSession({ required: true }), {
-    wrapper: SessionProvider,
-  })
-
-  await waitFor(() => {
-    expect(result.current.data).toEqual(null)
-    expect(result.current.status).toBe("loading")
-  })
-
-  expect(window.location.href).toBe(
-    `http://localhost/api/auth/signin?${new URLSearchParams({
-      error: "SessionRequired",
-      callbackUrl,
-    })}`
-  )
-})
-
-test("will call custom redirect logic if supplied when the user could not authenticate", async () => {
-  server.use(
-    rest.get(`http://localhost/api/auth/session`, (_, res, ctx) =>
-      res(ctx.status(401), ctx.json({}))
-    )
-  )
-
-  const customRedirect = jest.fn()
-
-  const { result } = renderHook(
-    () => useSession({ required: true, onUnauthenticated: customRedirect }),
-    {
-      wrapper: SessionProvider,
-    }
-  )
-
-  await waitFor(() => {
-    expect(result.current.data).toEqual(null)
-    expect(result.current.status).toBe("loading")
-  })
-
-  expect(customRedirect).toHaveBeenCalledTimes(1)
-})
diff --git a/node_modules/next-auth/src/client/_utils.ts b/node_modules/next-auth/src/client/_utils.ts
deleted file mode 100644
index 1f3819e..0000000
--- a/node_modules/next-auth/src/client/_utils.ts
+++ /dev/null
@@ -1,120 +0,0 @@
-import type { IncomingMessage } from "http"
-import type { LoggerInstance, Session } from ".."
-
-export interface AuthClientConfig {
-  baseUrl: string
-  basePath: string
-  baseUrlServer: string
-  basePathServer: string
-  /** Stores last session response */
-  _session?: Session | null | undefined
-  /** Used for timestamp since last sycned (in seconds) */
-  _lastSync: number
-  /**
-   * Stores the `SessionProvider`'s session update method to be able to
-   * trigger session updates from places like `signIn` or `signOut`
-   */
-  _getSession: (...args: any[]) => any
-}
-
-export interface CtxOrReq {
-  req?: Partial<IncomingMessage> & { body?: any }
-  ctx?: { req: Partial<IncomingMessage> & { body?: any } }
-}
-
-/**
- * If passed 'appContext' via getInitialProps() in _app.js
- * then get the req object from ctx and use that for the
- * req value to allow `fetchData` to
- * work seemlessly in getInitialProps() on server side
- * pages *and* in _app.js.
- */
-export async function fetchData<T = any>(
-  path: string,
-  __NEXTAUTH: AuthClientConfig,
-  logger: LoggerInstance,
-  { ctx, req = ctx?.req }: CtxOrReq = {}
-): Promise<T | null> {
-  const url = `${apiBaseUrl(__NEXTAUTH)}/${path}`
-  try {
-    const options: RequestInit = {
-      headers: {
-        "Content-Type": "application/json",
-        ...(req?.headers?.cookie ? { cookie: req.headers.cookie } : {}),
-      },
-    }
-
-    if (req?.body) {
-      options.body = JSON.stringify(req.body)
-      options.method = "POST"
-    }
-
-    const res = await fetch(url, options)
-    const data = await res.json()
-    if (!res.ok) throw data
-    return Object.keys(data).length > 0 ? data : null // Return null if data empty
-  } catch (error) {
-    logger.error("CLIENT_FETCH_ERROR", { error: error as Error, url })
-    return null
-  }
-}
-
-export function apiBaseUrl(__NEXTAUTH: AuthClientConfig) {
-  if (typeof window === "undefined") {
-    // Return absolute path when called server side
-    return `${__NEXTAUTH.baseUrlServer}${__NEXTAUTH.basePathServer}`
-  }
-  // Return relative path when called client side
-  return __NEXTAUTH.basePath
-}
-
-/** Returns the number of seconds elapsed since January 1, 1970 00:00:00 UTC. */
-export function now() {
-  return Math.floor(Date.now() / 1000)
-}
-
-export interface BroadcastMessage {
-  event?: "session"
-  data?: { trigger?: "signout" | "getSession" }
-  clientId: string
-  timestamp: number
-}
-
-/**
- * Inspired by [Broadcast Channel API](https://developer.mozilla.org/en-US/docs/Web/API/Broadcast_Channel_API)
- * Only not using it directly, because Safari does not support it.
- *
- * https://caniuse.com/?search=broadcastchannel
- */
-export function BroadcastChannel(name = "nextauth.message") {
-  return {
-    /** Get notified by other tabs/windows. */
-    receive(onReceive: (message: BroadcastMessage) => void) {
-      const handler = (event: StorageEvent) => {
-        if (event.key !== name) return
-        const message: BroadcastMessage = JSON.parse(event.newValue ?? "{}")
-        if (message?.event !== "session" || !message?.data) return
-
-        onReceive(message)
-      }
-      window.addEventListener("storage", handler)
-      return () => window.removeEventListener("storage", handler)
-    },
-    /** Notify other tabs/windows. */
-    post(message: Record<string, unknown>) {
-      if (typeof window === "undefined") return
-      try {
-        localStorage.setItem(
-          name,
-          JSON.stringify({ ...message, timestamp: now() })
-        )
-      } catch {
-        /**
-         * The localStorage API isn't always available.
-         * It won't work in private mode prior to Safari 11 for example.
-         * Notifications are simply dropped if an error is encountered.
-         */
-      }
-    },
-  }
-}
diff --git a/node_modules/next-auth/src/core/errors.ts b/node_modules/next-auth/src/core/errors.ts
deleted file mode 100644
index b2eaf0b..0000000
--- a/node_modules/next-auth/src/core/errors.ts
+++ /dev/null
@@ -1,127 +0,0 @@
-import type { EventCallbacks, LoggerInstance } from ".."
-
-/**
- * Same as the default `Error`, but it is JSON serializable.
- * @source https://iaincollins.medium.com/error-handling-in-javascript-a6172ccdf9af
- */
-export class UnknownError extends Error {
-  code: string
-  constructor(error: Error | string) {
-    // Support passing error or string
-    super((error as Error)?.message ?? error)
-    this.name = "UnknownError"
-    this.code = (error as any).code
-    if (error instanceof Error) {
-      this.stack = error.stack
-    }
-  }
-
-  toJSON() {
-    return {
-      name: this.name,
-      message: this.message,
-      stack: this.stack,
-    }
-  }
-}
-
-export class OAuthCallbackError extends UnknownError {
-  name = "OAuthCallbackError"
-}
-
-/**
- * Thrown when an Email address is already associated with an account
- * but the user is trying an OAuth account that is not linked to it.
- */
-export class AccountNotLinkedError extends UnknownError {
-  name = "AccountNotLinkedError"
-}
-
-export class MissingAPIRoute extends UnknownError {
-  name = "MissingAPIRouteError"
-  code = "MISSING_NEXTAUTH_API_ROUTE_ERROR"
-}
-
-export class MissingSecret extends UnknownError {
-  name = "MissingSecretError"
-  code = "NO_SECRET"
-}
-
-export class MissingAuthorize extends UnknownError {
-  name = "MissingAuthorizeError"
-  code = "CALLBACK_CREDENTIALS_HANDLER_ERROR"
-}
-
-export class MissingAdapter extends UnknownError {
-  name = "MissingAdapterError"
-  code = "EMAIL_REQUIRES_ADAPTER_ERROR"
-}
-
-export class MissingAdapterMethods extends UnknownError {
-  name = "MissingAdapterMethodsError"
-  code = "MISSING_ADAPTER_METHODS_ERROR"
-}
-
-export class UnsupportedStrategy extends UnknownError {
-  name = "UnsupportedStrategyError"
-  code = "CALLBACK_CREDENTIALS_JWT_ERROR"
-}
-
-export class InvalidCallbackUrl extends UnknownError {
-  name = "InvalidCallbackUrl"
-  code = "INVALID_CALLBACK_URL_ERROR"
-}
-
-type Method = (...args: any[]) => Promise<any>
-
-export function upperSnake(s: string) {
-  return s.replace(/([A-Z])/g, "_$1").toUpperCase()
-}
-
-export function capitalize(s: string) {
-  return `${s[0].toUpperCase()}${s.slice(1)}`
-}
-
-/**
- * Wraps an object of methods and adds error handling.
- */
-export function eventsErrorHandler(
-  methods: Partial<EventCallbacks>,
-  logger: LoggerInstance
-): Partial<EventCallbacks> {
-  return Object.keys(methods).reduce<any>((acc, name) => {
-    acc[name] = async (...args: any[]) => {
-      try {
-        const method: Method = methods[name as keyof Method]
-        return await method(...args)
-      } catch (e) {
-        logger.error(`${upperSnake(name)}_EVENT_ERROR`, e as Error)
-      }
-    }
-    return acc
-  }, {})
-}
-
-/** Handles adapter induced errors. */
-export function adapterErrorHandler<TAdapter>(
-  adapter: TAdapter | undefined,
-  logger: LoggerInstance
-): TAdapter | undefined {
-  if (!adapter) return
-
-  return Object.keys(adapter).reduce<any>((acc, name) => {
-    acc[name] = async (...args: any[]) => {
-      try {
-        logger.debug(`adapter_${name}`, { args })
-        const method: Method = adapter[name as keyof Method]
-        return await method(...args)
-      } catch (error) {
-        logger.error(`adapter_error_${name}`, error as Error)
-        const e = new UnknownError(error as Error)
-        e.name = `${capitalize(name)}Error`
-        throw e
-      }
-    }
-    return acc
-  }, {})
-}
diff --git a/node_modules/next-auth/src/core/index.ts b/node_modules/next-auth/src/core/index.ts
deleted file mode 100644
index 27ff069..0000000
--- a/node_modules/next-auth/src/core/index.ts
+++ /dev/null
@@ -1,322 +0,0 @@
-import logger, { setLogger } from "../utils/logger"
-import { detectOrigin } from "../utils/detect-origin"
-import * as routes from "./routes"
-import renderPage from "./pages"
-import { init } from "./init"
-import { assertConfig } from "./lib/assert"
-import { SessionStore } from "./lib/cookie"
-
-import type { AuthAction, AuthOptions } from "./types"
-import type { Cookie } from "./lib/cookie"
-import type { ErrorType } from "./pages/error"
-import { parse as parseCookie } from "cookie"
-
-export interface RequestInternal {
-  /** @default "http://localhost:3000" */
-  origin?: string
-  method?: string
-  cookies?: Partial<Record<string, string>>
-  headers?: Record<string, any>
-  query?: Record<string, any>
-  body?: Record<string, any>
-  action: AuthAction
-  providerId?: string
-  error?: string
-}
-
-export interface NextAuthHeader {
-  key: string
-  value: string
-}
-
-export interface ResponseInternal<
-  Body extends string | Record<string, any> | any[] = any
-> {
-  status?: number
-  headers?: NextAuthHeader[]
-  body?: Body
-  redirect?: string
-  cookies?: Cookie[]
-}
-
-export interface NextAuthHandlerParams {
-  req: Request | RequestInternal
-  options: AuthOptions
-}
-
-async function getBody(req: Request): Promise<Record<string, any> | undefined> {
-  try {
-    return await req.json()
-  } catch {}
-}
-
-// TODO:
-async function toInternalRequest(
-  req: RequestInternal | Request
-): Promise<RequestInternal> {
-  if (req instanceof Request) {
-    const url = new URL(req.url)
-    // TODO: handle custom paths?
-    const nextauth = url.pathname.split("/").slice(3)
-    const headers = Object.fromEntries(req.headers)
-    const query: Record<string, any> = Object.fromEntries(url.searchParams)
-    query.nextauth = nextauth
-
-    return {
-      action: nextauth[0] as AuthAction,
-      method: req.method,
-      headers,
-      body: await getBody(req),
-      cookies: parseCookie(req.headers.get("cookie") ?? ""),
-      providerId: nextauth[1],
-      error: url.searchParams.get("error") ?? nextauth[1],
-      origin: detectOrigin(
-        headers["x-forwarded-host"] ?? headers.host,
-        headers["x-forwarded-proto"]
-      ),
-      query,
-    }
-  }
-
-  const { headers } = req
-  const host = headers?.["x-forwarded-host"] ?? headers?.host
-  req.origin = detectOrigin(host, headers?.["x-forwarded-proto"])
-
-  return req
-}
-
-export async function AuthHandler<
-  Body extends string | Record<string, any> | any[]
->(params: NextAuthHandlerParams): Promise<ResponseInternal<Body>> {
-  const { options: authOptions, req: incomingRequest } = params
-
-  const req = await toInternalRequest(incomingRequest)
-
-  setLogger(authOptions.logger, authOptions.debug)
-
-  const assertionResult = assertConfig({ options: authOptions, req })
-
-  if (Array.isArray(assertionResult)) {
-    assertionResult.forEach(logger.warn)
-  } else if (assertionResult instanceof Error) {
-    // Bail out early if there's an error in the user config
-    logger.error(assertionResult.code, assertionResult)
-
-    const htmlPages = ["signin", "signout", "error", "verify-request"]
-    if (!htmlPages.includes(req.action) || req.method !== "GET") {
-      const message = `There is a problem with the server configuration. Check the server logs for more information.`
-      return {
-        status: 500,
-        headers: [{ key: "Content-Type", value: "application/json" }],
-        body: { message } as any,
-      }
-    }
-    const { pages, theme } = authOptions
-
-    const authOnErrorPage =
-      pages?.error && req.query?.callbackUrl?.startsWith(pages.error)
-
-    if (!pages?.error || authOnErrorPage) {
-      if (authOnErrorPage) {
-        logger.error(
-          "AUTH_ON_ERROR_PAGE_ERROR",
-          new Error(
-            `The error page ${pages?.error} should not require authentication`
-          )
-        )
-      }
-      const render = renderPage({ theme })
-      return render.error({ error: "configuration" })
-    }
-
-    return {
-      redirect: `${pages.error}?error=Configuration`,
-    }
-  }
-
-  const { action, providerId, error, method = "GET" } = req
-
-  const { options, cookies } = await init({
-    authOptions,
-    action,
-    providerId,
-    origin: req.origin,
-    callbackUrl: req.body?.callbackUrl ?? req.query?.callbackUrl,
-    csrfToken: req.body?.csrfToken,
-    cookies: req.cookies,
-    isPost: method === "POST",
-  })
-
-  const sessionStore = new SessionStore(
-    options.cookies.sessionToken,
-    req,
-    options.logger
-  )
-
-  if (method === "GET") {
-    const render = renderPage({ ...options, query: req.query, cookies })
-    const { pages } = options
-    switch (action) {
-      case "providers":
-        return (await routes.providers(options.providers)) as any
-      case "session": {
-        const session = await routes.session({ options, sessionStore })
-        if (session.cookies) cookies.push(...session.cookies)
-        return { ...session, cookies } as any
-      }
-      case "csrf":
-        return {
-          headers: [{ key: "Content-Type", value: "application/json" }],
-          body: { csrfToken: options.csrfToken } as any,
-          cookies,
-        }
-      case "signin":
-        if (pages.signIn) {
-          let signinUrl = `${pages.signIn}${
-            pages.signIn.includes("?") ? "&" : "?"
-          }callbackUrl=${encodeURIComponent(options.callbackUrl)}`
-          if (error)
-            signinUrl = `${signinUrl}&error=${encodeURIComponent(error)}`
-          return { redirect: signinUrl, cookies }
-        }
-
-        return render.signin()
-      case "signout":
-        if (pages.signOut) return { redirect: pages.signOut, cookies }
-
-        return render.signout()
-      case "callback":
-        if (options.provider) {
-          const callback = await routes.callback({
-            body: req.body,
-            query: req.query,
-            headers: req.headers,
-            cookies: req.cookies,
-            method,
-            options,
-            sessionStore,
-          })
-          if (callback.cookies) cookies.push(...callback.cookies)
-          return { ...callback, cookies }
-        }
-        break
-      case "verify-request":
-        if (pages.verifyRequest) {
-          return { redirect: pages.verifyRequest, cookies }
-        }
-        return render.verifyRequest()
-      case "error":
-        // These error messages are displayed in line on the sign in page
-        if (
-          [
-            "Signin",
-            "OAuthSignin",
-            "OAuthCallback",
-            "OAuthCreateAccount",
-            "EmailCreateAccount",
-            "Callback",
-            "OAuthAccountNotLinked",
-            "EmailSignin",
-            "CredentialsSignin",
-            "SessionRequired",
-          ].includes(error as string)
-        ) {
-          return { redirect: `${options.url}/signin?error=${error}`, cookies }
-        }
-
-        if (pages.error) {
-          return {
-            redirect: `${pages.error}${
-              pages.error.includes("?") ? "&" : "?"
-            }error=${error}`,
-            cookies,
-          }
-        }
-
-        return render.error({ error: error as ErrorType })
-      default:
-    }
-  } else if (method === "POST") {
-    switch (action) {
-      case "signin":
-        // Verified CSRF Token required for all sign-in routes
-        if (options.csrfTokenVerified && options.provider) {
-          const signin = await routes.signin({
-            query: req.query,
-            body: req.body,
-            options,
-          })
-          if (signin.cookies) cookies.push(...signin.cookies)
-          return { ...signin, cookies }
-        }
-
-        return { redirect: `${options.url}/signin?csrf=true`, cookies }
-      case "signout":
-        // Verified CSRF Token required for signout
-        if (options.csrfTokenVerified) {
-          const signout = await routes.signout({ options, sessionStore })
-          if (signout.cookies) cookies.push(...signout.cookies)
-          return { ...signout, cookies }
-        }
-        return { redirect: `${options.url}/signout?csrf=true`, cookies }
-      case "callback":
-        if (options.provider) {
-          // Verified CSRF Token required for credentials providers only
-          if (
-            options.provider.type === "credentials" &&
-            !options.csrfTokenVerified
-          ) {
-            return { redirect: `${options.url}/signin?csrf=true`, cookies }
-          }
-
-          const callback = await routes.callback({
-            body: req.body,
-            query: req.query,
-            headers: req.headers,
-            cookies: req.cookies,
-            method,
-            options,
-            sessionStore,
-          })
-          if (callback.cookies) cookies.push(...callback.cookies)
-          return { ...callback, cookies }
-        }
-        break
-      case "_log": {
-        if (authOptions.logger) {
-          try {
-            const { code, level, ...metadata } = req.body ?? {}
-            logger[level](code, metadata)
-          } catch (error) {
-            // If logging itself failed...
-            logger.error("LOGGER_ERROR", error as Error)
-          }
-        }
-        return {}
-      }
-      case "session": {
-        // Verified CSRF Token required for session updates
-        if (options.csrfTokenVerified) {
-          const session = await routes.session({
-            options,
-            sessionStore,
-            newSession: req.body?.data,
-            isUpdate: true,
-          })
-          if (session.cookies) cookies.push(...session.cookies)
-          return { ...session, cookies } as any
-        }
-
-        // If CSRF token is invalid, return a 400 status code
-        // we should not redirect to a page as this is an API route
-        return { status: 400, body: {} as any, cookies }
-      }
-      default:
-    }
-  }
-
-  return {
-    status: 400,
-    body: `Error: This action with HTTP ${method} is not supported by NextAuth.js` as any,
-  }
-}
diff --git a/node_modules/next-auth/src/core/init.ts b/node_modules/next-auth/src/core/init.ts
deleted file mode 100644
index 15a97a2..0000000
--- a/node_modules/next-auth/src/core/init.ts
+++ /dev/null
@@ -1,155 +0,0 @@
-import { randomBytes, randomUUID } from "crypto"
-import { AuthOptions } from ".."
-import logger from "../utils/logger"
-import { adapterErrorHandler, eventsErrorHandler } from "./errors"
-import parseProviders from "./lib/providers"
-import { createSecret } from "./lib/utils"
-import * as cookie from "./lib/cookie"
-import * as jwt from "../jwt"
-import { defaultCallbacks } from "./lib/default-callbacks"
-import { createCSRFToken } from "./lib/csrf-token"
-import { createCallbackUrl } from "./lib/callback-url"
-import { RequestInternal } from "."
-
-import type { InternalOptions } from "./types"
-import parseUrl from "../utils/parse-url"
-
-interface InitParams {
-  origin?: string
-  authOptions: AuthOptions
-  providerId?: string
-  action: InternalOptions["action"]
-  /** Callback URL value extracted from the incoming request. */
-  callbackUrl?: string
-  /** CSRF token value extracted from the incoming request. From body if POST, from query if GET */
-  csrfToken?: string
-  /** Is the incoming request a POST request? */
-  isPost: boolean
-  cookies: RequestInternal["cookies"]
-}
-
-/** Initialize all internal options and cookies. */
-export async function init({
-  authOptions,
-  providerId,
-  action,
-  origin,
-  cookies: reqCookies,
-  callbackUrl: reqCallbackUrl,
-  csrfToken: reqCsrfToken,
-  isPost,
-}: InitParams): Promise<{
-  options: InternalOptions
-  cookies: cookie.Cookie[]
-}> {
-  const url = parseUrl(origin)
-
-  const secret = createSecret({ authOptions, url })
-
-  const { providers, provider } = parseProviders({
-    providers: authOptions.providers,
-    url,
-    providerId,
-  })
-
-  const maxAge = 30 * 24 * 60 * 60 // Sessions expire after 30 days of being idle by default
-
-  // User provided options are overriden by other options,
-  // except for the options with special handling above
-  const options: InternalOptions = {
-    debug: false,
-    pages: {},
-    theme: {
-      colorScheme: "auto",
-      logo: "",
-      brandColor: "",
-      buttonText: "",
-    },
-    // Custom options override defaults
-    ...authOptions,
-    // These computed settings can have values in authOptions but we override them
-    // and are request-specific.
-    url,
-    action,
-    // @ts-expect-errors
-    provider,
-    cookies: {
-      ...cookie.defaultCookies(
-        authOptions.useSecureCookies ?? url.base.startsWith("https://")
-      ),
-      // Allow user cookie options to override any cookie settings above
-      ...authOptions.cookies,
-    },
-    secret,
-    providers,
-    // Session options
-    session: {
-      // If no adapter specified, force use of JSON Web Tokens (stateless)
-      strategy: authOptions.adapter ? "database" : "jwt",
-      maxAge,
-      updateAge: 24 * 60 * 60,
-      generateSessionToken: () => {
-        // Use `randomUUID` if available. (Node 15.6+)
-        return randomUUID?.() ?? randomBytes(32).toString("hex")
-      },
-      ...authOptions.session,
-    },
-    // JWT options
-    jwt: {
-      secret, // Use application secret if no keys specified
-      maxAge, // same as session maxAge,
-      encode: jwt.encode,
-      decode: jwt.decode,
-      ...authOptions.jwt,
-    },
-    // Event messages
-    events: eventsErrorHandler(authOptions.events ?? {}, logger),
-    adapter: adapterErrorHandler(authOptions.adapter, logger),
-    // Callback functions
-    callbacks: { ...defaultCallbacks, ...authOptions.callbacks },
-    logger,
-    callbackUrl: url.origin,
-  }
-
-  // Init cookies
-
-  const cookies: cookie.Cookie[] = []
-
-  const {
-    csrfToken,
-    cookie: csrfCookie,
-    csrfTokenVerified,
-  } = createCSRFToken({
-    options,
-    cookieValue: reqCookies?.[options.cookies.csrfToken.name],
-    isPost,
-    bodyValue: reqCsrfToken,
-  })
-
-  options.csrfToken = csrfToken
-  options.csrfTokenVerified = csrfTokenVerified
-
-  if (csrfCookie) {
-    cookies.push({
-      name: options.cookies.csrfToken.name,
-      value: csrfCookie,
-      options: options.cookies.csrfToken.options,
-    })
-  }
-
-  const { callbackUrl, callbackUrlCookie } = await createCallbackUrl({
-    options,
-    cookieValue: reqCookies?.[options.cookies.callbackUrl.name],
-    paramValue: reqCallbackUrl,
-  })
-  options.callbackUrl = callbackUrl
-  if (callbackUrlCookie) {
-    cookies.push({
-      name: options.cookies.callbackUrl.name,
-      value: callbackUrlCookie,
-      options: options.cookies.callbackUrl.options,
-    })
-  }
-
-  return { options, cookies }
-}
diff --git a/node_modules/next-auth/src/core/lib/assert.ts b/node_modules/next-auth/src/core/lib/assert.ts
deleted file mode 100644
index 9da4082..0000000
--- a/node_modules/next-auth/src/core/lib/assert.ts
+++ /dev/null
@@ -1,149 +0,0 @@
-import {
-  MissingAdapter,
-  MissingAPIRoute,
-  MissingAuthorize,
-  MissingSecret,
-  UnsupportedStrategy,
-  InvalidCallbackUrl,
-  MissingAdapterMethods,
-} from "../errors"
-import parseUrl from "../../utils/parse-url"
-import { defaultCookies } from "./cookie"
-
-import type { RequestInternal } from ".."
-import type { WarningCode } from "../../utils/logger"
-import type { AuthOptions } from "../types"
-
-type ConfigError =
-  | MissingAPIRoute
-  | MissingSecret
-  | UnsupportedStrategy
-  | MissingAuthorize
-  | MissingAdapter
-
-let warned = false
-
-function isValidHttpUrl(url: string, baseUrl: string) {
-  try {
-    return /^https?:/.test(
-      new URL(url, url.startsWith("/") ? baseUrl : undefined).protocol
-    )
-  } catch {
-    return false
-  }
-}
-
-/**
- * Verify that the user configured `next-auth` correctly.
- * Good place to mention deprecations as well.
- *
- * REVIEW: Make some of these and corresponding docs less Next.js specific?
- */
-export function assertConfig(params: {
-  options: AuthOptions
-  req: RequestInternal
-}): ConfigError | WarningCode[] {
-  const { options, req } = params
-
-  const warnings: WarningCode[] = []
-
-  if (!warned) {
-    if (!req.origin) warnings.push("NEXTAUTH_URL")
-
-    // TODO: Make this throw an error in next major. This will also get rid of `NODE_ENV`
-    if (!options.secret && process.env.NODE_ENV !== "production")
-      warnings.push("NO_SECRET")
-
-    if (options.debug) warnings.push("DEBUG_ENABLED")
-  }
-
-  if (!options.secret && process.env.NODE_ENV === "production") {
-    return new MissingSecret("Please define a `secret` in production.")
-  }
-
-  // req.query isn't defined when asserting `getServerSession` for example
-  if (!req.query?.nextauth && !req.action) {
-    return new MissingAPIRoute(
-      "Cannot find [...nextauth].{js,ts} in `/pages/api/auth`. Make sure the filename is written correctly."
-    )
-  }
-
-  const callbackUrlParam = req.query?.callbackUrl as string | undefined
-
-  const url = parseUrl(req.origin)
-
-  if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.base)) {
-    return new InvalidCallbackUrl(
-      `Invalid callback URL. Received: ${callbackUrlParam}`
-    )
-  }
-
-  const { callbackUrl: defaultCallbackUrl } = defaultCookies(
-    options.useSecureCookies ?? url.base.startsWith("https://")
-  )
-  const callbackUrlCookie =
-    req.cookies?.[options.cookies?.callbackUrl?.name ?? defaultCallbackUrl.name]
-
-  if (callbackUrlCookie && !isValidHttpUrl(callbackUrlCookie, url.base)) {
-    return new InvalidCallbackUrl(
-      `Invalid callback URL. Received: ${callbackUrlCookie}`
-    )
-  }
-
-  let hasCredentials, hasEmail
-  let hasTwitterOAuth2
-
-  for (const provider of options.providers) {
-    if (provider.type === "credentials") hasCredentials = true
-    else if (provider.type === "email") hasEmail = true
-    else if (provider.id === "twitter" && provider.version === "2.0")
-      hasTwitterOAuth2 = true
-  }
-
-  if (hasCredentials) {
-    const dbStrategy = options.session?.strategy === "database"
-    const onlyCredentials = !options.providers.some(
-      (p) => p.type !== "credentials"
-    )
-    if (dbStrategy && onlyCredentials) {
-      return new UnsupportedStrategy(
-        "Signin in with credentials only supported if JWT strategy is enabled"
-      )
-    }
-
-    const credentialsNoAuthorize = options.providers.some(
-      (p) => p.type === "credentials" && !p.authorize
-    )
-    if (credentialsNoAuthorize) {
-      return new MissingAuthorize(
-        "Must define an authorize() handler to use credentials authentication provider"
-      )
-    }
-  }
-
-  if (hasEmail) {
-    const { adapter } = options
-    if (!adapter) {
-      return new MissingAdapter("E-mail login requires an adapter.")
-    }
-
-    const missingMethods = [
-      "createVerificationToken",
-      "useVerificationToken",
-      "getUserByEmail",
-    ].filter((method) => !adapter[method])
-
-    if (missingMethods.length) {
-      return new MissingAdapterMethods(
-        `Required adapter methods were missing: ${missingMethods.join(", ")}`
-      )
-    }
-  }
-
-  if (!warned) {
-    if (hasTwitterOAuth2) warnings.push("TWITTER_OAUTH_2_BETA")
-    warned = true
-  }
-
-  return warnings
-}
diff --git a/node_modules/next-auth/src/core/lib/callback-handler.ts b/node_modules/next-auth/src/core/lib/callback-handler.ts
deleted file mode 100644
index f8c88a9..0000000
--- a/node_modules/next-auth/src/core/lib/callback-handler.ts
+++ /dev/null
@@ -1,229 +0,0 @@
-import { AccountNotLinkedError } from "../errors"
-import { fromDate } from "./utils"
-
-import type { InternalOptions } from "../types"
-import type { AdapterSession, AdapterUser } from "../../adapters"
-import type { JWT } from "../../jwt"
-import type { Account, User } from "../.."
-import type { SessionToken } from "./cookie"
-import { OAuthConfig } from "src/providers"
-
-/**
- * This function handles the complex flow of signing users in, and either creating,
- * linking (or not linking) accounts depending on if the user is currently logged
- * in, if they have account already and the authentication mechanism they are using.
- *
- * It prevents insecure behaviour, such as linking OAuth accounts unless a user is
- * signed in and authenticated with an existing valid account.
- *
- * All verification (e.g. OAuth flows or email address verificaiton flows) are
- * done prior to this handler being called to avoid additonal complexity in this
- * handler.
- */
-export default async function callbackHandler(params: {
-  sessionToken?: SessionToken
-  profile: User | AdapterUser | { email: string }
-  account: Account | null
-  options: InternalOptions
-}) {
-  const { sessionToken, profile: _profile, account, options } = params
-  // Input validation
-  if (!account?.providerAccountId || !account.type)
-    throw new Error("Missing or invalid provider account")
-  if (!["email", "oauth"].includes(account.type))
-    throw new Error("Provider not supported")
-
-  const {
-    adapter,
-    jwt,
-    events,
-    session: { strategy: sessionStrategy, generateSessionToken },
-  } = options
-
-  // If no adapter is configured then we don't have a database and cannot
-  // persist data; in this mode we just return a dummy session object.
-  if (!adapter) {
-    return { user: _profile as User, account }
-  }
-
-  const profile = _profile as AdapterUser
-
-  const {
-    createUser,
-    updateUser,
-    getUser,
-    getUserByAccount,
-    getUserByEmail,
-    linkAccount,
-    createSession,
-    getSessionAndUser,
-    deleteSession,
-  } = adapter
-
-  let session: AdapterSession | JWT | null = null
-  let user: AdapterUser | null = null
-  let isNewUser = false
-
-  const useJwtSession = sessionStrategy === "jwt"
-
-  if (sessionToken) {
-    if (useJwtSession) {
-      try {
-        session = await jwt.decode({ ...jwt, token: sessionToken })
-        if (session && "sub" in session && session.sub) {
-          user = await getUser(session.sub)
-        }
-      } catch {
-        // If session can't be verified, treat as no session
-      }
-    } else {
-      const userAndSession = await getSessionAndUser(sessionToken)
-      if (userAndSession) {
-        session = userAndSession.session
-        user = userAndSession.user
-      }
-    }
-  }
-
-  if (account.type === "email") {
-    // If signing in with an email, check if an account with the same email address exists already
-    const userByEmail = await getUserByEmail(profile.email)
-    if (userByEmail) {
-      // If they are not already signed in as the same user, this flow will
-      // sign them out of the current session and sign them in as the new user
-      if (user?.id !== userByEmail.id && !useJwtSession && sessionToken) {
-        // Delete existing session if they are currently signed in as another user.
-        // This will switch user accounts for the session in cases where the user was
-        // already logged in with a different account.
-        await deleteSession(sessionToken)
-      }
-
-      // Update emailVerified property on the user object
-      user = await updateUser({ id: userByEmail.id, emailVerified: new Date() })
-      await events.updateUser?.({ user })
-    } else {
-      const { id: _, ...newUser } = { ...profile, emailVerified: new Date() }
-      // Create user account if there isn't one for the email address already
-      user = await createUser(newUser)
-      await events.createUser?.({ user })
-      isNewUser = true
-    }
-
-    // Create new session
-    session = useJwtSession
-      ? {}
-      : await createSession({
-          sessionToken: await generateSessionToken(),
-          userId: user.id,
-          expires: fromDate(options.session.maxAge),
-        })
-
-    return { session, user, isNewUser }
-  } else if (account.type === "oauth") {
-    // If signing in with OAuth account, check to see if the account exists already
-    const userByAccount = await getUserByAccount({
-      providerAccountId: account.providerAccountId,
-      provider: account.provider,
-    })
-    if (userByAccount) {
-      if (user) {
-        // If the user is already signed in with this account, we don't need to do anything
-        if (userByAccount.id === user.id) {
-          return { session, user, isNewUser }
-        }
-        // If the user is currently signed in, but the new account they are signing in
-        // with is already associated with another user, then we cannot link them
-        // and need to return an error.
-        throw new AccountNotLinkedError(
-          "The account is already associated with another user"
-        )
-      }
-      // If there is no active session, but the account being signed in with is already
-      // associated with a valid user then create session to sign the user in.
-      session = useJwtSession
-        ? {}
-        : await createSession({
-            sessionToken: await generateSessionToken(),
-            userId: userByAccount.id,
-            expires: fromDate(options.session.maxAge),
-          })
-
-      return { session, user: userByAccount, isNewUser }
-    } else {
-      if (user) {
-        // If the user is already signed in and the OAuth account isn't already associated
-        // with another user account then we can go ahead and link the accounts safely.
-        await linkAccount({ ...account, userId: user.id })
-        await events.linkAccount?.({ user, account, profile })
-
-        // As they are already signed in, we don't need to do anything after linking them
-        return { session, user, isNewUser }
-      }
-
-      // If the user is not signed in and it looks like a new OAuth account then we
-      // check there also isn't an user account already associated with the same
-      // email address as the one in the OAuth profile.
-      //
-      // This step is often overlooked in OAuth implementations, but covers the following cases:
-      //
-      // 1. It makes it harder for someone to accidentally create two accounts.
-      //    e.g. by signin in with email, then again with an oauth account connected to the same email.
-      // 2. It makes it harder to hijack a user account using a 3rd party OAuth account.
-      //    e.g. by creating an oauth account then changing the email address associated with it.
-      //
-      // It's quite common for services to automatically link accounts in this case, but it's
-      // better practice to require the user to sign in *then* link accounts to be sure
-      // someone is not exploiting a problem with a third party OAuth service.
-      //
-      // OAuth providers should require email address verification to prevent this, but in
-      // practice that is not always the case; this helps protect against that.
-      const userByEmail = profile.email
-        ? await getUserByEmail(profile.email)
-        : null
-      if (userByEmail) {
-        const provider = options.provider as OAuthConfig<any>
-        if (provider?.allowDangerousEmailAccountLinking) {
-          // If you trust the oauth provider to correctly verify email addresses, you can opt-in to
-          // account linking even when the user is not signed-in.
-          user = userByEmail
-        } else {
-          // We end up here when we don't have an account with the same [provider].id *BUT*
-          // we do already have an account with the same email address as the one in the
-          // OAuth profile the user has just tried to sign in with.
-          //
-          // We don't want to have two accounts with the same email address, and we don't
-          // want to link them in case it's not safe to do so, so instead we prompt the user
-          // to sign in via email to verify their identity and then link the accounts.
-          throw new AccountNotLinkedError(
-            "Another account already exists with the same e-mail address"
-          )
-        }
-      } else {
-        // If the current user is not logged in and the profile isn't linked to any user
-        // accounts (by email or provider account id)...
-        //
-        // If no account matching the same [provider].id or .email exists, we can
-        // create a new account for the user, link it to the OAuth acccount and
-        // create a new session for them so they are signed in with it.
-        const { id: _, ...newUser } = { ...profile, emailVerified: null }
-        user = await createUser(newUser)
-      }
-      await events.createUser?.({ user })
-
-      await linkAccount({ ...account, userId: user.id })
-      await events.linkAccount?.({ user, account, profile })
-
-      session = useJwtSession
-        ? {}
-        : await createSession({
-            sessionToken: await generateSessionToken(),
-            userId: user.id,
-            expires: fromDate(options.session.maxAge),
-          })
-
-      return { session, user, isNewUser: true }
-    }
-  }
-
-  throw new Error("Unsupported account type")
-}
diff --git a/node_modules/next-auth/src/core/lib/callback-url.ts b/node_modules/next-auth/src/core/lib/callback-url.ts
deleted file mode 100644
index a89983d..0000000
--- a/node_modules/next-auth/src/core/lib/callback-url.ts
+++ /dev/null
@@ -1,42 +0,0 @@
-import type { InternalOptions } from "../types"
-
-interface CreateCallbackUrlParams {
-  options: InternalOptions
-  /** Try reading value from request body (POST) then from query param (GET) */
-  paramValue?: string
-  cookieValue?: string
-}
-
-/**
- * Get callback URL based on query param / cookie + validation,
- * and add it to `req.options.callbackUrl`.
- */
-export async function createCallbackUrl({
-  options,
-  paramValue,
-  cookieValue,
-}: CreateCallbackUrlParams) {
-  const { url, callbacks } = options
-
-  let callbackUrl = url.origin
-
-  if (paramValue) {
-    // If callbackUrl form field or query parameter is passed try to use it if allowed
-    callbackUrl = await callbacks.redirect({
-      url: paramValue,
-      baseUrl: url.origin,
-    })
-  } else if (cookieValue) {
-    // If no callbackUrl specified, try using the value from the cookie if allowed
-    callbackUrl = await callbacks.redirect({
-      url: cookieValue,
-      baseUrl: url.origin,
-    })
-  }
-
-  return {
-    callbackUrl,
-    // Save callback URL in a cookie so that it can be used for subsequent requests in signin/signout/callback flow
-    callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : undefined,
-  }
-}
diff --git a/node_modules/next-auth/src/core/lib/cookie.ts b/node_modules/next-auth/src/core/lib/cookie.ts
deleted file mode 100644
index c7ae681..0000000
--- a/node_modules/next-auth/src/core/lib/cookie.ts
+++ /dev/null
@@ -1,237 +0,0 @@
-import type { CookiesOptions } from "../.."
-import type { CookieOption, LoggerInstance, SessionStrategy } from "../types"
-import type { NextRequest } from "next/server"
-import type { NextApiRequest } from "next"
-
-// Uncomment to recalculate the estimated size
-// of an empty session cookie
-// import { serialize } from "cookie"
-// console.log(
-//   "Cookie estimated to be ",
-//   serialize(`__Secure.next-auth.session-token.0`, "", {
-//     expires: new Date(),
-//     httpOnly: true,
-//     maxAge: Number.MAX_SAFE_INTEGER,
-//     path: "/",
-//     sameSite: "strict",
-//     secure: true,
-//     domain: "example.com",
-//   }).length,
-//   " bytes"
-// )
-
-const ALLOWED_COOKIE_SIZE = 4096
-// Based on commented out section above
-const ESTIMATED_EMPTY_COOKIE_SIZE = 163
-const CHUNK_SIZE = ALLOWED_COOKIE_SIZE - ESTIMATED_EMPTY_COOKIE_SIZE
-
-// REVIEW: Is there any way to defer two types of strings?
-
-/** Stringified form of `JWT`. Extract the content with `jwt.decode` */
-export type JWTString = string
-
-export type SetCookieOptions = Partial<CookieOption["options"]> & {
-  expires?: Date | string
-  encode?: (val: unknown) => string
-}
-
-/**
- * If `options.session.strategy` is set to `jwt`, this is a stringified `JWT`.
- * In case of `strategy: "database"`, this is the `sessionToken` of the session in the database.
- */
-export type SessionToken<T extends SessionStrategy = "jwt"> = T extends "jwt"
-  ? JWTString
-  : string
-
-/**
- * Use secure cookies if the site uses HTTPS
- * This being conditional allows cookies to work non-HTTPS development URLs
- * Honour secure cookie option, which sets 'secure' and also adds '__Secure-'
- * prefix, but enable them by default if the site URL is HTTPS; but not for
- * non-HTTPS URLs like http://localhost which are used in development).
- * For more on prefixes see https://googlechrome.github.io/samples/cookie-prefixes/
- *
- * @TODO Review cookie settings (names, options)
- */
-export function defaultCookies(useSecureCookies: boolean): CookiesOptions {
-  const cookiePrefix = useSecureCookies ? "__Secure-" : ""
-  return {
-    // default cookie options
-    sessionToken: {
-      name: `${cookiePrefix}next-auth.session-token`,
-      options: {
-        httpOnly: true,
-        sameSite: "lax",
-        path: "/",
-        secure: useSecureCookies,
-      },
-    },
-    callbackUrl: {
-      name: `${cookiePrefix}next-auth.callback-url`,
-      options: {
-        httpOnly: true,
-        sameSite: "lax",
-        path: "/",
-        secure: useSecureCookies,
-      },
-    },
-    csrfToken: {
-      // Default to __Host- for CSRF token for additional protection if using useSecureCookies
-      // NB: The `__Host-` prefix is stricter than the `__Secure-` prefix.
-      name: `${useSecureCookies ? "__Host-" : ""}next-auth.csrf-token`,
-      options: {
-        httpOnly: true,
-        sameSite: "lax",
-        path: "/",
-        secure: useSecureCookies,
-      },
-    },
-    pkceCodeVerifier: {
-      name: `${cookiePrefix}next-auth.pkce.code_verifier`,
-      options: {
-        httpOnly: true,
-        sameSite: "lax",
-        path: "/",
-        secure: useSecureCookies,
-        maxAge: 60 * 15, // 15 minutes in seconds
-      },
-    },
-    state: {
-      name: `${cookiePrefix}next-auth.state`,
-      options: {
-        httpOnly: true,
-        sameSite: "lax",
-        path: "/",
-        secure: useSecureCookies,
-        maxAge: 60 * 15, // 15 minutes in seconds
-      },
-    },
-    nonce: {
-      name: `${cookiePrefix}next-auth.nonce`,
-      options: {
-        httpOnly: true,
-        sameSite: "lax",
-        path: "/",
-        secure: useSecureCookies,
-      },
-    }
-  }
-}
-
-export interface Cookie extends CookieOption {
-  value: string
-}
-
-type Chunks = Record<string, string>
-
-export class SessionStore {
-  #chunks: Chunks = {}
-  #option: CookieOption
-  #logger: LoggerInstance | Console
-
-  constructor(
-    option: CookieOption,
-    req: Partial<{
-      cookies: NextRequest["cookies"] | NextApiRequest["cookies"]
-      headers: NextRequest["headers"] | NextApiRequest["headers"]
-    }>,
-    logger: LoggerInstance | Console
-  ) {
-    this.#logger = logger
-    this.#option = option
-
-    const { cookies } = req
-    const { name: cookieName } = option
-
-    if (typeof cookies?.getAll === "function") {
-      // Next.js ^v13.0.1 (Edge Env)
-      for (const { name, value } of cookies.getAll()) {
-        if (name.startsWith(cookieName)) {
-          this.#chunks[name] = value
-        }
-      }
-    } else if (cookies instanceof Map) {
-      for (const name of cookies.keys()) {
-        if (name.startsWith(cookieName)) this.#chunks[name] = cookies.get(name)
-      }
-    } else {
-      for (const name in cookies) {
-        if (name.startsWith(cookieName)) this.#chunks[name] = cookies[name]
-      }
-    }
-  }
-
-  get value() {
-    return Object.values(this.#chunks)?.join("")
-  }
-
-  /** Given a cookie, return a list of cookies, chunked to fit the allowed cookie size. */
-  #chunk(cookie: Cookie): Cookie[] {
-    const chunkCount = Math.ceil(cookie.value.length / CHUNK_SIZE)
-
-    if (chunkCount === 1) {
-      this.#chunks[cookie.name] = cookie.value
-      return [cookie]
-    }
-
-    const cookies: Cookie[] = []
-    for (let i = 0; i < chunkCount; i++) {
-      const name = `${cookie.name}.${i}`
-      const value = cookie.value.substr(i * CHUNK_SIZE, CHUNK_SIZE)
-      cookies.push({ ...cookie, name, value })
-      this.#chunks[name] = value
-    }
-
-    this.#logger.debug("CHUNKING_SESSION_COOKIE", {
-      message: `Session cookie exceeds allowed ${ALLOWED_COOKIE_SIZE} bytes.`,
-      emptyCookieSize: ESTIMATED_EMPTY_COOKIE_SIZE,
-      valueSize: cookie.value.length,
-      chunks: cookies.map((c) => c.value.length + ESTIMATED_EMPTY_COOKIE_SIZE),
-    })
-
-    return cookies
-  }
-
-  /** Returns cleaned cookie chunks. */
-  #clean(): Record<string, Cookie> {
-    const cleanedChunks: Record<string, Cookie> = {}
-    for (const name in this.#chunks) {
-      delete this.#chunks?.[name]
-      cleanedChunks[name] = {
-        name,
-        value: "",
-        options: { ...this.#option.options, maxAge: 0 },
-      }
-    }
-    return cleanedChunks
-  }
-
-  /**
-   * Given a cookie value, return new cookies, chunked, to fit the allowed cookie size.
-   * If the cookie has changed from chunked to unchunked or vice versa,
-   * it deletes the old cookies as well.
-   */
-  chunk(value: string, options: Partial<Cookie["options"]>): Cookie[] {
-    // Assume all cookies should be cleaned by default
-    const cookies: Record<string, Cookie> = this.#clean()
-
-    // Calculate new chunks
-    const chunked = this.#chunk({
-      name: this.#option.name,
-      value,
-      options: { ...this.#option.options, ...options },
-    })
-
-    // Update stored chunks / cookies
-    for (const chunk of chunked) {
-      cookies[chunk.name] = chunk
-    }
-
-    return Object.values(cookies)
-  }
-
-  /** Returns a list of cookies that should be cleaned. */
-  clean(): Cookie[] {
-    return Object.values(this.#clean())
-  }
-}
diff --git a/node_modules/next-auth/src/core/lib/csrf-token.ts b/node_modules/next-auth/src/core/lib/csrf-token.ts
deleted file mode 100644
index cd61492..0000000
--- a/node_modules/next-auth/src/core/lib/csrf-token.ts
+++ /dev/null
@@ -1,55 +0,0 @@
-import { createHash, randomBytes } from "crypto"
-
-import type { InternalOptions } from "../types"
-
-interface CreateCSRFTokenParams {
-  options: InternalOptions
-  cookieValue?: string
-  isPost: boolean
-  bodyValue?: string
-}
-
-/**
- * Ensure CSRF Token cookie is set for any subsequent requests.
- * Used as part of the strategy for mitigation for CSRF tokens.
- *
- * Creates a cookie like 'next-auth.csrf-token' with the value 'token|hash',
- * where 'token' is the CSRF token and 'hash' is a hash made of the token and
- * the secret, and the two values are joined by a pipe '|'. By storing the
- * value and the hash of the value (with the secret used as a salt) we can
- * verify the cookie was set by the server and not by a malicous attacker.
- *
- * For more details, see the following OWASP links:
- * https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie
- * https://owasp.org/www-chapter-london/assets/slides/David_Johansson-Double_Defeat_of_Double-Submit_Cookie.pdf
- */
-export function createCSRFToken({
-  options,
-  cookieValue,
-  isPost,
-  bodyValue,
-}: CreateCSRFTokenParams) {
-  if (cookieValue) {
-    const [csrfToken, csrfTokenHash] = cookieValue.split("|")
-    const expectedCsrfTokenHash = createHash("sha256")
-      .update(`${csrfToken}${options.secret}`)
-      .digest("hex")
-    if (csrfTokenHash === expectedCsrfTokenHash) {
-      // If hash matches then we trust the CSRF token value
-      // If this is a POST request and the CSRF Token in the POST request matches
-      // the cookie we have already verified is the one we have set, then the token is verified!
-      const csrfTokenVerified = isPost && csrfToken === bodyValue
-
-      return { csrfTokenVerified, csrfToken }
-    }
-  }
-
-  // New CSRF token
-  const csrfToken = randomBytes(32).toString("hex")
-  const csrfTokenHash = createHash("sha256")
-    .update(`${csrfToken}${options.secret}`)
-    .digest("hex")
-  const cookie = `${csrfToken}|${csrfTokenHash}`
-
-  return { cookie, csrfToken }
-}
diff --git a/node_modules/next-auth/src/core/lib/default-callbacks.ts b/node_modules/next-auth/src/core/lib/default-callbacks.ts
deleted file mode 100644
index d00298c..0000000
--- a/node_modules/next-auth/src/core/lib/default-callbacks.ts
+++ /dev/null
@@ -1,18 +0,0 @@
-import { CallbacksOptions } from "../.."
-
-export const defaultCallbacks: CallbacksOptions = {
-  signIn() {
-    return true
-  },
-  redirect({ url, baseUrl }) {
-    if (url.startsWith("/")) return `${baseUrl}${url}`
-    else if (new URL(url).origin === baseUrl) return url
-    return baseUrl
-  },
-  session({ session }) {
-    return session
-  },
-  jwt({ token }) {
-    return token
-  },
-}
diff --git a/node_modules/next-auth/src/core/lib/email/getUserFromEmail.ts b/node_modules/next-auth/src/core/lib/email/getUserFromEmail.ts
deleted file mode 100644
index 2119c28..0000000
--- a/node_modules/next-auth/src/core/lib/email/getUserFromEmail.ts
+++ /dev/null
@@ -1,20 +0,0 @@
-import type { AdapterUser } from "../../../adapters"
-import type { InternalOptions } from "../../types"
-
-/**
- * Query the database for a user by email address.
- * If is an existing user return a user object (otherwise use placeholder).
- */
-export default async function getAdapterUserFromEmail({
-  email,
-  adapter,
-}: {
-  email: string
-  adapter: InternalOptions<"email">["adapter"]
-}): Promise<AdapterUser> {
-  const { getUserByEmail } = adapter
-  const adapterUser = email ? await getUserByEmail(email) : null
-  if (adapterUser) return adapterUser
-
-  return { id: email, email, emailVerified: null }
-}
diff --git a/node_modules/next-auth/src/core/lib/email/signin.ts b/node_modules/next-auth/src/core/lib/email/signin.ts
deleted file mode 100644
index fa4ba15..0000000
--- a/node_modules/next-auth/src/core/lib/email/signin.ts
+++ /dev/null
@@ -1,50 +0,0 @@
-import { randomBytes } from "crypto"
-import { hashToken } from "../utils"
-import type { InternalOptions } from "../../types"
-
-/**
- * Starts an e-mail login flow, by generating a token,
- * and sending it to the user's e-mail (with the help of a DB adapter)
- */
-export default async function email(
-  identifier: string,
-  options: InternalOptions<"email">
-): Promise<string> {
-  const { url, adapter, provider, callbackUrl, theme } = options
-  // Generate token
-  const token =
-    (await provider.generateVerificationToken?.()) ??
-    randomBytes(32).toString("hex")
-
-  const ONE_DAY_IN_SECONDS = 86400
-  const expires = new Date(
-    Date.now() + (provider.maxAge ?? ONE_DAY_IN_SECONDS) * 1000
-  )
-
-  // Generate a link with email, unhashed token and callback url
-  const params = new URLSearchParams({ callbackUrl, token, email: identifier })
-  const _url = `${url}/callback/${provider.id}?${params}`
-
-  await Promise.all([
-    // Send to user
-    provider.sendVerificationRequest({
-      identifier,
-      token,
-      expires,
-      url: _url,
-      provider,
-      theme,
-    }),
-    // Save in database
-    adapter.createVerificationToken({
-      identifier,
-      token: hashToken(token, options),
-      expires,
-    }),
-  ])
-
-  return `${url}/verify-request?${new URLSearchParams({
-    provider: provider.id,
-    type: provider.type,
-  })}`
-}
diff --git a/node_modules/next-auth/src/core/lib/oauth/authorization-url.ts b/node_modules/next-auth/src/core/lib/oauth/authorization-url.ts
deleted file mode 100644
index 0fc022f..0000000
--- a/node_modules/next-auth/src/core/lib/oauth/authorization-url.ts
+++ /dev/null
@@ -1,63 +0,0 @@
-import { openidClient } from "./client"
-import { oAuth1Client, oAuth1TokenStore } from "./client-legacy"
-import * as checks from "./checks"
-
-import type { AuthorizationParameters } from "openid-client"
-import type { InternalOptions } from "../../types"
-import type { RequestInternal } from "../.."
-import type { Cookie } from "../cookie"
-
-/**
- *
- * Generates an authorization/request token URL.
- *
- * [OAuth 2](https://www.oauth.com/oauth2-servers/authorization/the-authorization-request/) | [OAuth 1](https://oauth.net/core/1.0a/#auth_step2)
- */
-export default async function getAuthorizationUrl({
-  options,
-  query,
-}: {
-  options: InternalOptions<"oauth">
-  query: RequestInternal["query"]
-}) {
-  const { logger, provider } = options
-  let params: any = {}
-
-  if (typeof provider.authorization === "string") {
-    const parsedUrl = new URL(provider.authorization)
-    const parsedParams = Object.fromEntries(parsedUrl.searchParams)
-    params = { ...params, ...parsedParams }
-  } else {
-    params = { ...params, ...provider.authorization?.params }
-  }
-
-  params = { ...params, ...query }
-
-  // Handle OAuth v1.x
-  if (provider.version?.startsWith("1.")) {
-    const client = oAuth1Client(options)
-    const tokens = (await client.getOAuthRequestToken(params)) as any
-    const url = `${provider.authorization?.url}?${new URLSearchParams({
-      oauth_token: tokens.oauth_token,
-      oauth_token_secret: tokens.oauth_token_secret,
-      ...tokens.params,
-    })}`
-    oAuth1TokenStore.set(tokens.oauth_token, tokens.oauth_token_secret)
-    logger.debug("GET_AUTHORIZATION_URL", { url, provider })
-    return { redirect: url }
-  }
-
-  const client = await openidClient(options)
-
-  const authorizationParams: AuthorizationParameters = params
-  const cookies: Cookie[] = []
-
-  await checks.state.create(options, cookies, authorizationParams)
-  await checks.pkce.create(options, cookies, authorizationParams)
-  await checks.nonce.create(options, cookies, authorizationParams)
-
-  const url = client.authorizationUrl(authorizationParams)
-
-  logger.debug("GET_AUTHORIZATION_URL", { url, cookies, provider })
-  return { redirect: url, cookies }
-}
diff --git a/node_modules/next-auth/src/core/lib/oauth/callback.ts b/node_modules/next-auth/src/core/lib/oauth/callback.ts
deleted file mode 100644
index 3038150..0000000
--- a/node_modules/next-auth/src/core/lib/oauth/callback.ts
+++ /dev/null
@@ -1,183 +0,0 @@
-import { TokenSet } from "openid-client"
-import { openidClient } from "./client"
-import { oAuth1Client, oAuth1TokenStore } from "./client-legacy"
-import * as _checks from "./checks"
-import { OAuthCallbackError } from "../../errors"
-
-import type { CallbackParamsType } from "openid-client"
-import type { LoggerInstance, Profile } from "../../.."
-import type { OAuthChecks, OAuthConfig } from "../../../providers"
-import type { InternalOptions } from "../../types"
-import type { RequestInternal } from "../.."
-import type { Cookie } from "../cookie"
-
-export default async function oAuthCallback(params: {
-  options: InternalOptions<"oauth">
-  query: RequestInternal["query"]
-  body: RequestInternal["body"]
-  method: Required<RequestInternal>["method"]
-  cookies: RequestInternal["cookies"]
-}) {
-  const { options, query, body, method, cookies } = params
-  const { logger, provider } = options
-
-  const errorMessage = body?.error ?? query?.error
-  if (errorMessage) {
-    const error = new Error(errorMessage)
-    logger.error("OAUTH_CALLBACK_HANDLER_ERROR", {
-      error,
-      error_description: query?.error_description,
-      providerId: provider.id,
-    })
-    logger.debug("OAUTH_CALLBACK_HANDLER_ERROR", { body })
-    throw error
-  }
-
-  if (provider.version?.startsWith("1.")) {
-    try {
-      const client = await oAuth1Client(options)
-      // Handle OAuth v1.x
-      const { oauth_token, oauth_verifier } = query ?? {}
-      const tokens = (await (client as any).getOAuthAccessToken(
-        oauth_token,
-        oAuth1TokenStore.get(oauth_token),
-        oauth_verifier
-      )) as TokenSet
-      let profile: Profile = await (client as any).get(
-        provider.profileUrl,
-        tokens.oauth_token,
-        tokens.oauth_token_secret
-      )
-
-      if (typeof profile === "string") {
-        profile = JSON.parse(profile)
-      }
-
-      const newProfile = await getProfile({ profile, tokens, provider, logger })
-      return { ...newProfile, cookies: [] }
-    } catch (error) {
-      logger.error("OAUTH_V1_GET_ACCESS_TOKEN_ERROR", error as Error)
-      throw error
-    }
-  }
-
-  if (query?.oauth_token) oAuth1TokenStore.delete(query.oauth_token)
-
-  try {
-    const client = await openidClient(options)
-
-    let tokens: TokenSet
-
-    const checks: OAuthChecks = {}
-    const resCookies: Cookie[] = []
-
-    await _checks.state.use(cookies, resCookies, options, checks)
-    await _checks.pkce.use(cookies, resCookies, options, checks)
-    await _checks.nonce.use(cookies, resCookies, options, checks)
-
-    const params: CallbackParamsType = {
-      ...client.callbackParams({
-        url: `http://n?${new URLSearchParams(query)}`,
-        // TODO: Ask to allow object to be passed upstream:
-        // https://github.com/panva/node-openid-client/blob/3ae206dfc78c02134aa87a07f693052c637cab84/types/index.d.ts#L439
-        // @ts-expect-error
-        body,
-        method,
-      }),
-      ...provider.token?.params,
-    }
-
-    if (provider.token?.request) {
-      const response = await provider.token.request({
-        provider,
-        params,
-        checks,
-        client,
-      })
-      tokens = new TokenSet(response.tokens)
-    } else if (provider.idToken) {
-      tokens = await client.callback(provider.callbackUrl, params, checks)
-    } else {
-      tokens = await client.oauthCallback(provider.callbackUrl, params, checks)
-    }
-
-    // REVIEW: How can scope be returned as an array?
-    if (Array.isArray(tokens.scope)) {
-      tokens.scope = tokens.scope.join(" ")
-    }
-
-    let profile: Profile
-    if (provider.userinfo?.request) {
-      profile = await provider.userinfo.request({
-        provider,
-        tokens,
-        client,
-      })
-    } else if (provider.idToken) {
-      profile = tokens.claims()
-    } else {
-      profile = await client.userinfo(tokens, {
-        params: provider.userinfo?.params,
-      })
-    }
-
-    const profileResult = await getProfile({
-      profile,
-      provider,
-      tokens,
-      logger,
-    })
-    return { ...profileResult, cookies: resCookies }
-  } catch (error) {
-    throw new OAuthCallbackError(error as Error)
-  }
-}
-
-export interface GetProfileParams {
-  profile: Profile
-  tokens: TokenSet
-  provider: OAuthConfig<any>
-  logger: LoggerInstance
-}
-
-/** Returns profile, raw profile and auth provider details */
-async function getProfile({
-  profile: OAuthProfile,
-  tokens,
-  provider,
-  logger,
-}: GetProfileParams) {
-  try {
-    logger.debug("PROFILE_DATA", { OAuthProfile })
-    const profile = await provider.profile(OAuthProfile, tokens)
-    profile.email = profile.email?.toLowerCase()
-    if (!profile.id)
-      throw new TypeError(
-        `Profile id is missing in ${provider.name} OAuth profile response`
-      )
-
-    // Return profile, raw profile and auth provider details
-    return {
-      profile,
-      account: {
-        provider: provider.id,
-        type: provider.type,
-        providerAccountId: profile.id.toString(),
-        ...tokens,
-      },
-      OAuthProfile,
-    }
-  } catch (error) {
-    // If we didn't get a response either there was a problem with the provider
-    // response *or* the user cancelled the action with the provider.
-    //
-    // Unfortuately, we can't tell which - at least not in a way that works for
-    // all providers, so we return an empty object; the user should then be
-    // redirected back to the sign up page. We log the error to help developers
-    // who might be trying to debug this when configuring a new provider.
-    logger.error("OAUTH_PARSE_PROFILE_ERROR", {
-      error: error as Error,
-      OAuthProfile,
-    })
-  }
-}
diff --git a/node_modules/next-auth/src/core/lib/oauth/checks.ts b/node_modules/next-auth/src/core/lib/oauth/checks.ts
deleted file mode 100644
index f497012..0000000
--- a/node_modules/next-auth/src/core/lib/oauth/checks.ts
+++ /dev/null
@@ -1,181 +0,0 @@
-import {
-  AuthorizationParameters,
-  generators,
-  OpenIDCallbackChecks,
-} from "openid-client"
-import * as jwt from "../../../jwt"
-
-import type { RequestInternal } from "../.."
-import type { OAuthChecks } from "../../../providers"
-import type { CookiesOptions, InternalOptions } from "../../types"
-import type { Cookie } from "../cookie"
-
-/** Returns a signed cookie. */
-export async function signCookie(
-  type: keyof CookiesOptions,
-  value: string,
-  maxAge: number,
-  options: InternalOptions<"oauth">
-): Promise<Cookie> {
-  const { cookies, logger } = options
-
-  logger.debug(`CREATE_${type.toUpperCase()}`, { value, maxAge })
-
-  const expires = new Date()
-  expires.setTime(expires.getTime() + maxAge * 1000)
-  return {
-    name: cookies[type].name,
-    value: await jwt.encode({ ...options.jwt, maxAge, token: { value } }),
-    options: { ...cookies[type].options, expires },
-  }
-}
-
-const PKCE_MAX_AGE = 60 * 15 // 15 minutes in seconds
-export const PKCE_CODE_CHALLENGE_METHOD = "S256"
-export const pkce = {
-  async create(
-    options: InternalOptions<"oauth">,
-    cookies: Cookie[],
-    resParams: AuthorizationParameters
-  ) {
-    if (!options.provider?.checks?.includes("pkce")) return
-    const code_verifier = generators.codeVerifier()
-    const value = generators.codeChallenge(code_verifier)
-    resParams.code_challenge = value
-    resParams.code_challenge_method = PKCE_CODE_CHALLENGE_METHOD
-
-    const maxAge =
-      options.cookies.pkceCodeVerifier.options.maxAge ?? PKCE_MAX_AGE
-
-    cookies.push(
-      await signCookie("pkceCodeVerifier", code_verifier, maxAge, options)
-    )
-  },
-  /**
-   * Returns code_verifier if the provider is configured to use PKCE,
-   * and clears the container cookie afterwards.
-   * An error is thrown if the code_verifier is missing or invalid.
-   * @see https://www.rfc-editor.org/rfc/rfc7636
-   * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#pkce
-   */
-  async use(
-    cookies: RequestInternal["cookies"],
-    resCookies: Cookie[],
-    options: InternalOptions<"oauth">,
-    checks: OAuthChecks
-  ): Promise<string | undefined> {
-    if (!options.provider?.checks?.includes("pkce")) return
-
-    const codeVerifier = cookies?.[options.cookies.pkceCodeVerifier.name]
-
-    if (!codeVerifier)
-      throw new TypeError("PKCE code_verifier cookie was missing.")
-
-    const value = (await jwt.decode({
-      ...options.jwt,
-      token: codeVerifier,
-    })) as any
-
-    if (!value?.value)
-      throw new TypeError("PKCE code_verifier value could not be parsed.")
-
-    resCookies.push({
-      name: options.cookies.pkceCodeVerifier.name,
-      value: "",
-      options: { ...options.cookies.pkceCodeVerifier.options, maxAge: 0 },
-    })
-
-    checks.code_verifier = value.value
-  },
-}
-
-const STATE_MAX_AGE = 60 * 15 // 15 minutes in seconds
-export const state = {
-  async create(
-    options: InternalOptions<"oauth">,
-    cookies: Cookie[],
-    resParams: AuthorizationParameters
-  ) {
-    if (!options.provider.checks?.includes("state")) return
-    const value = generators.state()
-    resParams.state = value
-    const maxAge = options.cookies.state.options.maxAge ?? STATE_MAX_AGE
-    cookies.push(await signCookie("state", value, maxAge, options))
-  },
-  /**
-   * Returns state if the provider is configured to use state,
-   * and clears the container cookie afterwards.
-   * An error is thrown if the state is missing or invalid.
-   * @see https://www.rfc-editor.org/rfc/rfc6749#section-10.12
-   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1
-   */
-  async use(
-    cookies: RequestInternal["cookies"],
-    resCookies: Cookie[],
-    options: InternalOptions<"oauth">,
-    checks: OAuthChecks
-  ) {
-    if (!options.provider.checks?.includes("state")) return
-
-    const state = cookies?.[options.cookies.state.name]
-
-    if (!state) throw new TypeError("State cookie was missing.")
-
-    const value = (await jwt.decode({ ...options.jwt, token: state })) as any
-
-    if (!value?.value) throw new TypeError("State value could not be parsed.")
-
-    resCookies.push({
-      name: options.cookies.state.name,
-      value: "",
-      options: { ...options.cookies.state.options, maxAge: 0 },
-    })
-
-    checks.state = value.value
-  },
-}
-
-const NONCE_MAX_AGE = 60 * 15 // 15 minutes in seconds
-export const nonce = {
-  async create(
-    options: InternalOptions<"oauth">,
-    cookies: Cookie[],
-    resParams: AuthorizationParameters
-  ) {
-    if (!options.provider.checks?.includes("nonce")) return
-    const value = generators.nonce()
-    resParams.nonce = value
-    const maxAge = options.cookies.nonce.options.maxAge ?? NONCE_MAX_AGE
-    cookies.push(await signCookie("nonce", value, maxAge, options))
-  },
-  /**
-   * Returns nonce if the provider is configured to use nonce,
-   * and clears the container cookie afterwards.
-   * An error is thrown if the nonce is missing or invalid.
-   * @see https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes
-   * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#nonce
-   */
-  async use(
-    cookies: RequestInternal["cookies"],
-    resCookies: Cookie[],
-    options: InternalOptions<"oauth">,
-    checks: OpenIDCallbackChecks
-  ): Promise<string | undefined> {
-    if (!options.provider?.checks?.includes("nonce")) return
-
-    const nonce = cookies?.[options.cookies.nonce.name]
-    if (!nonce) throw new TypeError("Nonce cookie was missing.")
-
-    const value = (await jwt.decode({ ...options.jwt, token: nonce })) as any
-
-    if (!value?.value) throw new TypeError("Nonce value could not be parsed.")
-
-    resCookies.push({
-      name: options.cookies.nonce.name,
-      value: "",
-      options: { ...options.cookies.nonce.options, maxAge: 0 },
-    })
-
-    checks.nonce = value.value
-  },
-}
diff --git a/node_modules/next-auth/src/core/lib/oauth/client-legacy.ts b/node_modules/next-auth/src/core/lib/oauth/client-legacy.ts
deleted file mode 100644
index 6716fb2..0000000
--- a/node_modules/next-auth/src/core/lib/oauth/client-legacy.ts
+++ /dev/null
@@ -1,73 +0,0 @@
-// This is kept around for being backwards compatible with OAuth 1.0 providers.
-// We have the intentions to provide only minor fixes for this in the future.
-
-import { OAuth } from "oauth"
-import type { InternalOptions } from "../../types"
-
-/**
- * Client supporting OAuth 1.x
- */
-export function oAuth1Client(options: InternalOptions<"oauth">) {
-  const provider = options.provider
-
-  const oauth1Client = new OAuth(
-    provider.requestTokenUrl as string,
-    provider.accessTokenUrl as string,
-    provider.clientId as string,
-    provider.clientSecret as string,
-    provider.version ?? "1.0",
-    provider.callbackUrl,
-    provider.encoding ?? "HMAC-SHA1"
-  )
-
-  // Promisify get()  for OAuth1
-  const originalGet = oauth1Client.get.bind(oauth1Client)
-  // @ts-expect-error
-  oauth1Client.get = async (...args) => {
-    return await new Promise((resolve, reject) => {
-      originalGet(...args, (error, result) => {
-        if (error) {
-          return reject(error)
-        }
-        resolve(result)
-      })
-    })
-  }
-  // Promisify getOAuth1AccessToken()  for OAuth1
-  const originalGetOAuth1AccessToken =
-    oauth1Client.getOAuthAccessToken.bind(oauth1Client)
-  // eslint-disable-next-line @typescript-eslint/no-misused-promises
-  oauth1Client.getOAuthAccessToken = async (...args: any[]) => {
-    return await new Promise((resolve, reject) => {
-      originalGetOAuth1AccessToken(
-        ...args,
-        (error: any, oauth_token: any, oauth_token_secret: any) => {
-          if (error) {
-            return reject(error)
-          }
-          resolve({ oauth_token, oauth_token_secret } as any)
-        }
-      )
-    })
-  }
-
-  const originalGetOAuthRequestToken =
-    oauth1Client.getOAuthRequestToken.bind(oauth1Client)
-  // eslint-disable-next-line @typescript-eslint/no-misused-promises
-  oauth1Client.getOAuthRequestToken = async (params = {}) => {
-    return await new Promise((resolve, reject) => {
-      originalGetOAuthRequestToken(
-        params,
-        (error, oauth_token, oauth_token_secret, params) => {
-          if (error) {
-            return reject(error)
-          }
-          resolve({ oauth_token, oauth_token_secret, params } as any)
-        }
-      )
-    })
-  }
-  return oauth1Client
-}
-
-export const oAuth1TokenStore = new Map()
diff --git a/node_modules/next-auth/src/core/lib/oauth/client.ts b/node_modules/next-auth/src/core/lib/oauth/client.ts
deleted file mode 100644
index f00e1b9..0000000
--- a/node_modules/next-auth/src/core/lib/oauth/client.ts
+++ /dev/null
@@ -1,48 +0,0 @@
-import { Issuer, custom } from "openid-client"
-import type { Client } from "openid-client"
-import type { InternalOptions } from "../../types"
-
-/**
- * NOTE: We can add auto discovery of the provider's endpoint
- * that requires only one endpoint to be specified by the user.
- * Check out `Issuer.discover`
- *
- * Client supporting OAuth 2.x and OIDC
- */
-export async function openidClient(
-  options: InternalOptions<"oauth">
-): Promise<Client> {
-  const provider = options.provider
-
-  if (provider.httpOptions) custom.setHttpOptionsDefaults(provider.httpOptions)
-
-  let issuer: Issuer
-  if (provider.wellKnown) {
-    issuer = await Issuer.discover(provider.wellKnown)
-  } else {
-    issuer = new Issuer({
-      issuer: provider.issuer as string,
-      authorization_endpoint: provider.authorization?.url,
-      token_endpoint: provider.token?.url,
-      userinfo_endpoint: provider.userinfo?.url,
-      jwks_uri: provider.jwks_endpoint,
-    })
-  }
-
-  const client = new issuer.Client(
-    {
-      client_id: provider.clientId as string,
-      client_secret: provider.clientSecret as string,
-      redirect_uris: [provider.callbackUrl],
-      ...provider.client,
-    },
-    provider.jwks
-  )
-
-  // allow a 10 second skew
-  // See https://github.com/nextauthjs/next-auth/issues/3032
-  // and https://github.com/nextauthjs/next-auth/issues/3067
-  client[custom.clock_tolerance] = 10
-
-  return client
-}
diff --git a/node_modules/next-auth/src/core/lib/providers.ts b/node_modules/next-auth/src/core/lib/providers.ts
deleted file mode 100644
index 5776990..0000000
--- a/node_modules/next-auth/src/core/lib/providers.ts
+++ /dev/null
@@ -1,93 +0,0 @@
-import { merge } from "../../utils/merge"
-
-import type { InternalProvider, OAuthConfigInternal } from "../types"
-import type { OAuthConfig, Provider } from "../../providers"
-import type { InternalUrl } from "../../utils/parse-url"
-
-/**
- * Adds `signinUrl` and `callbackUrl` to each provider
- * and deep merge user-defined options.
- */
-export default function parseProviders(params: {
-  providers: Provider[]
-  url: InternalUrl
-  providerId?: string
-}): {
-  providers: InternalProvider[]
-  provider?: InternalProvider
-} {
-  const { url, providerId } = params
-
-  const providers = params.providers.map<InternalProvider>(
-    ({ options: userOptions, ...rest }) => {
-      if (rest.type === "oauth") {
-        const normalizedOptions = normalizeOAuthOptions(rest)
-        const normalizedUserOptions = normalizeOAuthOptions(userOptions, true)
-        const id = normalizedUserOptions?.id ?? rest.id
-        return merge(normalizedOptions, {
-          ...normalizedUserOptions,
-          signinUrl: `${url}/signin/${id}`,
-          callbackUrl: `${url}/callback/${id}`,
-        })
-      }
-      const id = (userOptions?.id as string) ?? rest.id
-      return merge(rest, {
-        ...userOptions,
-        signinUrl: `${url}/signin/${id}`,
-        callbackUrl: `${url}/callback/${id}`,
-      })
-    }
-  )
-
-  return {
-    providers,
-    provider: providers.find(({ id }) => id === providerId),
-  }
-}
-
-/**
- * Transform OAuth options `authorization`, `token` and `profile` strings to `{ url: string; params: Record<string, string> }`
- */
-function normalizeOAuthOptions(
-  oauthOptions?: Partial<OAuthConfig<any>> | Record<string, unknown>,
-  isUserOptions = false
-) {
-  if (!oauthOptions) return
-
-  const normalized = Object.entries(oauthOptions).reduce<
-    OAuthConfigInternal<Record<string, unknown>>
-  >(
-    (acc, [key, value]) => {
-      if (
-        ["authorization", "token", "userinfo"].includes(key) &&
-        typeof value === "string"
-      ) {
-        const url = new URL(value)
-        acc[key] = {
-          url: `${url.origin}${url.pathname}`,
-          params: Object.fromEntries(url.searchParams ?? []),
-        }
-      } else {
-        acc[key] = value
-      }
-
-      return acc
-    },
-    // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter
-    {} as any
-  )
-
-  if (!isUserOptions && !normalized.version?.startsWith("1.")) {
-    // If provider has as an "openid-configuration" well-known endpoint
-    // or an "openid" scope request, it will also likely be able to receive an `id_token`
-    // Only do this if this function is not called with user options to avoid overriding in later stage.
-    normalized.idToken = Boolean(
-      normalized.idToken ??
-        normalized.wellKnown?.includes("openid-configuration") ??
-        normalized.authorization?.params?.scope?.includes("openid")
-    )
-
-    if (!normalized.checks) normalized.checks = ["state"]
-  }
-  return normalized
-}
diff --git a/node_modules/next-auth/src/core/lib/utils.ts b/node_modules/next-auth/src/core/lib/utils.ts
deleted file mode 100644
index c8296a7..0000000
--- a/node_modules/next-auth/src/core/lib/utils.ts
+++ /dev/null
@@ -1,44 +0,0 @@
-import { createHash } from "crypto"
-
-import type { AuthOptions } from "../.."
-import type { InternalOptions } from "../types"
-import type { InternalUrl } from "../../utils/parse-url"
-
-/**
- * Takes a number in seconds and returns the date in the future.
- * Optionally takes a second date parameter. In that case
- * the date in the future will be calculated from that date instead of now.
- */
-export function fromDate(time: number, date = Date.now()) {
-  return new Date(date + time * 1000)
-}
-
-export function hashToken(token: string, options: InternalOptions<"email">) {
-  const { provider, secret } = options
-  return (
-    createHash("sha256")
-      // Prefer provider specific secret, but use default secret if none specified
-      .update(`${token}${provider.secret ?? secret}`)
-      .digest("hex")
-  )
-}
-
-/**
- * Secret used salt cookies and tokens (e.g. for CSRF protection).
- * If no secret option is specified then it creates one on the fly
- * based on options passed here. If options contains unique data, such as
- * OAuth provider secrets and database credentials it should be sufficent. If no secret provided in production, we throw an error. */
-export function createSecret(params: {
-  authOptions: AuthOptions
-  url: InternalUrl
-}) {
-  const { authOptions, url } = params
-
-  return (
-    authOptions.secret ??
-    // TODO: Remove falling back to default secret, and error in dev if one isn't provided
-    createHash("sha256")
-      .update(JSON.stringify({ ...url, ...authOptions }))
-      .digest("hex")
-  )
-}
diff --git a/node_modules/next-auth/src/core/pages/error.tsx b/node_modules/next-auth/src/core/pages/error.tsx
deleted file mode 100644
index ee78e45..0000000
--- a/node_modules/next-auth/src/core/pages/error.tsx
+++ /dev/null
@@ -1,114 +0,0 @@
-import { Theme } from "../.."
-import { InternalUrl } from "../../utils/parse-url"
-
-/**
- * The following errors are passed as error query parameters to the default or overridden error page.
- *
- * [Documentation](https://next-auth.js.org/configuration/pages#error-page) */
-export type ErrorType =
-  | "default"
-  | "configuration"
-  | "accessdenied"
-  | "verification"
-
-export interface ErrorProps {
-  url?: InternalUrl
-  theme?: Theme
-  error?: ErrorType
-}
-
-interface ErrorView {
-  status: number
-  heading: string
-  message: JSX.Element
-  signin?: JSX.Element
-}
-
-/** Renders an error page. */
-export default function ErrorPage(props: ErrorProps) {
-  const { url, error = "default", theme } = props
-  const signinPageUrl = `${url}/signin`
-
-  const errors: Record<ErrorType, ErrorView> = {
-    default: {
-      status: 200,
-      heading: "Error",
-      message: (
-        <p>
-          <a className="site" href={url?.origin}>
-            {url?.host}
-          </a>
-        </p>
-      ),
-    },
-    configuration: {
-      status: 500,
-      heading: "Server error",
-      message: (
-        <div>
-          <p>There is a problem with the server configuration.</p>
-          <p>Check the server logs for more information.</p>
-        </div>
-      ),
-    },
-    accessdenied: {
-      status: 403,
-      heading: "Access Denied",
-      message: (
-        <div>
-          <p>You do not have permission to sign in.</p>
-          <p>
-            <a className="button" href={signinPageUrl}>
-              Sign in
-            </a>
-          </p>
-        </div>
-      ),
-    },
-    verification: {
-      status: 403,
-      heading: "Unable to sign in",
-      message: (
-        <div>
-          <p>The sign in link is no longer valid.</p>
-          <p>It may have been used already or it may have expired.</p>
-        </div>
-      ),
-      signin: (
-        <p>
-          <a className="button" href={signinPageUrl}>
-            Sign in
-          </a>
-        </p>
-      ),
-    },
-  }
-
-  const { status, heading, message, signin } =
-    errors[error.toLowerCase()] ?? errors.default
-
-  return {
-    status,
-    html: (
-      <div className="error">
-        {theme?.brandColor && (
-          <style
-            dangerouslySetInnerHTML={{
-              __html: `
-        :root {
-          --brand-color: ${theme?.brandColor}
-        }
-      `,
-            }}
-          />
-        )}
-        <div className="card">
-          {theme?.logo && <img src={theme.logo} alt="Logo" className="logo" />}
-          <h1>{heading}</h1>
-          <div className="message">{message}</div>
-          {signin}
-        </div>
-      </div>
-    ),
-  }
-}
diff --git a/node_modules/next-auth/src/core/pages/index.ts b/node_modules/next-auth/src/core/pages/index.ts
deleted file mode 100644
index 6938a4e..0000000
--- a/node_modules/next-auth/src/core/pages/index.ts
+++ /dev/null
@@ -1,79 +0,0 @@
-import renderToString from "preact-render-to-string"
-import SigninPage from "./signin"
-import SignoutPage from "./signout"
-import VerifyRequestPage from "./verify-request"
-import ErrorPage from "./error"
-import css from "../../css"
-
-import type { InternalOptions } from "../types"
-import type { RequestInternal, ResponseInternal } from ".."
-import type { Cookie } from "../lib/cookie"
-import type { ErrorType } from "./error"
-
-type RenderPageParams = {
-  query?: RequestInternal["query"]
-  cookies?: Cookie[]
-} & Partial<
-  Pick<
-    InternalOptions,
-    "url" | "callbackUrl" | "csrfToken" | "providers" | "theme"
-  >
->
-
-/**
- * Unless the user defines their [own pages](https://next-auth.js.org/configuration/pages),
- * we render a set of default ones, using Preact SSR.
- */
-export default function renderPage(params: RenderPageParams) {
-  const { url, theme, query, cookies } = params
-
-  function send({ html, title, status }: any): ResponseInternal {
-    return {
-      cookies,
-      status,
-      headers: [{ key: "Content-Type", value: "text/html" }],
-      body: `<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1.0"><style>${css()}</style><title>${title}</title></head><body class="__next-auth-theme-${
-        theme?.colorScheme ?? "auto"
-      }"><div class="page">${renderToString(html)}</div></body></html>`,
-    }
-  }
-
-  return {
-    signin(props?: any) {
-      return send({
-        html: SigninPage({
-          csrfToken: params.csrfToken,
-          providers: params.providers,
-          callbackUrl: params.callbackUrl,
-          theme,
-          ...query,
-          ...props,
-        }),
-        title: "Sign In",
-      })
-    },
-    signout(props?: any) {
-      return send({
-        html: SignoutPage({
-          csrfToken: params.csrfToken,
-          url,
-          theme,
-          ...props,
-        }),
-        title: "Sign Out",
-      })
-    },
-    verifyRequest(props?: any) {
-      return send({
-        html: VerifyRequestPage({ url, theme, ...props }),
-        title: "Verify Request",
-      })
-    },
-    error(props?: { error?: ErrorType }) {
-      return send({
-        ...ErrorPage({ url, theme, ...props }),
-        title: "Error",
-      })
-    },
-  }
-}
diff --git a/node_modules/next-auth/src/core/pages/signin.tsx b/node_modules/next-auth/src/core/pages/signin.tsx
deleted file mode 100644
index 2ad59a7..0000000
--- a/node_modules/next-auth/src/core/pages/signin.tsx
+++ /dev/null
@@ -1,222 +0,0 @@
-import type { InternalProvider, Theme } from "../types"
-import type React from "react"
-
-/**
- * The following errors are passed as error query parameters to the default or overridden sign-in page.
- *
- * [Documentation](https://next-auth.js.org/configuration/pages#sign-in-page) */
-export type SignInErrorTypes =
-  | "Signin"
-  | "OAuthSignin"
-  | "OAuthCallback"
-  | "OAuthCreateAccount"
-  | "EmailCreateAccount"
-  | "Callback"
-  | "OAuthAccountNotLinked"
-  | "EmailSignin"
-  | "CredentialsSignin"
-  | "SessionRequired"
-  | "default"
-
-export interface SignInServerPageParams {
-  csrfToken: string
-  providers: InternalProvider[]
-  callbackUrl: string
-  email: string
-  error: SignInErrorTypes
-  theme: Theme
-}
-
-export default function SigninPage(props: SignInServerPageParams) {
-  const {
-    csrfToken,
-    providers,
-    callbackUrl,
-    theme,
-    email,
-    error: errorType,
-  } = props
-  // We only want to render providers
-  const providersToRender = providers.filter((provider) => {
-    if (provider.type === "oauth" || provider.type === "email") {
-      // Always render oauth and email type providers
-      return true
-    } else if (provider.type === "credentials" && provider.credentials) {
-      // Only render credentials type provider if credentials are defined
-      return true
-    }
-    // Don't render other provider types
-    return false
-  })
-
-  if (typeof document !== "undefined" && theme.buttonText) {
-    document.documentElement.style.setProperty(
-      "--button-text-color",
-      theme.buttonText
-    )
-  }
-
-  if (typeof document !== "undefined" && theme.brandColor) {
-    document.documentElement.style.setProperty(
-      "--brand-color",
-      theme.brandColor
-    )
-  }
-
-  const errors: Record<SignInErrorTypes, string> = {
-    Signin: "Try signing in with a different account.",
-    OAuthSignin: "Try signing in with a different account.",
-    OAuthCallback: "Try signing in with a different account.",
-    OAuthCreateAccount: "Try signing in with a different account.",
-    EmailCreateAccount: "Try signing in with a different account.",
-    Callback: "Try signing in with a different account.",
-    OAuthAccountNotLinked:
-      "To confirm your identity, sign in with the same account you used originally.",
-    EmailSignin: "The e-mail could not be sent.",
-    CredentialsSignin:
-      "Sign in failed. Check the details you provided are correct.",
-    SessionRequired: "Please sign in to access this page.",
-    default: "Unable to sign in.",
-  }
-
-  const error = errorType && (errors[errorType] ?? errors.default)
-
-  const logos = "https://authjs.dev/img/providers"
-  return (
-    <div className="signin">
-      {theme.brandColor && (
-        <style
-          dangerouslySetInnerHTML={{
-            __html: `
-        :root {
-          --brand-color: ${theme.brandColor}
-        }
-      `,
-          }}
-        />
-      )}
-      {theme.buttonText && (
-        <style
-          dangerouslySetInnerHTML={{
-            __html: `
-        :root {
-          --button-text-color: ${theme.buttonText}
-        }
-      `,
-          }}
-        />
-      )}
-      <div className="card">
-        {theme.logo && <img src={theme.logo} alt="Logo" className="logo" />}
-        {error && (
-          <div className="error">
-            <p>{error}</p>
-          </div>
-        )}
-        {providersToRender.map((provider, i: number) => (
-          <div key={provider.id} className="provider">
-            {provider.type === "oauth" && (
-              <form action={provider.signinUrl} method="POST">
-                <input type="hidden" name="csrfToken" value={csrfToken} />
-                {callbackUrl && (
-                  <input type="hidden" name="callbackUrl" value={callbackUrl} />
-                )}
-                <button
-                  type="submit"
-                  className="button"
-                  style={
-                    // eslint-disable-next-line
-                    {
-                      "--provider-bg": provider.style?.bg ?? "",
-                      "--provider-dark-bg": provider.style?.bgDark ?? "",
-                      "--provider-color": provider.style?.text ?? "",
-                      "--provider-dark-color": provider.style?.textDark ?? "",
-                    } as React.CSSProperties
-                  }
-                >
-                  {provider.style?.logo && (
-                    <img
-                      loading="lazy"
-                      height={24}
-                      width={24}
-                      id="provider-logo"
-                      src={`${
-                        provider.style.logo.startsWith("/") ? logos : ""
-                      }${provider.style.logo}`}
-                    />
-                  )}
-                  {provider.style?.logoDark && (
-                    <img
-                      loading="lazy"
-                      height={24}
-                      width={24}
-                      id="provider-logo-dark"
-                      src={`${
-                        provider.style.logo.startsWith("/") ? logos : ""
-                      }${provider.style.logoDark}`}
-                    />
-                  )}
-                  <span>Sign in with {provider.name}</span>
-                </button>
-              </form>
-            )}
-            {(provider.type === "email" || provider.type === "credentials") &&
-              i > 0 &&
-              providersToRender[i - 1].type !== "email" &&
-              providersToRender[i - 1].type !== "credentials" && <hr />}
-            {provider.type === "email" && (
-              <form action={provider.signinUrl} method="POST">
-                <input type="hidden" name="csrfToken" value={csrfToken} />
-                <label
-                  className="section-header"
-                  htmlFor={`input-email-for-${provider.id}-provider`}
-                >
-                  Email
-                </label>
-                <input
-                  id={`input-email-for-${provider.id}-provider`}
-                  autoFocus
-                  type="email"
-                  name="email"
-                  value={email}
-                  placeholder="email@example.com"
-                  required
-                />
-                <button id="submitButton" type="submit">Sign in with {provider.name}</button>
-              </form>
-            )}
-            {provider.type === "credentials" && (
-              <form action={provider.callbackUrl} method="POST">
-                <input type="hidden" name="csrfToken" value={csrfToken} />
-                {Object.keys(provider.credentials).map((credential) => {
-                  return (
-                    <div key={`input-group-${provider.id}`}>
-                      <label
-                        className="section-header"
-                        htmlFor={`input-${credential}-for-${provider.id}-provider`}
-                      >
-                        {provider.credentials[credential].label ?? credential}
-                      </label>
-                      <input
-                        name={credential}
-                        id={`input-${credential}-for-${provider.id}-provider`}
-                        type={provider.credentials[credential].type ?? "text"}
-                        placeholder={
-                          provider.credentials[credential].placeholder ?? ""
-                        }
-                        {...provider.credentials[credential]}
-                      />
-                    </div>
-                  )
-                })}
-                <button type="submit">Sign in with {provider.name}</button>
-              </form>
-            )}
-            {(provider.type === "email" || provider.type === "credentials") &&
-              i + 1 < providersToRender.length && <hr />}
-          </div>
-        ))}
-      </div>
-    </div>
-  )
-}
diff --git a/node_modules/next-auth/src/core/pages/signout.tsx b/node_modules/next-auth/src/core/pages/signout.tsx
deleted file mode 100644
index deee755..0000000
--- a/node_modules/next-auth/src/core/pages/signout.tsx
+++ /dev/null
@@ -1,48 +0,0 @@
-import { Theme } from "../.."
-import { InternalUrl } from "../../utils/parse-url"
-
-export interface SignoutProps {
-  url: InternalUrl
-  csrfToken: string
-  theme: Theme
-}
-
-export default function SignoutPage(props: SignoutProps) {
-  const { url, csrfToken, theme } = props
-
-  return (
-    <div className="signout">
-      {theme.brandColor && (
-        <style
-          dangerouslySetInnerHTML={{
-            __html: `
-        :root {
-          --brand-color: ${theme.brandColor}
-        }
-      `,
-          }}
-        />
-      )}
-      {theme.buttonText && (
-        <style
-          dangerouslySetInnerHTML={{
-            __html: `
-        :root {
-          --button-text-color: ${theme.buttonText}
-        }
-      `,
-          }}
-        />
-      )}
-      <div className="card">
-        {theme.logo && <img src={theme.logo} alt="Logo" className="logo" />}
-        <h1>Signout</h1>
-        <p>Are you sure you want to sign out?</p>
-        <form action={`${url}/signout`} method="POST">
-          <input type="hidden" name="csrfToken" value={csrfToken} />
-          <button id="submitButton" type="submit">Sign out</button>
-        </form>
-      </div>
-    </div>
-  )
-}
diff --git a/node_modules/next-auth/src/core/pages/verify-request.tsx b/node_modules/next-auth/src/core/pages/verify-request.tsx
deleted file mode 100644
index ae3c00b..0000000
--- a/node_modules/next-auth/src/core/pages/verify-request.tsx
+++ /dev/null
@@ -1,37 +0,0 @@
-import { Theme } from "../.."
-import { InternalUrl } from "../../utils/parse-url"
-
-interface VerifyRequestPageProps {
-  url: InternalUrl
-  theme: Theme
-}
-
-export default function VerifyRequestPage(props: VerifyRequestPageProps) {
-  const { url, theme } = props
-
-  return (
-    <div className="verify-request">
-      {theme.brandColor && (
-        <style
-          dangerouslySetInnerHTML={{
-            __html: `
-        :root {
-          --brand-color: ${theme.brandColor}
-        }
-      `,
-          }}
-        />
-      )}
-      <div className="card">
-        {theme.logo && <img src={theme.logo} alt="Logo" className="logo" />}
-        <h1>Check your email</h1>
-        <p>A sign in link has been sent to your email address.</p>
-        <p>
-          <a className="site" href={url.origin}>
-            {url.host}
-          </a>
-        </p>
-      </div>
-    </div>
-  )
-}
diff --git a/node_modules/next-auth/src/core/routes/callback.ts b/node_modules/next-auth/src/core/routes/callback.ts
deleted file mode 100644
index 8de6a74..0000000
--- a/node_modules/next-auth/src/core/routes/callback.ts
+++ /dev/null
@@ -1,424 +0,0 @@
-import oAuthCallback from "../lib/oauth/callback"
-import callbackHandler from "../lib/callback-handler"
-import { hashToken } from "../lib/utils"
-import getAdapterUserFromEmail from "../lib/email/getUserFromEmail"
-
-import type { InternalOptions } from "../types"
-import type { RequestInternal, ResponseInternal } from ".."
-import type { Cookie, SessionStore } from "../lib/cookie"
-import type { User } from "../.."
-import type { AdapterSession } from "../../adapters"
-
-/** Handle callbacks from login services */
-export default async function callback(params: {
-  options: InternalOptions
-  query: RequestInternal["query"]
-  method: Required<RequestInternal>["method"]
-  body: RequestInternal["body"]
-  headers: RequestInternal["headers"]
-  cookies: RequestInternal["cookies"]
-  sessionStore: SessionStore
-}): Promise<ResponseInternal> {
-  const { options, query, body, method, headers, sessionStore } = params
-  const {
-    provider,
-    adapter,
-    url,
-    callbackUrl,
-    pages,
-    jwt,
-    events,
-    callbacks,
-    session: { strategy: sessionStrategy, maxAge: sessionMaxAge },
-    logger,
-  } = options
-
-  const cookies: Cookie[] = []
-
-  const useJwtSession = sessionStrategy === "jwt"
-
-  if (provider.type === "oauth") {
-    try {
-      const {
-        profile,
-        account,
-        OAuthProfile,
-        cookies: oauthCookies,
-      } = await oAuthCallback({
-        query,
-        body,
-        method,
-        options,
-        cookies: params.cookies,
-      })
-
-      if (oauthCookies.length) cookies.push(...oauthCookies)
-
-      try {
-        // Make it easier to debug when adding a new provider
-        logger.debug("OAUTH_CALLBACK_RESPONSE", {
-          profile,
-          account,
-          OAuthProfile,
-        })
-
-        // If we don't have a profile object then either something went wrong
-        // or the user cancelled signing in. We don't know which, so we just
-        // direct the user to the signin page for now. We could do something
-        // else in future.
-        //
-        // Note: In oAuthCallback an error is logged with debug info, so it
-        // should at least be visible to developers what happened if it is an
-        // error with the provider.
-        if (!profile || !account || !OAuthProfile) {
-          return { redirect: `${url}/signin`, cookies }
-        }
-
-        // Check if user is allowed to sign in
-        // Attempt to get Profile from OAuth provider details before invoking
-        // signIn callback - but if no user object is returned, that is fine
-        // (that just means it's a new user signing in for the first time).
-        let userOrProfile = profile
-        if (adapter) {
-          const { getUserByAccount } = adapter
-          const userByAccount = await getUserByAccount({
-            providerAccountId: account.providerAccountId,
-            provider: provider.id,
-          })
-
-          if (userByAccount) userOrProfile = userByAccount
-        }
-
-        try {
-          const isAllowed = await callbacks.signIn({
-            user: userOrProfile,
-            account,
-            profile: OAuthProfile,
-          })
-          if (!isAllowed) {
-            return { redirect: `${url}/error?error=AccessDenied`, cookies }
-          } else if (typeof isAllowed === "string") {
-            return { redirect: isAllowed, cookies }
-          }
-        } catch (error) {
-          return {
-            redirect: `${url}/error?error=${encodeURIComponent(
-              (error as Error).message
-            )}`,
-            cookies,
-          }
-        }
-
-        // Sign user in
-        const { user, session, isNewUser } = await callbackHandler({
-          sessionToken: sessionStore.value,
-          profile,
-          account,
-          options,
-        })
-
-        if (useJwtSession) {
-          const defaultToken = {
-            name: user.name,
-            email: user.email,
-            picture: user.image,
-            sub: user.id?.toString(),
-          }
-          const token = await callbacks.jwt({
-            token: defaultToken,
-            user,
-            account,
-            profile: OAuthProfile,
-            isNewUser,
-            trigger: isNewUser ? "signUp" : "signIn",
-          })
-
-          // Encode token
-          const newToken = await jwt.encode({ ...jwt, token })
-
-          // Set cookie expiry date
-          const cookieExpires = new Date()
-          cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000)
-
-          const sessionCookies = sessionStore.chunk(newToken, {
-            expires: cookieExpires,
-          })
-          cookies.push(...sessionCookies)
-        } else {
-          // Save Session Token in cookie
-          cookies.push({
-            name: options.cookies.sessionToken.name,
-            value: (session as AdapterSession).sessionToken,
-            options: {
-              ...options.cookies.sessionToken.options,
-              expires: (session as AdapterSession).expires,
-            },
-          })
-        }
-
-        // @ts-expect-error
-        await events.signIn?.({ user, account, profile, isNewUser })
-
-        // Handle first logins on new accounts
-        // e.g. option to send users to a new account landing page on initial login
-        // Note that the callback URL is preserved, so the journey can still be resumed
-        if (isNewUser && pages.newUser) {
-          return {
-            redirect: `${pages.newUser}${
-              pages.newUser.includes("?") ? "&" : "?"
-            }callbackUrl=${encodeURIComponent(callbackUrl)}`,
-            cookies,
-          }
-        }
-
-        // Callback URL is already verified at this point, so safe to use if specified
-        return { redirect: callbackUrl, cookies }
-      } catch (error) {
-        if ((error as Error).name === "AccountNotLinkedError") {
-          // If the email on the account is already linked, but not with this OAuth account
-          return {
-            redirect: `${url}/error?error=OAuthAccountNotLinked`,
-            cookies,
-          }
-        } else if ((error as Error).name === "CreateUserError") {
-          return { redirect: `${url}/error?error=OAuthCreateAccount`, cookies }
-        }
-        logger.error("OAUTH_CALLBACK_HANDLER_ERROR", error as Error)
-        return { redirect: `${url}/error?error=Callback`, cookies }
-      }
-    } catch (error) {
-      if ((error as Error).name === "OAuthCallbackError") {
-        logger.error("OAUTH_CALLBACK_ERROR", {
-          error: error as Error,
-          providerId: provider.id,
-        })
-        return { redirect: `${url}/error?error=OAuthCallback`, cookies }
-      }
-      logger.error("OAUTH_CALLBACK_ERROR", error as Error)
-      return { redirect: `${url}/error?error=Callback`, cookies }
-    }
-  } else if (provider.type === "email") {
-    try {
-      const token = query?.token as string | undefined
-      const identifier = query?.email as string | undefined
-
-      // If these are missing, the sign-in URL was manually opened without these params or the `sendVerificationRequest` method did not send the link correctly in the email.
-      if (!token || !identifier) {
-        return { redirect: `${url}/error?error=configuration`, cookies }
-      }
-
-      // @ts-expect-error -- Verified in `assertConfig`. adapter: Adapter<true>
-      const invite = await adapter.useVerificationToken({
-        identifier,
-        token: hashToken(token, options),
-      })
-
-      const invalidInvite = !invite || invite.expires.valueOf() < Date.now()
-      if (invalidInvite) {
-        return { redirect: `${url}/error?error=Verification`, cookies }
-      }
-
-      const profile = await getAdapterUserFromEmail({
-        email: identifier,
-        // @ts-expect-error -- Verified in `assertConfig`. adapter: Adapter<true>
-        adapter,
-      })
-
-      const account = {
-        providerAccountId: profile.email,
-        type: "email" as const,
-        provider: provider.id,
-      }
-
-      // Check if user is allowed to sign in
-      try {
-        const signInCallbackResponse = await callbacks.signIn({
-          user: profile,
-          account,
-        })
-        if (!signInCallbackResponse) {
-          return { redirect: `${url}/error?error=AccessDenied`, cookies }
-        } else if (typeof signInCallbackResponse === "string") {
-          return { redirect: signInCallbackResponse, cookies }
-        }
-      } catch (error) {
-        return {
-          redirect: `${url}/error?error=${encodeURIComponent(
-            (error as Error).message
-          )}`,
-          cookies,
-        }
-      }
-
-      // Sign user in
-      const { user, session, isNewUser } = await callbackHandler({
-        sessionToken: sessionStore.value,
-        profile,
-        account,
-        options,
-      })
-
-      if (useJwtSession) {
-        const defaultToken = {
-          name: user.name,
-          email: user.email,
-          picture: user.image,
-          sub: user.id?.toString(),
-        }
-        const token = await callbacks.jwt({
-          token: defaultToken,
-          user,
-          account,
-          isNewUser,
-          trigger: isNewUser ? "signUp" : "signIn",
-        })
-
-        // Encode token
-        const newToken = await jwt.encode({ ...jwt, token })
-
-        // Set cookie expiry date
-        const cookieExpires = new Date()
-        cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000)
-
-        const sessionCookies = sessionStore.chunk(newToken, {
-          expires: cookieExpires,
-        })
-        cookies.push(...sessionCookies)
-      } else {
-        // Save Session Token in cookie
-        cookies.push({
-          name: options.cookies.sessionToken.name,
-          value: (session as AdapterSession).sessionToken,
-          options: {
-            ...options.cookies.sessionToken.options,
-            expires: (session as AdapterSession).expires,
-          },
-        })
-      }
-
-      await events.signIn?.({ user, account, isNewUser })
-
-      // Handle first logins on new accounts
-      // e.g. option to send users to a new account landing page on initial login
-      // Note that the callback URL is preserved, so the journey can still be resumed
-      if (isNewUser && pages.newUser) {
-        return {
-          redirect: `${pages.newUser}${
-            pages.newUser.includes("?") ? "&" : "?"
-          }callbackUrl=${encodeURIComponent(callbackUrl)}`,
-          cookies,
-        }
-      }
-
-      // Callback URL is already verified at this point, so safe to use if specified
-      return { redirect: callbackUrl, cookies }
-    } catch (error) {
-      if ((error as Error).name === "CreateUserError") {
-        return { redirect: `${url}/error?error=EmailCreateAccount`, cookies }
-      }
-      logger.error("CALLBACK_EMAIL_ERROR", error as Error)
-      return { redirect: `${url}/error?error=Callback`, cookies }
-    }
-  } else if (provider.type === "credentials" && method === "POST") {
-    const credentials = body
-
-    let user: User | null
-    try {
-      user = await provider.authorize(credentials, {
-        query,
-        body,
-        headers,
-        method,
-      })
-      if (!user) {
-        return {
-          status: 401,
-          redirect: `${url}/error?${new URLSearchParams({
-            error: "CredentialsSignin",
-            provider: provider.id,
-          })}`,
-          cookies,
-        }
-      }
-    } catch (error) {
-      return {
-        status: 401,
-        redirect: `${url}/error?error=${encodeURIComponent(
-          (error as Error).message
-        )}`,
-        cookies,
-      }
-    }
-
-    /** @type {import("src").Account} */
-    const account = {
-      providerAccountId: user.id,
-      type: "credentials",
-      provider: provider.id,
-    }
-
-    try {
-      const isAllowed = await callbacks.signIn({
-        user,
-        // @ts-expect-error
-        account,
-        credentials,
-      })
-      if (!isAllowed) {
-        return {
-          status: 403,
-          redirect: `${url}/error?error=AccessDenied`,
-          cookies,
-        }
-      } else if (typeof isAllowed === "string") {
-        return { redirect: isAllowed, cookies }
-      }
-    } catch (error) {
-      return {
-        redirect: `${url}/error?error=${encodeURIComponent(
-          (error as Error).message
-        )}`,
-        cookies,
-      }
-    }
-
-    const defaultToken = {
-      name: user.name,
-      email: user.email,
-      picture: user.image,
-      sub: user.id?.toString(),
-    }
-
-    const token = await callbacks.jwt({
-      token: defaultToken,
-      user,
-      // @ts-expect-error
-      account,
-      isNewUser: false,
-      trigger: "signIn",
-    })
-
-    // Encode token
-    const newToken = await jwt.encode({ ...jwt, token })
-
-    // Set cookie expiry date
-    const cookieExpires = new Date()
-    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000)
-
-    const sessionCookies = sessionStore.chunk(newToken, {
-      expires: cookieExpires,
-    })
-
-    cookies.push(...sessionCookies)
-
-    // @ts-expect-error
-    await events.signIn?.({ user, account })
-
-    return { redirect: callbackUrl, cookies }
-  }
-  return {
-    status: 500,
-    body: `Error: Callback for provider type ${provider.type} not supported`,
-    cookies,
-  }
-}
diff --git a/node_modules/next-auth/src/core/routes/index.ts b/node_modules/next-auth/src/core/routes/index.ts
deleted file mode 100644
index 4cf7daa..0000000
--- a/node_modules/next-auth/src/core/routes/index.ts
+++ /dev/null
@@ -1,5 +0,0 @@
-export { default as callback } from './callback'
-export { default as signin } from './signin'
-export { default as signout } from './signout'
-export { default as session } from './session'
-export { default as providers } from './providers'
diff --git a/node_modules/next-auth/src/core/routes/providers.ts b/node_modules/next-auth/src/core/routes/providers.ts
deleted file mode 100644
index 9ce34ac..0000000
--- a/node_modules/next-auth/src/core/routes/providers.ts
+++ /dev/null
@@ -1,30 +0,0 @@
-import type { ResponseInternal } from ".."
-import type { InternalProvider } from "../types"
-
-export interface PublicProvider {
-  id: string
-  name: string
-  type: string
-  signinUrl: string
-  callbackUrl: string
-}
-
-/**
- * Return a JSON object with a list of all OAuth providers currently configured
- * and their signin and callback URLs. This makes it possible to automatically
- * generate buttons for all providers when rendering client side.
- */
-export default function providers(
-  providers: InternalProvider[]
-): ResponseInternal<Record<string, PublicProvider>> {
-  return {
-    headers: [{ key: "Content-Type", value: "application/json" }],
-    body: providers.reduce<Record<string, PublicProvider>>(
-      (acc, { id, name, type, signinUrl, callbackUrl }) => {
-        acc[id] = { id, name, type, signinUrl, callbackUrl }
-        return acc
-      },
-      {}
-    ),
-  }
-}
diff --git a/node_modules/next-auth/src/core/routes/session.ts b/node_modules/next-auth/src/core/routes/session.ts
deleted file mode 100644
index d88a12c..0000000
--- a/node_modules/next-auth/src/core/routes/session.ts
+++ /dev/null
@@ -1,174 +0,0 @@
-import { fromDate } from "../lib/utils"
-
-import type { Adapter } from "../../adapters"
-import type { InternalOptions } from "../types"
-import type { ResponseInternal } from ".."
-import type { Session } from "../.."
-import type { SessionStore } from "../lib/cookie"
-
-interface SessionParams {
-  options: InternalOptions
-  sessionStore: SessionStore
-  isUpdate?: boolean
-  newSession?: any
-}
-
-/**
- * Return a session object (without any private fields)
- * for Single Page App clients
- */
-
-export default async function session(
-  params: SessionParams
-): Promise<ResponseInternal<Session | {}>> {
-  const { options, sessionStore, newSession, isUpdate } = params
-  const {
-    adapter,
-    jwt,
-    events,
-    callbacks,
-    logger,
-    session: { strategy: sessionStrategy, maxAge: sessionMaxAge },
-  } = options
-
-  const response: ResponseInternal<Session | {}> = {
-    body: {},
-    headers: [{ key: "Content-Type", value: "application/json" }],
-    cookies: [],
-  }
-
-  const sessionToken = sessionStore.value
-
-  if (!sessionToken) return response
-
-  if (sessionStrategy === "jwt") {
-    try {
-      const decodedToken = await jwt.decode({ ...jwt, token: sessionToken })
-
-      if (!decodedToken) throw new Error("JWT invalid")
-
-      // @ts-expect-error
-      const token = await callbacks.jwt({
-        token: decodedToken,
-        ...(isUpdate && { trigger: "update" }),
-        session: newSession,
-      })
-
-      const newExpires = fromDate(sessionMaxAge)
-
-      // By default, only exposes a limited subset of information to the client
-      // as needed for presentation purposes (e.g. "you are logged in as...").
-
-      // @ts-expect-error Property 'user' is missing in type
-      const updatedSession = await callbacks.session({
-        session: {
-          user: {
-            name: decodedToken?.name,
-            email: decodedToken?.email,
-            image: decodedToken?.picture,
-          },
-          expires: newExpires.toISOString(),
-        },
-        token,
-      })
-
-      // Return session payload as response
-      response.body = updatedSession
-
-      // Refresh JWT expiry by re-signing it, with an updated expiry date
-      const newToken = await jwt.encode({
-        ...jwt,
-        token,
-        maxAge: options.session.maxAge,
-      })
-
-      // Set cookie, to also update expiry date on cookie
-      const sessionCookies = sessionStore.chunk(newToken, {
-        expires: newExpires,
-      })
-
-      response.cookies?.push(...sessionCookies)
-
-      await events.session?.({ session: updatedSession, token })
-    } catch (error) {
-      // If JWT not verifiable, make sure the cookie for it is removed and return empty object
-      logger.error("JWT_SESSION_ERROR", error as Error)
-
-      response.cookies?.push(...sessionStore.clean())
-    }
-  } else {
-    try {
-      const { getSessionAndUser, deleteSession, updateSession } =
-        adapter as Adapter
-      let userAndSession = await getSessionAndUser(sessionToken)
-
-      // If session has expired, clean up the database
-      if (
-        userAndSession &&
-        userAndSession.session.expires.valueOf() < Date.now()
-      ) {
-        await deleteSession(sessionToken)
-        userAndSession = null
-      }
-
-      if (userAndSession) {
-        const { user, session } = userAndSession
-
-        const sessionUpdateAge = options.session.updateAge
-        // Calculate last updated date to throttle write updates to database
-        // Formula: ({expiry date} - sessionMaxAge) + sessionUpdateAge
-        //     e.g. ({expiry date} - 30 days) + 1 hour
-        const sessionIsDueToBeUpdatedDate =
-          session.expires.valueOf() -
-          sessionMaxAge * 1000 +
-          sessionUpdateAge * 1000
-
-        const newExpires = fromDate(sessionMaxAge)
-        // Trigger update of session expiry date and write to database, only
-        // if the session was last updated more than {sessionUpdateAge} ago
-        if (sessionIsDueToBeUpdatedDate <= Date.now()) {
-          await updateSession({ sessionToken, expires: newExpires })
-        }
-
-        // Pass Session through to the session callback
-
-        // @ts-expect-error Property 'token' is missing in type
-        const sessionPayload = await callbacks.session({
-          // By default, only exposes a limited subset of information to the client
-          // as needed for presentation purposes (e.g. "you are logged in as...").
-          session: {
-            user: { name: user.name, email: user.email, image: user.image },
-            expires: session.expires.toISOString(),
-          },
-          user,
-          newSession,
-          ...(isUpdate ? { trigger: "update" } : {}),
-        })
-
-        // Return session payload as response
-        response.body = sessionPayload
-
-        // Set cookie again to update expiry
-        response.cookies?.push({
-          name: options.cookies.sessionToken.name,
-          value: sessionToken,
-          options: {
-            ...options.cookies.sessionToken.options,
-            expires: newExpires,
-          },
-        })
-
-        // @ts-expect-error
-        await events.session?.({ session: sessionPayload })
-      } else if (sessionToken) {
-        // If `sessionToken` was found set but it's not valid for a session then
-        // remove the sessionToken cookie from browser.
-        response.cookies?.push(...sessionStore.clean())
-      }
-    } catch (error) {
-      logger.error("SESSION_ERROR", error as Error)
-    }
-  }
-
-  return response
-}
diff --git a/node_modules/next-auth/src/core/routes/signin.ts b/node_modules/next-auth/src/core/routes/signin.ts
deleted file mode 100644
index 201f279..0000000
--- a/node_modules/next-auth/src/core/routes/signin.ts
+++ /dev/null
@@ -1,100 +0,0 @@
-import getAuthorizationUrl from "../lib/oauth/authorization-url"
-import emailSignin from "../lib/email/signin"
-import getAdapterUserFromEmail from "../lib/email/getUserFromEmail"
-import type { RequestInternal, ResponseInternal } from ".."
-import type { InternalOptions } from "../types"
-import type { Account } from "../.."
-
-/** Handle requests to /api/auth/signin */
-export default async function signin(params: {
-  options: InternalOptions<"oauth" | "email">
-  query: RequestInternal["query"]
-  body: RequestInternal["body"]
-}): Promise<ResponseInternal> {
-  const { options, query, body } = params
-  const { url, callbacks, logger, provider } = options
-
-  if (!provider.type) {
-    return {
-      status: 500,
-      // @ts-expect-error
-      text: `Error: Type not specified for ${provider.name}`,
-    }
-  }
-
-  if (provider.type === "oauth") {
-    try {
-      const response = await getAuthorizationUrl({ options, query })
-      return response
-    } catch (error) {
-      logger.error("SIGNIN_OAUTH_ERROR", {
-        error: error as Error,
-        providerId: provider.id,
-      })
-      return { redirect: `${url}/error?error=OAuthSignin` }
-    }
-  } else if (provider.type === "email") {
-    let email: string = body?.email
-    if (!email) return { redirect: `${url}/error?error=EmailSignin` }
-    const normalizer: (identifier: string) => string =
-      provider.normalizeIdentifier ??
-      ((identifier) => {
-        // Get the first two elements only,
-        // separated by `@` from user input.
-        let [local, domain] = identifier.toLowerCase().trim().split("@")
-        // The part before "@" can contain a ","
-        // but we remove it on the domain part
-        domain = domain.split(",")[0]
-        return `${local}@${domain}`
-      })
-
-    try {
-      email = normalizer(body?.email)
-    } catch (error) {
-      logger.error("SIGNIN_EMAIL_ERROR", { error, providerId: provider.id })
-      return { redirect: `${url}/error?error=EmailSignin` }
-    }
-
-    const user = await getAdapterUserFromEmail({
-      email,
-      // @ts-expect-error -- Verified in `assertConfig`. adapter: Adapter<true>
-      adapter: options.adapter,
-    })
-
-    const account: Account = {
-      providerAccountId: email,
-      userId: email,
-      type: "email",
-      provider: provider.id,
-    }
-
-    // Check if user is allowed to sign in
-    try {
-      const signInCallbackResponse = await callbacks.signIn({
-        user,
-        account,
-        email: { verificationRequest: true },
-      })
-      if (!signInCallbackResponse) {
-        return { redirect: `${url}/error?error=AccessDenied` }
-      } else if (typeof signInCallbackResponse === "string") {
-        return { redirect: signInCallbackResponse }
-      }
-    } catch (error) {
-      return {
-        redirect: `${url}/error?${new URLSearchParams({
-          error: error as string,
-        })}`,
-      }
-    }
-
-    try {
-      const redirect = await emailSignin(email, options)
-      return { redirect }
-    } catch (error) {
-      logger.error("SIGNIN_EMAIL_ERROR", { error, providerId: provider.id })
-      return { redirect: `${url}/error?error=EmailSignin` }
-    }
-  }
-  return { redirect: `${url}/signin` }
-}
diff --git a/node_modules/next-auth/src/core/routes/signout.ts b/node_modules/next-auth/src/core/routes/signout.ts
deleted file mode 100644
index 5078d53..0000000
--- a/node_modules/next-auth/src/core/routes/signout.ts
+++ /dev/null
@@ -1,45 +0,0 @@
-import type { Adapter } from "../../adapters"
-import type { InternalOptions } from "../types"
-import type { ResponseInternal } from ".."
-import type { SessionStore } from "../lib/cookie"
-
-/** Handle requests to /api/auth/signout */
-export default async function signout(params: {
-  options: InternalOptions
-  sessionStore: SessionStore
-}): Promise<ResponseInternal> {
-  const { options, sessionStore } = params
-  const { adapter, events, jwt, callbackUrl, logger, session } = options
-
-  const sessionToken = sessionStore?.value
-  if (!sessionToken) {
-    return { redirect: callbackUrl }
-  }
-
-  if (session.strategy === "jwt") {
-    // Dispatch signout event
-    try {
-      const decodedJwt = await jwt.decode({ ...jwt, token: sessionToken })
-      // @ts-expect-error
-      await events.signOut?.({ token: decodedJwt })
-    } catch (error) {
-      // Do nothing if decoding the JWT fails
-      logger.error("SIGNOUT_ERROR", error)
-    }
-  } else {
-    try {
-      const session = await (adapter as Adapter).deleteSession(sessionToken)
-      // Dispatch signout event
-      // @ts-expect-error
-      await events.signOut?.({ session })
-    } catch (error) {
-      // If error, log it but continue
-      logger.error("SIGNOUT_ERROR", error as Error)
-    }
-  }
-
-  // Remove Session Token
-  const sessionCookies = sessionStore.clean()
-
-  return { redirect: callbackUrl, cookies: sessionCookies }
-}
diff --git a/node_modules/next-auth/src/core/types.ts b/node_modules/next-auth/src/core/types.ts
deleted file mode 100644
index 479c5b9..0000000
--- a/node_modules/next-auth/src/core/types.ts
+++ /dev/null
@@ -1,627 +0,0 @@
-import type { Adapter, AdapterUser } from "../adapters"
-import type {
-  Provider,
-  CredentialInput,
-  ProviderType,
-  EmailConfig,
-  CredentialsConfig,
-  OAuthConfig,
-  AuthorizationEndpointHandler,
-  TokenEndpointHandler,
-  UserinfoEndpointHandler,
-} from "../providers"
-import type { TokenSetParameters } from "openid-client"
-import type { JWT, JWTOptions } from "../jwt"
-import type { LoggerInstance } from "../utils/logger"
-import type { CookieSerializeOptions } from "cookie"
-
-import type { NextApiRequest, NextApiResponse } from "next"
-
-import type { InternalUrl } from "../utils/parse-url"
-
-export type Awaitable<T> = T | PromiseLike<T>
-
-export type { LoggerInstance }
-
-/**
- * Configure your NextAuth instance
- *
- * [Documentation](https://next-auth.js.org/configuration/options#options)
- */
-export interface AuthOptions {
-  /**
-   * An array of authentication providers for signing in
-   * (e.g. Google, Facebook, Twitter, GitHub, Email, etc) in any order.
-   * This can be one of the built-in providers or an object with a custom provider.
-   * * **Default value**: `[]`
-   * * **Required**: *Yes*
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#providers) | [Providers documentation](https://next-auth.js.org/configuration/providers)
-   */
-  providers: Provider[]
-  /**
-   * A random string used to hash tokens, sign cookies and generate cryptographic keys.
-   * If not specified, it falls back to `jwt.secret` or `NEXTAUTH_SECRET` from environment variables.
-   * Otherwise, it will use a hash of all configuration options, including Client ID / Secrets for entropy.
-   *
-   * NOTE: The last behavior is extremely volatile, and will throw an error in production.
-   * * **Default value**: `string` (SHA hash of the "options" object)
-   * * **Required**: No - **but strongly recommended**!
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#secret)
-   */
-  secret?: string
-  /**
-   * Configure your session like if you want to use JWT or a database,
-   * how long until an idle session expires, or to throttle write operations in case you are using a database.
-   * * **Default value**: See the documentation page
-   * * **Required**: No
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#session)
-   */
-  session?: Partial<SessionOptions>
-  /**
-   * JSON Web Tokens are enabled by default if you have not specified an adapter.
-   * JSON Web Tokens are encrypted (JWE) by default. We recommend you keep this behaviour.
-   * * **Default value**: See the documentation page
-   * * **Required**: *No*
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#jwt)
-   */
-  jwt?: Partial<JWTOptions>
-  /**
-   * Specify URLs to be used if you want to create custom sign in, sign out and error pages.
-   * Pages specified will override the corresponding built-in page.
-   * * **Default value**: `{}`
-   * * **Required**: *No*
-   * @example
-   *
-   * ```js
-   *   pages: {
-   *     signIn: '/auth/signin',
-   *     signOut: '/auth/signout',
-   *     error: '/auth/error',
-   *     verifyRequest: '/auth/verify-request',
-   *     newUser: '/auth/new-user'
-   *   }
-   * ```
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#pages) | [Pages documentation](https://next-auth.js.org/configuration/pages)
-   */
-  pages?: Partial<PagesOptions>
-  /**
-   * Callbacks are asynchronous functions you can use to control what happens when an action is performed.
-   * Callbacks are *extremely powerful*, especially in scenarios involving JSON Web Tokens
-   * as they **allow you to implement access controls without a database** and to **integrate with external databases or APIs**.
-   * * **Default value**: See the Callbacks documentation
-   * * **Required**: *No*
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#callbacks) | [Callbacks documentation](https://next-auth.js.org/configuration/callbacks)
-   */
-  callbacks?: Partial<CallbacksOptions>
-  /**
-   * Events are asynchronous functions that do not return a response, they are useful for audit logging.
-   * You can specify a handler for any of these events below - e.g. for debugging or to create an audit log.
-   * The content of the message object varies depending on the flow
-   * (e.g. OAuth or Email authentication flow, JWT or database sessions, etc),
-   * but typically contains a user object and/or contents of the JSON Web Token
-   * and other information relevant to the event.
-   * * **Default value**: `{}`
-   * * **Required**: *No*
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#events) | [Events documentation](https://next-auth.js.org/configuration/events)
-   */
-  events?: Partial<EventCallbacks>
-  /**
-   * You can use the adapter option to pass in your database adapter.
-   *
-   * * **Required**: *No*
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#adapter) |
-   * [Adapters Overview](https://next-auth.js.org/adapters/overview)
-   */
-  adapter?: Adapter
-  /**
-   * Set debug to true to enable debug messages for authentication and database operations.
-   * * **Default value**: `false`
-   * * **Required**: *No*
-   *
-   * - ⚠ If you added a custom `logger`, this setting is ignored.
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#debug) | [Logger documentation](https://next-auth.js.org/configuration/options#logger)
-   */
-  debug?: boolean
-  /**
-   * Override any of the logger levels (`undefined` levels will use the built-in logger),
-   * and intercept logs in NextAuth. You can use this option to send NextAuth logs to a third-party logging service.
-   * * **Default value**: `console`
-   * * **Required**: *No*
-   *
-   * @example
-   *
-   * ```js
-   * // /pages/api/auth/[...nextauth].js
-   * import log from "logging-service"
-   * export default NextAuth({
-   *   logger: {
-   *     error(code, ...message) {
-   *       log.error(code, message)
-   *     },
-   *     warn(code, ...message) {
-   *       log.warn(code, message)
-   *     },
-   *     debug(code, ...message) {
-   *       log.debug(code, message)
-   *     }
-   *   }
-   * })
-   * ```
-   *
-   * - ⚠ When set, the `debug` option is ignored
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#logger) |
-   * [Debug documentation](https://next-auth.js.org/configuration/options#debug)
-   */
-  logger?: Partial<LoggerInstance>
-  /**
-   * Changes the theme of pages.
-   * Set to `"light"` if you want to force pages to always be light.
-   * Set to `"dark"` if you want to force pages to always be dark.
-   * Set to `"auto"`, (or leave this option out)if you want the pages to follow the preferred system theme.
-   * * **Default value**: `"auto"`
-   * * **Required**: *No*
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#theme) | [Pages documentation]("https://next-auth.js.org/configuration/pages")
-   */
-  theme?: Theme
-  /**
-   * When set to `true` then all cookies set by NextAuth.js will only be accessible from HTTPS URLs.
-   * This option defaults to `false` on URLs that start with `http://` (e.g. http://localhost:3000) for developer convenience.
-   * You can manually set this option to `false` to disable this security feature and allow cookies
-   * to be accessible from non-secured URLs (this is not recommended).
-   * * **Default value**: `true` for HTTPS and `false` for HTTP sites
-   * * **Required**: No
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#usesecurecookies)
-   *
-   * - ⚠ **This is an advanced option.** Advanced options are passed the same way as basic options,
-   * but **may have complex implications** or side effects.
-   * You should **try to avoid using advanced options** unless you are very comfortable using them.
-   */
-  useSecureCookies?: boolean
-  /**
-   * You can override the default cookie names and options for any of the cookies used by NextAuth.js.
-   * You can specify one or more cookies with custom properties,
-   * but if you specify custom options for a cookie you must provide all the options for that cookie.
-   * If you use this feature, you will likely want to create conditional behavior
-   * to support setting different cookies policies in development and production builds,
-   * as you will be opting out of the built-in dynamic policy.
-   * * **Default value**: `{}`
-   * * **Required**: No
-   *
-   * - ⚠ **This is an advanced option.** Advanced options are passed the same way as basic options,
-   * but **may have complex implications** or side effects.
-   * You should **try to avoid using advanced options** unless you are very comfortable using them.
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#cookies) | [Usage example](https://next-auth.js.org/configuration/options#example)
-   */
-  cookies?: Partial<CookiesOptions>
-}
-
-/**
- * Change the theme of the built-in pages.
- *
- * [Documentation](https://next-auth.js.org/configuration/options#theme) |
- * [Pages](https://next-auth.js.org/configuration/pages)
- */
-export interface Theme {
-  colorScheme?: "auto" | "dark" | "light"
-  logo?: string
-  brandColor?: string
-  buttonText?: string
-}
-
-/**
- * Different tokens returned by OAuth Providers.
- * Some of them are available with different casing,
- * but they refer to the same value.
- */
-export type TokenSet = TokenSetParameters
-
-/**
- * Usually contains information about the provider being used
- * and also extends `TokenSet`, which is different tokens returned by OAuth Providers.
- */
-export interface Account extends Partial<TokenSet> {
-  /**
-   * This value depends on the type of the provider being used to create the account.
-   * - oauth: The OAuth account's id, returned from the `profile()` callback.
-   * - email: The user's email address.
-   * - credentials: `id` returned from the `authorize()` callback
-   */
-  providerAccountId: string
-  /** id of the user this account belongs to. */
-  userId?: string
-  /** id of the provider used for this account */
-  provider: string
-  /** Provider's type for this account */
-  type: ProviderType
-}
-
-/** The OAuth profile returned from your provider */
-export interface Profile {
-  sub?: string
-  name?: string
-  email?: string
-  image?: string
-}
-
-/** [Documentation](https://next-auth.js.org/configuration/callbacks) */
-export interface CallbacksOptions<P = Profile, A = Account> {
-  /**
-   * Use this callback to control if a user is allowed to sign in.
-   * Returning true will continue the sign-in flow.
-   * Throwing an error or returning a string will stop the flow, and redirect the user.
-   *
-   * [Documentation](https://next-auth.js.org/configuration/callbacks#sign-in-callback)
-   */
-  signIn: (params: {
-    user: User | AdapterUser
-    account: A | null
-    /**
-     * If OAuth provider is used, it contains the full
-     * OAuth profile returned by your provider.
-     */
-    profile?: P
-    /**
-     * If Email provider is used, on the first call, it contains a
-     * `verificationRequest: true` property to indicate it is being triggered in the verification request flow.
-     * When the callback is invoked after a user has clicked on a sign in link,
-     * this property will not be present. You can check for the `verificationRequest` property
-     * to avoid sending emails to addresses or domains on a blocklist or to only explicitly generate them
-     * for email address in an allow list.
-     */
-    email?: {
-      verificationRequest?: boolean
-    }
-    /** If Credentials provider is used, it contains the user credentials */
-    credentials?: Record<string, CredentialInput>
-  }) => Awaitable<string | boolean>
-  /**
-   * This callback is called anytime the user is redirected to a callback URL (e.g. on signin or signout).
-   * By default only URLs on the same URL as the site are allowed,
-   * you can use this callback to customise that behaviour.
-   *
-   * [Documentation](https://next-auth.js.org/configuration/callbacks#redirect-callback)
-   */
-  redirect: (params: {
-    /** URL provided as callback URL by the client */
-    url: string
-    /** Default base URL of site (can be used as fallback) */
-    baseUrl: string
-  }) => Awaitable<string>
-  /**
-   * This callback is called whenever a session is checked.
-   * (Eg.: invoking the `/api/session` endpoint, using `useSession` or `getSession`)
-   *
-   * ⚠ By default, only a subset (email, name, image)
-   * of the token is returned for increased security.
-   *
-   * If you want to make something available you added to the token through the `jwt` callback,
-   * you have to explicitly forward it here to make it available to the client.
-   *
-   * [Documentation](https://next-auth.js.org/configuration/callbacks#session-callback) |
-   * [`jwt` callback](https://next-auth.js.org/configuration/callbacks#jwt-callback) |
-   * [`useSession`](https://next-auth.js.org/getting-started/client#usesession) |
-   * [`getSession`](https://next-auth.js.org/getting-started/client#getsession) |
-   *
-   */
-  session: (
-    params:
-      | {
-          session: Session
-          /** Available when {@link SessionOptions.strategy} is set to `"jwt"` */
-          token: JWT
-          /** Available when {@link SessionOptions.strategy} is set to `"database"`. */
-          user: AdapterUser
-        } & {
-          /**
-           * Available when using {@link SessionOptions.strategy} `"database"`, this is the data
-           * sent from the client via the [`useSession().update`](https://next-auth.js.org/getting-started/client#update-session) method.
-           *
-           * ⚠ Note, you should validate this data before using it.
-           */
-          newSession: any
-          trigger: "update"
-        }
-  ) => Awaitable<Session | DefaultSession>
-  /**
-   * This callback is called whenever a JSON Web Token is created (i.e. at sign in)
-   * or updated (i.e whenever a session is accessed in the client).
-   * Its content is forwarded to the `session` callback,
-   * where you can control what should be returned to the client.
-   * Anything else will be kept from your front-end.
-   *
-   * The JWT is encrypted by default.
-   *
-   * [Documentation](https://next-auth.js.org/configuration/callbacks#jwt-callback) |
-   * [`session` callback](https://next-auth.js.org/configuration/callbacks#session-callback)
-   */
-  jwt: (
-    // TODO: remove in `@auth/core` in favor of `trigger: "signUp"`
-    params: {
-      /**
-       * When `trigger` is `"signIn"` or `"signUp"`, it will be a subset of {@link JWT},
-       * `name`, `email` and `picture` will be included.
-       *
-       * Otherwise, it will be the full {@link JWT} for subsequent calls.
-       */
-      token: JWT
-      /**
-       * Either the result of the {@link OAuthConfig.profile} or the {@link CredentialsConfig.authorize} callback.
-       * @note available when `trigger` is `"signIn"` or `"signUp"`.
-       *
-       * Resources:
-       * - [Credentials Provider](https://next-auth.js.org/providers/credentials)
-       * - [User database model](https://authjs.dev/reference/adapters#user)
-       */
-      user: User | AdapterUser
-      /**
-       * Contains information about the provider that was used to sign in.
-       * Also includes {@link TokenSet}
-       * @note available when `trigger` is `"signIn"` or `"signUp"`
-       */
-      account: A | null
-      /**
-       * The OAuth profile returned from your provider.
-       * (In case of OIDC it will be the decoded ID Token or /userinfo response)
-       * @note available when `trigger` is `"signIn"`.
-       */
-      profile?: P
-      /**
-       * Check why was the jwt callback invoked. Possible reasons are:
-       * - user sign-in: First time the callback is invoked, `user`, `profile` and `account` will be present.
-       * - user sign-up: a user is created for the first time in the database (when {@link SessionOptions.strategy} is set to `"database"`})
-       * - update event: Triggered by the [`useSession().update`](https://next-auth.js.org/getting-started/client#update-session) method.
-       * In case of the latter, `trigger` will be `undefined`.
-       */
-      trigger?: "signIn" | "signUp" | "update"
-      /** @deprecated use `trigger === "signUp"` instead */
-      isNewUser?: boolean
-      /**
-       * When using {@link SessionOptions.strategy} `"jwt"`, this is the data
-       * sent from the client via the [`useSession().update`](https://next-auth.js.org/getting-started/client#update-session) method.
-       *
-       * ⚠ Note, you should validate this data before using it.
-       */
-      session?: any
-    }
-  ) => Awaitable<JWT>
-}
-
-/** [Documentation](https://next-auth.js.org/configuration/options#cookies) */
-export interface CookieOption {
-  name: string
-  options: CookieSerializeOptions
-}
-
-/** [Documentation](https://next-auth.js.org/configuration/options#cookies) */
-export interface CookiesOptions {
-  sessionToken: CookieOption
-  callbackUrl: CookieOption
-  csrfToken: CookieOption
-  pkceCodeVerifier: CookieOption
-  state: CookieOption
-  nonce: CookieOption
-}
-
-/**
- *  The various event callbacks you can register for from next-auth
- *
- * [Documentation](https://next-auth.js.org/configuration/events)
- */
-export interface EventCallbacks {
-  /**
-   * If using a `credentials` type auth, the user is the raw response from your
-   * credential provider.
-   * For other providers, you'll get the User object from your adapter, the account,
-   * and an indicator if the user was new to your Adapter.
-   */
-  signIn: (message: {
-    user: User
-    account: Account | null
-    profile?: Profile
-    isNewUser?: boolean
-  }) => Awaitable<void>
-  /**
-   * The message object will contain one of these depending on
-   * if you use JWT or database persisted sessions:
-   * - `token`: The JWT token for this session.
-   * - `session`: The session object from your adapter that is being ended.
-   */
-  signOut: (message: { session: Session; token: JWT }) => Awaitable<void>
-  createUser: (message: { user: User }) => Awaitable<void>
-  updateUser: (message: { user: User }) => Awaitable<void>
-  linkAccount: (message: {
-    user: User | AdapterUser
-    account: Account
-    profile: User | AdapterUser
-  }) => Awaitable<void>
-  /**
-   * The message object will contain one of these depending on
-   * if you use JWT or database persisted sessions:
-   * - `token`: The JWT token for this session.
-   * - `session`: The session object from your adapter.
-   */
-  session: (message: { session: Session; token: JWT }) => Awaitable<void>
-}
-
-export type EventType = keyof EventCallbacks
-
-/** [Documentation](https://next-auth.js.org/configuration/pages) */
-export interface PagesOptions {
-  signIn: string
-  signOut: string
-  /** Error code passed in query string as ?error= */
-  error: string
-  verifyRequest: string
-  /** If set, new users will be directed here on first sign in */
-  newUser: string
-}
-
-export type ISODateString = string
-
-export interface DefaultSession {
-  user?: {
-    name?: string | null
-    email?: string | null
-    image?: string | null
-  }
-  expires: ISODateString
-}
-
-/**
- * Returned by `useSession`, `getSession`, returned by the `session` callback
- * and also the shape received as a prop on the `SessionProvider` React Context
- *
- * [`useSession`](https://next-auth.js.org/getting-started/client#usesession) |
- * [`getSession`](https://next-auth.js.org/getting-started/client#getsession) |
- * [`SessionProvider`](https://next-auth.js.org/getting-started/client#sessionprovider) |
- * [`session` callback](https://next-auth.js.org/configuration/callbacks#jwt-callback)
- */
-export interface Session extends DefaultSession {}
-
-export type SessionStrategy = "jwt" | "database"
-
-/** [Documentation](https://next-auth.js.org/configuration/options#session) */
-export interface SessionOptions {
-  /**
-   * Choose how you want to save the user session.
-   * The default is `"jwt"`, an encrypted JWT (JWE) in the session cookie.
-   *
-   * If you use an `adapter` however, we default it to `"database"` instead.
-   * You can still force a JWT session by explicitly defining `"jwt"`.
-   *
-   * When using `"database"`, the session cookie will only contain a `sessionToken` value,
-   * which is used to look up the session in the database.
-   *
-   * [Documentation](https://next-auth.js.org/configuration/options#session) | [Adapter](https://next-auth.js.org/configuration/options#adapter) | [About JSON Web Tokens](https://next-auth.js.org/faq#json-web-tokens)
-   */
-  strategy: SessionStrategy
-  /**
-   * Relative time from now in seconds when to expire the session
-   * @default 2592000 // 30 days
-   */
-  maxAge: number
-  /**
-   * How often the session should be updated in seconds.
-   * If set to `0`, session is updated every time.
-   * @default 86400 // 1 day
-   */
-  updateAge: number
-  /**
-   * Generate a custom session token for database-based sessions.
-   * By default, a random UUID or string is generated depending on the Node.js version.
-   * However, you can specify your own custom string (such as CUID) to be used.
-   * @default `randomUUID` or `randomBytes.toHex` depending on the Node.js version
-   */
-  generateSessionToken: () => Awaitable<string>
-}
-
-export interface DefaultUser {
-  id: string
-  name?: string | null
-  email?: string | null
-  image?: string | null
-}
-
-/**
- * The shape of the returned object in the OAuth providers' `profile` callback,
- * available in the `jwt` and `session` callbacks,
- * or the second parameter of the `session` callback, when using a database.
- *
- * [`signIn` callback](https://next-auth.js.org/configuration/callbacks#sign-in-callback) |
- * [`session` callback](https://next-auth.js.org/configuration/callbacks#jwt-callback) |
- * [`jwt` callback](https://next-auth.js.org/configuration/callbacks#jwt-callback) |
- * [`profile` OAuth provider callback](https://next-auth.js.org/configuration/providers#using-a-custom-provider)
- */
-export interface User extends DefaultUser {}
-
-// Below are types that are only supposed be used by next-auth internally
-
-/** @internal */
-export interface OAuthConfigInternal<P>
-  extends Omit<OAuthConfig<P>, "authorization" | "token" | "userinfo"> {
-  authorization?: AuthorizationEndpointHandler
-  token?: TokenEndpointHandler
-  userinfo?: UserinfoEndpointHandler
-}
-
-/** @internal */
-export type InternalProvider<T = ProviderType> = (T extends "oauth"
-  ? OAuthConfigInternal<any>
-  : T extends "email"
-  ? EmailConfig
-  : T extends "credentials"
-  ? CredentialsConfig
-  : never) & {
-  signinUrl: string
-  callbackUrl: string
-}
-
-export type AuthAction =
-  | "providers"
-  | "session"
-  | "csrf"
-  | "signin"
-  | "signout"
-  | "callback"
-  | "verify-request"
-  | "error"
-  | "_log"
-
-/** @internal */
-export interface InternalOptions<
-  TProviderType = ProviderType,
-  WithVerificationToken = TProviderType extends "email" ? true : false
-> {
-  providers: InternalProvider[]
-  /**
-   * Parsed from `NEXTAUTH_URL` or `x-forwarded-host` and `x-forwarded-proto` if the host is trusted.
-   * @default "http://localhost:3000/api/auth"
-   */
-  url: InternalUrl
-  action: AuthAction
-  provider: InternalProvider<TProviderType>
-  csrfToken?: string
-  csrfTokenVerified?: boolean
-  secret: string
-  theme: Theme
-  debug: boolean
-  logger: LoggerInstance
-  session: Required<SessionOptions>
-  pages: Partial<PagesOptions>
-  jwt: JWTOptions
-  events: Partial<EventCallbacks>
-  adapter: WithVerificationToken extends true
-    ? Adapter<WithVerificationToken>
-    : Adapter<WithVerificationToken> | undefined
-  callbacks: CallbacksOptions
-  cookies: CookiesOptions
-  callbackUrl: string
-}
-
-/** @internal */
-export interface NextAuthRequest extends NextApiRequest {
-  options: InternalOptions
-}
-
-/** @internal */
-export type NextAuthResponse<T = any> = NextApiResponse<T>
-
-/** @internal */
-// eslint-disable-next-line @typescript-eslint/no-invalid-void-type
-export type NextAuthApiHandler<Result = void, Response = any> = (
-  req: NextAuthRequest,
-  res: NextAuthResponse<Response>
-) => Awaitable<Result>
diff --git a/node_modules/next-auth/src/css/index.css b/node_modules/next-auth/src/css/index.css
deleted file mode 100644
index 7637d5d..0000000
--- a/node_modules/next-auth/src/css/index.css
+++ /dev/null
@@ -1,293 +0,0 @@
-:root {
-  --border-width: 1px;
-  --border-radius: 0.5rem;
-  --color-error: #c94b4b;
-  --color-info: #157efb;
-  --color-info-text: #fff;
-}
-
-.__next-auth-theme-auto,
-.__next-auth-theme-light {
-  --color-background: #ececec;
-  --color-background-card: #fff;
-  --color-text: #000;
-  --color-primary: #444;
-  --color-control-border: #bbb;
-  --color-button-active-background: #f9f9f9;
-  --color-button-active-border: #aaa;
-  --color-seperator: #ccc;
-}
-
-.__next-auth-theme-dark {
-  --color-background: #161b22;
-  --color-background-card: #0d1117;
-  --color-text: #fff;
-  --color-primary: #ccc;
-  --color-control-border: #555;
-  --color-button-active-background: #060606;
-  --color-button-active-border: #666;
-  --color-seperator: #444;
-}
-
-@media (prefers-color-scheme: dark) {
-  .__next-auth-theme-auto {
-    --color-background: #161b22;
-    --color-background-card: #0d1117;
-    --color-text: #fff;
-    --color-primary: #ccc;
-    --color-control-border: #555;
-    --color-button-active-background: #060606;
-    --color-button-active-border: #666;
-    --color-seperator: #444;
-  }
-}
-
-body {
-  background-color: var(--color-background);
-  margin: 0;
-  padding: 0;
-  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
-    "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif,
-    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
-}
-
-h1 {
-  font-weight: 400;
-  margin-bottom: 1.5rem;
-  padding: 0 1rem;
-  color: var(--color-text);
-}
-
-p {
-  color: var(--color-text);
-}
-
-form {
-  margin: 0;
-  padding: 0;
-}
-
-label {
-  font-weight: 500;
-  text-align: left;
-  margin-bottom: 0.25rem;
-  display: block;
-  color: var(--color-text);
-}
-
-input[type] {
-  box-sizing: border-box;
-  display: block;
-  width: 100%;
-  padding: 0.5rem 1rem;
-  border: var(--border-width) solid var(--color-control-border);
-  background: var(--color-background-card);
-  font-size: 1rem;
-  border-radius: var(--border-radius);
-  color: var(--color-text);
-
-  &:focus {
-    box-shadow: none;
-  }
-}
-
-p {
-  margin: 0 0 1.5rem 0;
-  padding: 0 1rem;
-  font-size: 1.1rem;
-  line-height: 2rem;
-}
-
-a.button {
-  text-decoration: none;
-  line-height: 1rem;
-
-  &:link,
-  &:visited {
-    background-color: var(--color-background);
-    color: var(--color-primary);
-  }
-}
-
-button span {
-  flex-grow: 1;
-}
-
-button,
-a.button {
-  margin: 0 0 0.75rem 0;
-  padding: 0.75rem 1rem;
-  color: var(--provider-color, var(--color-primary));
-  background-color: var(--provider-bg, var(--color-background-card));
-  font-size: 1.1rem;
-  min-height: 62px;
-  border-color: rgba(0, 0, 0, 0.1);
-  border-radius: var(--border-radius);
-  transition: all 0.1s ease-in-out;
-  font-weight: 500;
-  position: relative;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-
-  @media (max-width: 450px) {
-    font-size: 0.9rem;
-  }
-
-  &:hover {
-    cursor: pointer;
-  }
-  &:active {
-    cursor: pointer;
-  }
-  #provider-logo {
-    width: 25px;
-    display: block;
-  }
-  #provider-logo-dark {
-    display: none;
-  }
-}
-
-#submitButton {
-  color: var(--button-text-color, var(--color-info-text));
-  background-color: var(--brand-color, var(--color-info));
-  width: 100%;
-}
-
-@media (prefers-color-scheme: dark) {
-  button,
-  a.button {
-    color: var(--provider-dark-color, var(--color-primary));
-    background-color: var(--provider-dark-bg, var(--color-background));
-  }
-  #provider-logo {
-    display: none !important;
-  }
-  #provider-logo-dark {
-    width: 25px;
-    display: block !important;
-  }
-}
-
-a.site {
-  color: var(--color-primary);
-  text-decoration: none;
-  font-size: 1rem;
-  line-height: 2rem;
-
-  &:hover {
-    text-decoration: underline;
-  }
-}
-
-.page {
-  position: absolute;
-  width: 100%;
-  height: 100%;
-  display: grid;
-  place-items: center;
-  margin: 0;
-  padding: 0;
-
-  > div {
-    text-align: center;
-  }
-}
-
-.error {
-  a.button {
-    display: inline-block;
-    padding-left: 2rem;
-    padding-right: 2rem;
-    margin-top: 0.5rem;
-  }
-
-  .message {
-    margin-bottom: 1.5rem;
-  }
-}
-
-.signin {
-  input[type="text"] {
-    margin-left: auto;
-    margin-right: auto;
-    display: block;
-  }
-
-  hr {
-    display: block;
-    border: 0;
-    border-top: 1px solid var(--color-seperator);
-    margin: 2rem auto 1rem auto;
-    overflow: visible;
-
-    &::before {
-      content: "or";
-      background: var(--color-background-card);
-      color: #888;
-      padding: 0 0.4rem;
-      position: relative;
-      top: -0.7rem;
-    }
-  }
-
-  .error {
-    background: #f5f5f5;
-    font-weight: 500;
-    border-radius: 0.3rem;
-    background: var(--color-error);
-
-    p {
-      text-align: left;
-      padding: 0.5rem 1rem;
-      font-size: 0.9rem;
-      line-height: 1.2rem;
-      color: var(--color-info-text);
-    }
-  }
-
-  > div,
-  form {
-    display: block;
-
-    input[type] {
-      margin-bottom: 0.5rem;
-    }
-
-    button {
-      width: 100%;
-    }
-
-    max-width: 300px;
-  }
-}
-
-.logo {
-  display: inline-block;
-  max-width: 150px;
-  margin-top: 20px;
-  margin-bottom: 25px;
-  max-height: 70px;
-}
-
-.card {
-  @media screen and (min-width: 450px) {
-    width: 350px;
-  }
-  @media screen and (max-width: 450px) {
-    width: 200px;
-  }
-  margin: 20px 0 20px 0;
-  background-color: var(--color-background-card);
-  border-radius: 30px;
-  padding: 20px 50px;
-
-  .header {
-    color: var(--color-primary);
-  }
-}
-
-.section-header {
-  color: var(--color-text);
-}
diff --git a/node_modules/next-auth/src/css/index.ts b/node_modules/next-auth/src/css/index.ts
deleted file mode 100644
index a62e822..0000000
--- a/node_modules/next-auth/src/css/index.ts
+++ /dev/null
@@ -1,11 +0,0 @@
-// To support serverless targets (which don"t work if you try to read in things
-// like CSS files at run time) this file is replaced in production builds with
-// a function that returns compiled CSS (embedded as a string in the function).
-import fs from "fs"
-import path from "path"
-
-const pathToCss = path.join(process.cwd(), process.env.NODE_ENV === "development" ? "node_modules/next-auth/css/index.css" : "/src/css/index.css")
-
-export default function css() {
-  return fs.readFileSync(pathToCss, "utf8")
-}
diff --git a/node_modules/next-auth/src/index.ts b/node_modules/next-auth/src/index.ts
deleted file mode 100644
index fdb9e17..0000000
--- a/node_modules/next-auth/src/index.ts
+++ /dev/null
@@ -1,10 +0,0 @@
-export * from "./core/types"
-export type { AuthOptions as NextAuthOptions } from "./core/types"
-
-export type {
-  RequestInternal,
-  ResponseInternal as OutgoingResponse,
-} from "./core"
-
-export * from "./next"
-export { default } from "./next"
diff --git a/node_modules/next-auth/src/jwt/index.ts b/node_modules/next-auth/src/jwt/index.ts
deleted file mode 100644
index aec2e04..0000000
--- a/node_modules/next-auth/src/jwt/index.ts
+++ /dev/null
@@ -1,127 +0,0 @@
-import { EncryptJWT, jwtDecrypt } from "jose"
-import hkdf from "@panva/hkdf"
-import { v4 as uuid } from "uuid"
-import { SessionStore } from "../core/lib/cookie"
-import type { GetServerSidePropsContext, NextApiRequest } from "next"
-import type { NextRequest } from "next/server"
-import type { JWT, JWTDecodeParams, JWTEncodeParams, JWTOptions } from "./types"
-import type { LoggerInstance } from ".."
-
-export * from "./types"
-
-const DEFAULT_MAX_AGE = 30 * 24 * 60 * 60 // 30 days
-
-const now = () => (Date.now() / 1000) | 0
-
-/** Issues a JWT. By default, the JWT is encrypted using "A256GCM". */
-export async function encode(params: JWTEncodeParams) {
-  const { token = {}, secret, maxAge = DEFAULT_MAX_AGE } = params
-  const encryptionSecret = await getDerivedEncryptionKey(secret)
-  return await new EncryptJWT(token)
-    .setProtectedHeader({ alg: "dir", enc: "A256GCM" })
-    .setIssuedAt()
-    .setExpirationTime(now() + maxAge)
-    .setJti(uuid())
-    .encrypt(encryptionSecret)
-}
-
-/** Decodes a NextAuth.js issued JWT. */
-export async function decode(params: JWTDecodeParams): Promise<JWT | null> {
-  const { token, secret } = params
-  if (!token) return null
-  const encryptionSecret = await getDerivedEncryptionKey(secret)
-  const { payload } = await jwtDecrypt(token, encryptionSecret, {
-    clockTolerance: 15,
-  })
-  return payload
-}
-
-export interface GetTokenParams<R extends boolean = false> {
-  /** The request containing the JWT either in the cookies or in the `Authorization` header. */
-  req: GetServerSidePropsContext["req"] | NextRequest | NextApiRequest
-  /**
-   * Use secure prefix for cookie name, unless URL in `NEXTAUTH_URL` is http://
-   * or not set (e.g. development or test instance) case use unprefixed name
-   */
-  secureCookie?: boolean
-  /** If the JWT is in the cookie, what name `getToken()` should look for. */
-  cookieName?: string
-  /**
-   * `getToken()` will return the raw JWT if this is set to `true`
-   * @default false
-   */
-  raw?: R
-  /**
-   * The same `secret` used in the `NextAuth` configuration.
-   * Defaults to the `NEXTAUTH_SECRET` environment variable.
-   */
-  secret?: string
-  decode?: JWTOptions["decode"]
-  logger?: LoggerInstance | Console
-}
-
-/**
- * Takes a NextAuth.js request (`req`) and returns either the NextAuth.js issued JWT's payload,
- * or the raw JWT string. We look for the JWT in the either the cookies, or the `Authorization` header.
- * [Documentation](https://next-auth.js.org/tutorials/securing-pages-and-api-routes#using-gettoken)
- */
-export async function getToken<R extends boolean = false>(
-  params: GetTokenParams<R>
-): Promise<R extends true ? string : JWT | null> {
-  const {
-    req,
-    secureCookie = process.env.NEXTAUTH_URL?.startsWith("https://") ??
-      !!process.env.VERCEL,
-    cookieName = secureCookie
-      ? "__Secure-next-auth.session-token"
-      : "next-auth.session-token",
-    raw,
-    decode: _decode = decode,
-    logger = console,
-    secret = process.env.NEXTAUTH_SECRET,
-  } = params
-
-  if (!req) throw new Error("Must pass `req` to JWT getToken()")
-
-  const sessionStore = new SessionStore(
-    { name: cookieName, options: { secure: secureCookie } },
-    { cookies: req.cookies, headers: req.headers },
-    logger
-  )
-
-  let token = sessionStore.value
-
-  const authorizationHeader =
-    req.headers instanceof Headers
-      ? req.headers.get("authorization")
-      : req.headers?.authorization
-
-  if (!token && authorizationHeader?.split(" ")[0] === "Bearer") {
-    const urlEncodedToken = authorizationHeader.split(" ")[1]
-    token = decodeURIComponent(urlEncodedToken)
-  }
-
-  // @ts-expect-error
-  if (!token) return null
-
-  // @ts-expect-error
-  if (raw) return token
-
-  try {
-    // @ts-expect-error
-    return await _decode({ token, secret })
-  } catch {
-    // @ts-expect-error
-    return null
-  }
-}
-
-async function getDerivedEncryptionKey(secret: string | Buffer) {
-  return await hkdf(
-    "sha256",
-    secret,
-    "",
-    "NextAuth.js Generated Encryption Key",
-    32
-  )
-}
diff --git a/node_modules/next-auth/src/jwt/types.ts b/node_modules/next-auth/src/jwt/types.ts
deleted file mode 100644
index ecd0e2a..0000000
--- a/node_modules/next-auth/src/jwt/types.ts
+++ /dev/null
@@ -1,54 +0,0 @@
-import type { Awaitable } from ".."
-
-export interface DefaultJWT extends Record<string, unknown> {
-  name?: string | null
-  email?: string | null
-  picture?: string | null
-  sub?: string
-}
-
-/**
- * Returned by the `jwt` callback and `getToken`, when using JWT sessions
- *
- * [`jwt` callback](https://next-auth.js.org/configuration/callbacks#jwt-callback) | [`getToken`](https://next-auth.js.org/tutorials/securing-pages-and-api-routes#using-gettoken)
- */
-export interface JWT extends Record<string, unknown>, DefaultJWT {}
-
-export interface JWTEncodeParams {
-  /** The JWT payload. */
-  token?: JWT
-  /** The secret used to encode the NextAuth.js issued JWT. */
-  secret: string | Buffer
-  /**
-   * The maximum age of the NextAuth.js issued JWT in seconds.
-   * @default 30 * 24 * 30 * 60 // 30 days
-   */
-  maxAge?: number
-}
-
-export interface JWTDecodeParams {
-  /** The NextAuth.js issued JWT to be decoded */
-  token?: string
-  /** The secret used to decode the NextAuth.js issued JWT. */
-  secret: string | Buffer
-}
-
-export interface JWTOptions {
-  /**
-   * The secret used to encode/decode the NextAuth.js issued JWT.
-   * @deprecated  Set the `NEXTAUTH_SECRET` environment vairable or
-   * use the top-level `secret` option instead
-   */
-  secret: string
-  /**
-   * The maximum age of the NextAuth.js issued JWT in seconds.
-   * @default 30 * 24 * 30 * 60 // 30 days
-   */
-  maxAge: number
-  /** Override this method to control the NextAuth.js issued JWT encoding. */
-  encode: (params: JWTEncodeParams) => Awaitable<string>
-  /** Override this method to control the NextAuth.js issued JWT decoding. */
-  decode: (params: JWTDecodeParams) => Awaitable<JWT | null>
-}
-
-export type Secret = string | Buffer
diff --git a/node_modules/next-auth/src/middleware.ts b/node_modules/next-auth/src/middleware.ts
deleted file mode 100644
index 2bb2f99..0000000
--- a/node_modules/next-auth/src/middleware.ts
+++ /dev/null
@@ -1,2 +0,0 @@
-export { default } from "./next/middleware"
-export * from "./next/middleware"
diff --git a/node_modules/next-auth/src/next/index.ts b/node_modules/next-auth/src/next/index.ts
deleted file mode 100644
index 54afba5..0000000
--- a/node_modules/next-auth/src/next/index.ts
+++ /dev/null
@@ -1,263 +0,0 @@
-import { AuthHandler } from "../core"
-import { setCookie, getBody, toResponse } from "./utils"
-
-import type {
-  GetServerSidePropsContext,
-  NextApiRequest,
-  NextApiResponse,
-} from "next"
-import { type NextRequest } from "next/server"
-import type { AuthOptions, Session } from ".."
-import type {
-  CallbacksOptions,
-  AuthAction,
-  NextAuthRequest,
-  NextAuthResponse,
-} from "../core/types"
-
-interface RouteHandlerContext {
-  params: { nextauth: string[] }
-}
-
-async function NextAuthApiHandler(
-  req: NextApiRequest,
-  res: NextApiResponse,
-  options: AuthOptions
-) {
-  const { nextauth, ...query } = req.query
-
-  options.secret ??= options.jwt?.secret ?? process.env.NEXTAUTH_SECRET
-
-  const handler = await AuthHandler({
-    req: {
-      body: req.body,
-      query,
-      cookies: req.cookies,
-      headers: req.headers,
-      method: req.method,
-      action: nextauth?.[0] as AuthAction,
-      providerId: nextauth?.[1],
-      error: (req.query.error as string | undefined) ?? nextauth?.[1],
-    },
-    options,
-  })
-
-  res.status(handler.status ?? 200)
-
-  handler.cookies?.forEach((cookie) => setCookie(res, cookie))
-
-  handler.headers?.forEach((h) => res.setHeader(h.key, h.value))
-
-  if (handler.redirect) {
-    // If the request expects a return URL, send it as JSON
-    // instead of doing an actual redirect.
-    if (req.body?.json !== "true") {
-      // Could chain. .end() when lowest target is Node 14
-      // https://github.com/nodejs/node/issues/33148
-      res.status(302).setHeader("Location", handler.redirect)
-      return res.end()
-    }
-    return res.json({ url: handler.redirect })
-  }
-
-  return res.send(handler.body)
-}
-
-// @see https://beta.nextjs.org/docs/routing/route-handlers
-async function NextAuthRouteHandler(
-  req: NextRequest,
-  context: { params: { nextauth: string[] } },
-  options: AuthOptions
-) {
-  options.secret ??= process.env.NEXTAUTH_SECRET
-
-  // eslint-disable-next-line @typescript-eslint/no-var-requires
-  const { headers, cookies } = require("next/headers")
-  const nextauth = context.params?.nextauth
-  const query = Object.fromEntries(req.nextUrl.searchParams)
-  const body = await getBody(req)
-  const internalResponse = await AuthHandler({
-    req: {
-      body,
-      query,
-      cookies: Object.fromEntries(
-        cookies()
-          .getAll()
-          .map((c) => [c.name, c.value])
-      ),
-      headers: Object.fromEntries(headers() as Headers),
-      method: req.method,
-      action: nextauth?.[0] as AuthAction,
-      providerId: nextauth?.[1],
-      error: query.error ?? nextauth?.[1],
-    },
-    options,
-  })
-
-  const response = toResponse(internalResponse)
-  const redirect = response.headers.get("Location")
-  if (body?.json === "true" && redirect) {
-    response.headers.delete("Location")
-    response.headers.set("Content-Type", "application/json")
-    return new Response(JSON.stringify({ url: redirect }), {
-      headers: response.headers,
-    })
-  }
-
-  return response
-}
-
-function NextAuth(options: AuthOptions): any
-function NextAuth(
-  req: NextApiRequest,
-  res: NextApiResponse,
-  options: AuthOptions
-): any
-
-/** The main entry point to next-auth */
-function NextAuth(
-  ...args: [AuthOptions] | [NextApiRequest, NextApiResponse, AuthOptions]
-) {
-  if (args.length === 1) {
-    return async (
-      req: NextAuthRequest | NextRequest,
-      res: NextAuthResponse | RouteHandlerContext
-    ) => {
-      if ((res as unknown as any)?.params) {
-        return await NextAuthRouteHandler(
-          req as unknown as NextRequest,
-          res as RouteHandlerContext,
-          args[0]
-        )
-      }
-      return await NextAuthApiHandler(
-        req as NextApiRequest,
-        res as NextApiResponse,
-        args[0]
-      )
-    }
-  }
-
-  if ((args[1] as any)?.params) {
-    return NextAuthRouteHandler(
-      ...(args as unknown as Parameters<typeof NextAuthRouteHandler>)
-    )
-  }
-
-  return NextAuthApiHandler(...args)
-}
-
-export default NextAuth
-
-let experimentalRSCWarningShown = false
-
-type GetServerSessionOptions = Partial<Omit<AuthOptions, "callbacks">> & {
-  callbacks?: Omit<AuthOptions["callbacks"], "session"> & {
-    session?: (...args: Parameters<CallbacksOptions["session"]>) => any
-  }
-}
-
-type GetServerSessionParams<O extends GetServerSessionOptions> =
-  | [GetServerSidePropsContext["req"], GetServerSidePropsContext["res"], O]
-  | [NextApiRequest, NextApiResponse, O]
-  | [O]
-  | []
-
-export async function getServerSession<
-  O extends GetServerSessionOptions,
-  R = O["callbacks"] extends { session: (...args: any[]) => infer U }
-    ? U
-    : Session
->(...args: GetServerSessionParams<O>): Promise<R | null> {
-  const isRSC = args.length === 0 || args.length === 1
-  if (
-    !experimentalRSCWarningShown &&
-    isRSC &&
-    process.env.NODE_ENV !== "production"
-  ) {
-    console.warn(
-      "[next-auth][warn][EXPERIMENTAL_API]",
-      "\n`getServerSession` is used in a React Server Component.",
-      `\nhttps://next-auth.js.org/configuration/nextjs#getServerSession}`,
-      `\nhttps://next-auth.js.org/warnings#EXPERIMENTAL_API`
-    )
-    experimentalRSCWarningShown = true
-  }
-
-  let req, res, options: AuthOptions
-  if (isRSC) {
-    options = Object.assign({}, args[0], { providers: [] })
-
-    // eslint-disable-next-line @typescript-eslint/no-var-requires
-    const { headers, cookies } = require("next/headers")
-    req = {
-      headers: Object.fromEntries(headers() as Headers),
-      cookies: Object.fromEntries(
-        cookies()
-          .getAll()
-          .map((c) => [c.name, c.value])
-      ),
-    }
-    res = { getHeader() {}, setCookie() {}, setHeader() {} }
-  } else {
-    req = args[0]
-    res = args[1]
-    options = Object.assign({}, args[2], { providers: [] })
-  }
-
-  options.secret ??= process.env.NEXTAUTH_SECRET
-
-  const session = await AuthHandler<Session | {} | string>({
-    options,
-    req: {
-      action: "session",
-      method: "GET",
-      cookies: req.cookies,
-      headers: req.headers,
-    },
-  })
-
-  const { body, cookies, status = 200 } = session
-
-  cookies?.forEach((cookie) => setCookie(res, cookie))
-
-  if (body && typeof body !== "string" && Object.keys(body).length) {
-    if (status === 200) {
-      // @ts-expect-error
-      if (isRSC) delete body.expires
-      return body as R
-    }
-    throw new Error((body as any).message)
-  }
-
-  return null
-}
-
-let deprecatedWarningShown = false
-
-/** @deprecated renamed to `getServerSession` */
-export async function unstable_getServerSession<
-  O extends GetServerSessionOptions,
-  R = O["callbacks"] extends { session: (...args: any[]) => infer U }
-    ? U
-    : Session
->(...args: GetServerSessionParams<O>): Promise<R | null> {
-  if (!deprecatedWarningShown && process.env.NODE_ENV !== "production") {
-    console.warn(
-      "`unstable_getServerSession` has been renamed to `getServerSession`."
-    )
-    deprecatedWarningShown = true
-  }
-
-  return await getServerSession(...args)
-}
-
-declare global {
-  // eslint-disable-next-line @typescript-eslint/no-namespace
-  namespace NodeJS {
-    interface ProcessEnv {
-      NEXTAUTH_URL?: string
-      VERCEL?: "1"
-    }
-  }
-}
diff --git a/node_modules/next-auth/src/next/middleware.ts b/node_modules/next-auth/src/next/middleware.ts
deleted file mode 100644
index 8819020..0000000
--- a/node_modules/next-auth/src/next/middleware.ts
+++ /dev/null
@@ -1,210 +0,0 @@
-import type { NextMiddleware, NextFetchEvent } from "next/server"
-import type { Awaitable, CookieOption, AuthOptions } from ".."
-import type { JWT, JWTOptions } from "../jwt"
-
-import { NextResponse, NextRequest } from "next/server"
-
-import { getToken } from "../jwt"
-import parseUrl from "../utils/parse-url"
-
-type AuthorizedCallback = (params: {
-  token: JWT | null
-  req: NextRequest
-}) => Awaitable<boolean>
-
-export interface NextAuthMiddlewareOptions {
-  /**
-   * Where to redirect the user in case of an error if they weren't logged in.
-   * Similar to `pages` in `NextAuth`.
-   *
-   * ---
-   * [Documentation](https://next-auth.js.org/configuration/pages)
-   */
-  pages?: AuthOptions["pages"]
-
-  /**
-   * You can override the default cookie names and options for any of the cookies
-   * by this middleware. Similar to `cookies` in `NextAuth`.
-   *
-   * Useful if the token is stored in not a default cookie.
-   *
-   * ---
-   * [Documentation](https://next-auth.js.org/configuration/options#cookies)
-   *
-   * - ⚠ **This is an advanced option.** Advanced options are passed the same way as basic options,
-   * but **may have complex implications** or side effects.
-   * You should **try to avoid using advanced options** unless you are very comfortable using them.
-   *
-   */
-  cookies?: Partial<
-    Record<
-      keyof Pick<keyof AuthOptions["cookies"], "sessionToken">,
-      Omit<CookieOption, "options">
-    >
-  >
-
-  /**
-   * If a custom jwt `decode` method is set in `[...nextauth].ts`, the same method should be set here also.
-   *
-   * ---
-   * [Documentation](https://next-auth.js.org/configuration/nextjs#custom-jwt-decode-method)
-   */
-  jwt?: Partial<Pick<JWTOptions, "decode">>
-
-  callbacks?: {
-    /**
-     * Callback that receives the user's JWT payload
-     * and returns `true` to allow the user to continue.
-     *
-     * This is similar to the `signIn` callback in `NextAuthOptions`.
-     *
-     * If it returns `false`, the user is redirected to the sign-in page instead
-     *
-     * The default is to let the user continue if they have a valid JWT (basic authentication).
-     *
-     * How to restrict a page and all of it's subpages for admins-only:
-     * @example
-     *
-     * ```js
-     * // `middleware.js`
-     * import { withAuth } from "next-auth/middleware"
-     *
-     * export default withAuth({
-     *   callbacks: {
-     *     authorized: ({ token }) => token?.user.isAdmin
-     *   }
-     * })
-     *
-     * export const config = { matcher: ["/admin"] }
-     *
-     * ```
-     *
-     * ---
-     * [Documentation](https://next-auth.js.org/configuration/nextjs#middleware) | [`signIn` callback](configuration/callbacks#sign-in-callback)
-     */
-    authorized?: AuthorizedCallback
-  }
-
-  /**
-   * The same `secret` used in the `NextAuth` configuration.
-   * Defaults to the `NEXTAUTH_SECRET` environment variable.
-   */
-  secret?: string
-}
-
-// TODO: `NextMiddleware` should allow returning `void`
-// Simplify when https://github.com/vercel/next.js/pull/38625 is merged.
-type NextMiddlewareResult = ReturnType<NextMiddleware> | void // eslint-disable-line @typescript-eslint/no-invalid-void-type
-
-async function handleMiddleware(
-  req: NextRequest,
-  options: NextAuthMiddlewareOptions | undefined,
-  onSuccess?: (token: JWT | null) => Promise<NextMiddlewareResult>
-) {
-  const { pathname, search, origin, basePath } = req.nextUrl
-
-  const signInPage = options?.pages?.signIn ?? "/api/auth/signin"
-  const errorPage = options?.pages?.error ?? "/api/auth/error"
-  const authPath = parseUrl(process.env.NEXTAUTH_URL).path
-  const publicPaths = ["/_next", "/favicon.ico"]
-
-  // Avoid infinite redirects/invalid response
-  // on paths that never require authentication
-  if (
-    `${basePath}${pathname}`.startsWith(authPath) ||
-    [signInPage, errorPage].includes(pathname) ||
-    publicPaths.some((p) => pathname.startsWith(p))
-  ) {
-    return
-  }
-
-  const secret = options?.secret ?? process.env.NEXTAUTH_SECRET
-  if (!secret) {
-    console.error(
-      `[next-auth][error][NO_SECRET]`,
-      `\nhttps://next-auth.js.org/errors#no_secret`
-    )
-
-    const errorUrl = new URL(`${basePath}${errorPage}`, origin)
-    errorUrl.searchParams.append("error", "Configuration")
-
-    return NextResponse.redirect(errorUrl)
-  }
-
-  const token = await getToken({
-    req,
-    decode: options?.jwt?.decode,
-    cookieName: options?.cookies?.sessionToken?.name,
-    secret,
-  })
-
-  const isAuthorized =
-    (await options?.callbacks?.authorized?.({ req, token })) ?? !!token
-
-  // the user is authorized, let the middleware handle the rest
-  if (isAuthorized) return await onSuccess?.(token)
-
-  // the user is not logged in, redirect to the sign-in page
-  const signInUrl = new URL(`${basePath}${signInPage}`, origin)
-  signInUrl.searchParams.append(
-    "callbackUrl",
-    `${basePath}${pathname}${search}`
-  )
-  return NextResponse.redirect(signInUrl)
-}
-
-export interface NextRequestWithAuth extends NextRequest {
-  nextauth: { token: JWT | null }
-}
-
-export type NextMiddlewareWithAuth = (
-  request: NextRequestWithAuth,
-  event: NextFetchEvent
-) => NextMiddlewareResult | Promise<NextMiddlewareResult>
-
-export type WithAuthArgs =
-  | [NextRequestWithAuth]
-  | [NextRequestWithAuth, NextFetchEvent]
-  | [NextRequestWithAuth, NextAuthMiddlewareOptions]
-  | [NextMiddlewareWithAuth]
-  | [NextMiddlewareWithAuth, NextAuthMiddlewareOptions]
-  | [NextAuthMiddlewareOptions]
-  | []
-
-/**
- * Middleware that checks if the user is authenticated/authorized.
- * If if they aren't, they will be redirected to the login page.
- * Otherwise, continue.
- *
- * @example
- *
- * ```js
- * // `middleware.js`
- * export { default } from "next-auth/middleware"
- * ```
- *
- * ---
- * [Documentation](https://next-auth.js.org/configuration/nextjs#middleware)
- */
-export function withAuth(...args: WithAuthArgs) {
-  if (!args.length || args[0] instanceof Request) {
-    // @ts-expect-error
-    return handleMiddleware(...args)
-  }
-
-  if (typeof args[0] === "function") {
-    const middleware = args[0]
-    const options = args[1] as NextAuthMiddlewareOptions | undefined
-    return async (...args: Parameters<NextMiddlewareWithAuth>) =>
-      await handleMiddleware(args[0], options, async (token) => {
-        args[0].nextauth = { token }
-        return await middleware(...args)
-      })
-  }
-
-  const options = args[0]
-  return async (...args: Parameters<NextMiddleware>) =>
-    await handleMiddleware(args[0], options)
-}
-
-export default withAuth
diff --git a/node_modules/next-auth/src/next/utils.ts b/node_modules/next-auth/src/next/utils.ts
deleted file mode 100644
index fd833e2..0000000
--- a/node_modules/next-auth/src/next/utils.ts
+++ /dev/null
@@ -1,60 +0,0 @@
-import { serialize } from "cookie"
-import { Cookie } from "../core/lib/cookie"
-import { type ResponseInternal } from "../core"
-
-export function setCookie(res, cookie: Cookie) {
-  // Preserve any existing cookies that have already been set in the same session
-  let setCookieHeader = res.getHeader("Set-Cookie") ?? []
-  // If not an array (i.e. a string with a single cookie) convert it into an array
-  if (!Array.isArray(setCookieHeader)) {
-    setCookieHeader = [setCookieHeader]
-  }
-  const { name, value, options } = cookie
-  const cookieHeader = serialize(name, value, options)
-  setCookieHeader.push(cookieHeader)
-  res.setHeader("Set-Cookie", setCookieHeader)
-}
-
-export async function getBody(
-  req: Request
-): Promise<Record<string, any> | undefined> {
-  if (!("body" in req) || !req.body || req.method !== "POST") return
-
-  const contentType = req.headers.get("content-type")
-  if (contentType?.includes("application/json")) {
-    return await req.json()
-  } else if (contentType?.includes("application/x-www-form-urlencoded")) {
-    const params = new URLSearchParams(await req.text())
-    return Object.fromEntries(params)
-  }
-}
-
-export function toResponse(res: ResponseInternal): Response {
-  const headers = new Headers(
-    res.headers?.reduce((acc, { key, value }) => {
-      acc[key] = value
-      return acc
-    }, {})
-  )
-
-  res.cookies?.forEach((cookie) => {
-    const { name, value, options } = cookie
-    const cookieHeader = serialize(name, value, options)
-    if (headers.has("Set-Cookie")) headers.append("Set-Cookie", cookieHeader)
-    else headers.set("Set-Cookie", cookieHeader)
-  })
-
-  let body = res.body
-
-  if (headers.get("content-type") === "application/json")
-    body = JSON.stringify(res.body)
-  else if (headers.get("content-type") === "application/x-www-form-urlencoded")
-    body = new URLSearchParams(res.body).toString()
-
-  const status = res.redirect ? 302 : res.status ?? 200
-  const response = new Response(body, { headers, status })
-
-  if (res.redirect) response.headers.set("Location", res.redirect)
-
-  return response
-}
diff --git a/node_modules/next-auth/src/providers/42-school.ts b/node_modules/next-auth/src/providers/42-school.ts
deleted file mode 100644
index 2bd068b..0000000
--- a/node_modules/next-auth/src/providers/42-school.ts
+++ /dev/null
@@ -1,178 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface UserData {
-  id: number
-  email: string
-  login: string
-  first_name: string
-  last_name: string
-  usual_full_name: null | string
-  usual_first_name: null | string
-  url: string
-  phone: "hidden" | string | null
-  displayname: string
-  image_url: string | null
-  "staff?": boolean
-  correction_point: number
-  pool_month: string | null
-  pool_year: string | null
-  location: string | null
-  wallet: number
-  anonymize_date: string
-  created_at: string
-  updated_at: string | null
-  alumni: boolean
-  "is_launched?": boolean
-}
-
-export interface CursusUser {
-  grade: string | null
-  level: number
-  skills: Array<{ id: number; name: string; level: number }>
-  blackholed_at: string | null
-  id: number
-  begin_at: string | null
-  end_at: string | null
-  cursus_id: number
-  has_coalition: boolean
-  created_at: string
-  updated_at: string | null
-  user: UserData
-  cursus: { id: number; created_at: string; name: string; slug: string }
-}
-
-export interface ProjectUser {
-  id: number
-  occurrence: number
-  final_mark: number | null
-  status: "in_progress" | "finished"
-  "validated?": boolean | null
-  current_team_id: number
-  project: {
-    id: number
-    name: string
-    slug: string
-    parent_id: number | null
-  }
-  cursus_ids: number[]
-  marked_at: string | null
-  marked: boolean
-  retriable_at: string | null
-  created_at: string
-  updated_at: string | null
-}
-
-export interface Achievement {
-  id: number
-  name: string
-  description: string
-  tier: "none" | "easy" | "medium" | "hard" | "challenge"
-  kind: "scolarity" | "project" | "pedagogy" | "scolarity"
-  visible: boolean
-  image: string | null
-  nbr_of_success: number | null
-  users_url: string
-}
-
-export interface LanguagesUser {
-  id: number
-  language_id: number
-  user_id: number
-  position: number
-  created_at: string
-}
-
-export interface TitlesUser {
-  id: number
-  user_id: number
-  title_id: number
-  selected: boolean
-  created_at: string
-  updated_at: string | null
-}
-
-export interface ExpertisesUser {
-  id: number
-  expertise_id: number
-  interested: boolean
-  value: number
-  contact_me: boolean
-  created_at: string
-  user_id: number
-}
-
-export interface Campus {
-  id: number
-  name: string
-  time_zone: string
-  language: {
-    id: number
-    name: string
-    identifier: string
-    created_at: string
-    updated_at: string | null
-  }
-  users_count: number
-  vogsphere_id: number
-  country: string
-  address: string
-  zip: string
-  city: string
-  website: string
-  facebook: string
-  twitter: string
-  active: boolean
-  email_extension: string
-  default_hidden_phone: boolean
-}
-
-export interface CampusUser {
-  id: number
-  user_id: number
-  campus_id: number
-  is_primary: boolean
-  created_at: string
-  updated_at: string | null
-}
-export interface FortyTwoProfile extends UserData, Record<string, any> {
-  groups: Array<{ id: string; name: string }>
-  cursus_users: CursusUser[]
-  projects_users: ProjectUser[]
-  languages_users: LanguagesUser[]
-  achievements: Achievement[]
-  titles: Array<{ id: string; name: string }>
-  titles_users: TitlesUser[]
-  partnerships: any[]
-  patroned: any[]
-  patroning: any[]
-  expertises_users: ExpertisesUser[]
-  roles: Array<{ id: string; name: string }>
-  campus: Campus[]
-  campus_users: CampusUser[]
-  user: any | null
-}
-
-export default function FortyTwo<P extends FortyTwoProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "42-school",
-    name: "42 School",
-    type: "oauth",
-    authorization: {
-      url: "https://api.intra.42.fr/oauth/authorize",
-      params: { scope: "public" },
-    },
-    token: "https://api.intra.42.fr/oauth/token",
-    userinfo: "https://api.intra.42.fr/v2/me",
-    profile(profile) {
-      return {
-        id: profile.id.toString(),
-        name: profile.usual_full_name,
-        email: profile.email,
-        image: profile.image_url,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/apple.ts b/node_modules/next-auth/src/providers/apple.ts
deleted file mode 100644
index 5ab1688..0000000
--- a/node_modules/next-auth/src/providers/apple.ts
+++ /dev/null
@@ -1,130 +0,0 @@
-import { OAuthConfig, OAuthUserConfig } from "."
-
-/**
- * See more at:
- * [Retrieve the User's Information from Apple ID Servers
-](https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_rest_api/authenticating_users_with_sign_in_with_apple#3383773)
- */
-export interface AppleProfile extends Record<string, any> {
-  /**
-   * The issuer registered claim identifies the principal that issued the identity token.
-   * Since Apple generates the token, the value is `https://appleid.apple.com`.
-   */
-  iss: "https://appleid.apple.com"
-  /**
-   * The audience registered claim identifies the recipient for which the identity token is intended.
-   * Since the token is meant for your application, the value is the `client_id` from your developer account.
-   */
-  aud: string
-  /**
-   * The issued at registered claim indicates the time at which Apple issued the identity token,
-   * in terms of the number of seconds since Epoch, in UTC.
-   */
-  iat: number
-
-  /**
-   * The expiration time registered identifies the time on or after which the identity token expires,
-   * in terms of number of seconds since Epoch, in UTC.
-   * The value must be greater than the current date/time when verifying the token.
-   */
-  exp: number
-  /**
-   * The subject registered claim identifies the principal that's the subject of the identity token.
-   * Since this token is meant for your application, the value is the unique identifier for the user.
-   */
-  sub: string
-  /**
-   * A String value used to associate a client session and the identity token.
-   * This value mitigates replay attacks and is present only if passed during the authorization request.
-   */
-  nonce: string
-
-  /**
-   * A Boolean value that indicates whether the transaction is on a nonce-supported platform.
-   * If you sent a nonce in the authorization request but don't see the nonce claim in the identity token,
-   * check this claim to determine how to proceed.
-   * If this claim returns true, you should treat nonce as mandatory and fail the transaction;
-   * otherwise, you can proceed treating the nonce as options.
-   */
-  nonce_supported: boolean
-
-  /**
-   * A String value representing the user's email address.
-   * The email address is either the user's real email address or the proxy address,
-   * depending on their status private email relay service.
-   */
-  email: string
-
-  /**
-   * A String or Boolean value that indicates whether the service has verified the email.
-   * The value of this claim is always true, because the servers only return verified email addresses.
-   * The value can either be a String (`"true"`) or a Boolean (`true`).
-   */
-  email_verified: "true" | true
-
-  /**
-   * A String or Boolean value that indicates whether the email shared by the user is the proxy address.
-   * The value can either be a String (`"true"` or `"false"`) or a Boolean (`true` or `false`).
-   */
-  is_private_email: boolean | "true" | "false"
-
-  /**
-   * An Integer value that indicates whether the user appears to be a real person.
-   * Use the value of this claim to mitigate fraud. The possible values are: 0 (or Unsupported), 1 (or Unknown), 2 (or LikelyReal).
-   * For more information, see [`ASUserDetectionStatus`](https://developer.apple.com/documentation/authenticationservices/asuserdetectionstatus).
-   * This claim is present only on iOS 14 and later, macOS 11 and later, watchOS 7 and later, tvOS 14 and later;
-   * the claim isn't present or supported for web-based apps.
-   */
-  real_user_status: 0 | 1 | 2
-
-  /**
-   * A String value representing the transfer identifier used to migrate users to your team.
-   * This claim is present only during the 60-day transfer period after an you transfer an app.
-   * For more information, see [Bringing New Apps and Users into Your Team](https://developer.apple.com/documentation/sign_in_with_apple/bringing_new_apps_and_users_into_your_team).
-   */
-  transfer_sub: string
-  at_hash: string
-  auth_time: number
-}
-
-export default function Apple<P extends AppleProfile>(
-  options: Omit<OAuthUserConfig<P>, "clientSecret"> & {
-    /**
-     * Apple requires the client secret to be a JWT. You can generate one using the following script:
-     * https://bal.so/apple-gen-secret
-     * 
-     * Read more: [Creating the Client Secret
-](https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens#3262048)
-     */
-    clientSecret: string
-  }
-): OAuthConfig<P> {
-  return {
-    id: "apple",
-    name: "Apple",
-    type: "oauth",
-    wellKnown: "https://appleid.apple.com/.well-known/openid-configuration",
-    authorization: {
-      params: { scope: "name email", response_mode: "form_post" },
-    },
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name,
-        email: profile.email,
-        image: null,
-      }
-    },
-    checks: ["pkce"],
-    style: {
-      logo: "/apple.svg",
-      logoDark: "/apple-dark.svg",
-      bg: "#fff",
-      text: "#000",
-      bgDark: "#000",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/atlassian.ts b/node_modules/next-auth/src/providers/atlassian.ts
deleted file mode 100644
index 1b18036..0000000
--- a/node_modules/next-auth/src/providers/atlassian.ts
+++ /dev/null
@@ -1,44 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-interface AtlassianProfile extends Record<string, any> {
-  account_id: string
-  name: string
-  email: string
-  picture: string
-}
-
-export default function Atlassian<P extends AtlassianProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "atlassian",
-    name: "Atlassian",
-    type: "oauth",
-    authorization: {
-      url: "https://auth.atlassian.com/authorize",
-      params: {
-        audience: "api.atlassian.com",
-        prompt: "consent",
-      },
-    },
-    token: "https://auth.atlassian.com/oauth/token",
-    userinfo: "https://api.atlassian.com/me",
-    profile(profile) {
-      return {
-        id: profile.account_id,
-        name: profile.name,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    style: {
-      logo: "/atlassian.svg",
-      logoDark: "/atlassian-dark.svg",
-      bg: "#0052cc",
-      text: "#fff",
-      bgDark: "#fff",
-      textDark: "#0052cc",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/auth0.ts b/node_modules/next-auth/src/providers/auth0.ts
deleted file mode 100644
index 8ad5ead..0000000
--- a/node_modules/next-auth/src/providers/auth0.ts
+++ /dev/null
@@ -1,39 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface Auth0Profile extends Record<string, any> {
-  sub: string
-  nickname: string
-  email: string
-  picture: string
-}
-
-export default function Auth0<P extends Auth0Profile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "auth0",
-    name: "Auth0",
-    wellKnown: `${options.issuer}/.well-known/openid-configuration`,
-    type: "oauth",
-    authorization: { params: { scope: "openid email profile" } },
-    checks: ["pkce", "state"],
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.nickname,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    style: {
-      logo: "/auth0.svg",
-      logoDark: "/auth0-dark.svg",
-      bg: "#fff",
-      text: "#EB5424",
-      bgDark: "#EB5424",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/authentik.ts b/node_modules/next-auth/src/providers/authentik.ts
deleted file mode 100644
index cacab1b..0000000
--- a/node_modules/next-auth/src/providers/authentik.ts
+++ /dev/null
@@ -1,44 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface AuthentikProfile extends Record<string, any> {
-  iss: string
-  sub: string
-  aud: string
-  exp: number
-  iat: number
-  auth_time: number
-  acr: string
-  c_hash: string
-  nonce: string
-  at_hash: string
-  email: string
-  email_verified: boolean
-  name: string
-  given_name: string
-  family_name: string
-  preferred_username: string
-  nickname: string
-  groups: string[]
-}
-
-export default function Authentik<P extends AuthentikProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "authentik",
-    name: "Authentik",
-    wellKnown: `${options.issuer}/.well-known/openid-configuration`,
-    type: "oauth",
-    authorization: { params: { scope: "openid email profile" } },
-    checks: ["pkce", "state"],
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name ?? profile.preferred_username,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/azure-ad-b2c.ts b/node_modules/next-auth/src/providers/azure-ad-b2c.ts
deleted file mode 100644
index fd32be8..0000000
--- a/node_modules/next-auth/src/providers/azure-ad-b2c.ts
+++ /dev/null
@@ -1,55 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface AzureB2CProfile extends Record<string, any> {
-  exp: number
-  nbf: number
-  ver: string
-  iss: string
-  sub: string
-  aud: string
-  iat: number
-  auth_time: number
-  oid: string
-  country: string
-  name: string
-  postalCode: string
-  emails: string[]
-  tfp: string
-}
-
-export default function AzureADB2C<P extends AzureB2CProfile>(
-  options: OAuthUserConfig<P> & {
-    primaryUserFlow?: string
-    tenantId?: string
-  }
-): OAuthConfig<P> {
-  const { tenantId, primaryUserFlow } = options
-  const issuer =
-    options.issuer ??
-    `https://${tenantId}.b2clogin.com/${tenantId}.onmicrosoft.com/${primaryUserFlow}/v2.0`
-  return {
-    id: "azure-ad-b2c",
-    name: "Azure Active Directory B2C",
-    type: "oauth",
-    wellKnown: `${issuer}/.well-known/openid-configuration`,
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name,
-        email: profile.emails[0],
-        // TODO: Find out how to retrieve the profile picture
-        image: null,
-      }
-    },
-    style: {
-      logo: "/azure.svg",
-      logoDark: "/azure-dark.svg",
-      bg: "#fff",
-      text: "#0072c6",
-      bgDark: "#0072c6",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/azure-ad.ts b/node_modules/next-auth/src/providers/azure-ad.ts
deleted file mode 100644
index f12b07c..0000000
--- a/node_modules/next-auth/src/providers/azure-ad.ts
+++ /dev/null
@@ -1,69 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface AzureADProfile extends Record<string, any> {
-  sub: string
-  nickname: string
-  email: string
-  picture: string
-}
-
-export default function AzureAD<P extends AzureADProfile>(
-  options: OAuthUserConfig<P> & {
-    /**
-     * https://docs.microsoft.com/en-us/graph/api/profilephoto-get?view=graph-rest-1.0#examples
-     * @default 48
-     */
-    profilePhotoSize?: 48 | 64 | 96 | 120 | 240 | 360 | 432 | 504 | 648
-    /** @default "common" */
-    tenantId?: string
-  }
-): OAuthConfig<P> {
-  const tenant = options.tenantId ?? "common"
-  const profilePhotoSize = options.profilePhotoSize ?? 48
-
-  return {
-    id: "azure-ad",
-    name: "Azure Active Directory",
-    type: "oauth",
-    wellKnown: `https://login.microsoftonline.com/${tenant}/v2.0/.well-known/openid-configuration?appid=${options.clientId}`,
-    authorization: {
-      params: {
-        scope: "openid profile email",
-      },
-    },
-    async profile(profile, tokens) {
-      // https://docs.microsoft.com/en-us/graph/api/profilephoto-get?view=graph-rest-1.0#examples
-      const response = await fetch(
-        `https://graph.microsoft.com/v1.0/me/photos/${profilePhotoSize}x${profilePhotoSize}/$value`,
-        { headers: { Authorization: `Bearer ${tokens.access_token}` } }
-      )
-
-      // Confirm that profile photo was returned
-      let image
-      // TODO: Do this without Buffer
-      if (response.ok && typeof Buffer !== "undefined") {
-        try {
-          const pictureBuffer = await response.arrayBuffer()
-          const pictureBase64 = Buffer.from(pictureBuffer).toString("base64")
-          image = `data:image/jpeg;base64, ${pictureBase64}`
-        } catch {}
-      }
-
-      return {
-        id: profile.sub,
-        name: profile.name,
-        email: profile.email,
-        image: image ?? null,
-      }
-    },
-    style: {
-      logo: "/azure.svg",
-      logoDark: "/azure-dark.svg",
-      bg: "#fff",
-      text: "#0072c6",
-      bgDark: "#0072c6",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/battlenet.ts b/node_modules/next-auth/src/providers/battlenet.ts
deleted file mode 100644
index c921d5d..0000000
--- a/node_modules/next-auth/src/providers/battlenet.ts
+++ /dev/null
@@ -1,39 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface BattleNetProfile extends Record<string, any> {
-  sub: string
-  battle_tag: string
-}
-
-/** See the [available regions](https://develop.battle.net/documentation/guides/regionality-and-apis) */
-export type BattleNetIssuer =
-  | "https://www.battlenet.com.cn/oauth"
-  | `https://${"us" | "eu" | "kr" | "tw"}.battle.net/oauth`
-
-export default function BattleNet<P extends BattleNetProfile>(
-  options: OAuthUserConfig<P> & { issuer: BattleNetIssuer }
-): OAuthConfig<P> {
-  return {
-    id: "battlenet",
-    name: "Battle.net",
-    type: "oauth",
-    wellKnown: `${options.issuer}/.well-known/openid-configuration`,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.battle_tag,
-        email: null,
-        image: null,
-      }
-    },
-    style: {
-      logo: "/battlenet.svg",
-      logoDark: "/battlenet-dark.svg",
-      bg: "#fff",
-      text: "#148eff",
-      bgDark: "#148eff",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/box.js b/node_modules/next-auth/src/providers/box.js
deleted file mode 100644
index 7d7e854..0000000
--- a/node_modules/next-auth/src/providers/box.js
+++ /dev/null
@@ -1,28 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function Box(options) {
-  return {
-    id: "box",
-    name: "Box",
-    type: "oauth",
-    authorization: "https://account.box.com/api/oauth2/authorize",
-    token: "https://api.box.com/oauth2/token",
-    userinfo: "https://api.box.com/2.0/users/me",
-    profile(profile) {
-      return {
-        id: profile.id,
-        name: profile.name,
-        email: profile.login,
-        image: profile.avatar_url,
-      }
-    },
-    style: {
-      logo: "/box.svg",
-      logoDark: "/box-dark.svg",
-      bg: "#fff",
-      text: "#0075C9",
-      bgDark: "#0075C9",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/boxyhq-saml.ts b/node_modules/next-auth/src/providers/boxyhq-saml.ts
deleted file mode 100644
index a00e15d..0000000
--- a/node_modules/next-auth/src/providers/boxyhq-saml.ts
+++ /dev/null
@@ -1,37 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface BoxyHQSAMLProfile extends Record<string, any> {
-  id: string
-  email: string
-  firstName?: string
-  lastName?: string
-}
-
-export default function SAMLJackson<P extends BoxyHQSAMLProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "boxyhq-saml",
-    name: "BoxyHQ SAML",
-    type: "oauth",
-    version: "2.0",
-    checks: ["pkce", "state"],
-    authorization: {
-      url: `${options.issuer}/api/oauth/authorize`,
-      params: {
-        provider: "saml",
-      },
-    },
-    token: `${options.issuer}/api/oauth/token`,
-    userinfo: `${options.issuer}/api/oauth/userinfo`,
-    profile(profile) {
-      return {
-        id: profile.id,
-        email: profile.email,
-        name: [profile.firstName, profile.lastName].filter(Boolean).join(" "),
-        image: null,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/bungie.js b/node_modules/next-auth/src/providers/bungie.js
deleted file mode 100644
index dc6c998..0000000
--- a/node_modules/next-auth/src/providers/bungie.js
+++ /dev/null
@@ -1,25 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function Bungie(options) {
-  return {
-    id: "bungie",
-    name: "Bungie",
-    type: "oauth",
-    authorization: "https://www.bungie.net/en/OAuth/Authorize?reauth=true",
-    token: "https://www.bungie.net/platform/app/oauth/token/",
-    userinfo:
-      "https://www.bungie.net/platform/User/GetBungieAccount/{membershipId}/254/",
-    profile(profile) {
-      const { bungieNetUser: user } = profile.Response
-
-      return {
-        id: user.membershipId,
-        name: user.displayName,
-        email: null,
-        image: `https://www.bungie.net${
-          user.profilePicturePath.startsWith("/") ? "" : "/"
-        }${user.profilePicturePath}`,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/cognito.ts b/node_modules/next-auth/src/providers/cognito.ts
deleted file mode 100644
index 26b9223..0000000
--- a/node_modules/next-auth/src/providers/cognito.ts
+++ /dev/null
@@ -1,37 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface CognitoProfile extends Record<string, any> {
-  sub: string
-  name: string
-  email: string
-  picture: string
-}
-
-export default function Cognito<P extends CognitoProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "cognito",
-    name: "Cognito",
-    type: "oauth",
-    wellKnown: `${options.issuer}/.well-known/openid-configuration`,
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    style: {
-      logo: "/cognito.svg",
-      logoDark: "/cognito.svg",
-      bg: "#fff",
-      text: "#C17B9E",
-      bgDark: "#fff",
-      textDark: "#C17B9E",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/coinbase.js b/node_modules/next-auth/src/providers/coinbase.js
deleted file mode 100644
index 1a2cb1d..0000000
--- a/node_modules/next-auth/src/providers/coinbase.js
+++ /dev/null
@@ -1,21 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function Coinbase(options) {
-  return {
-    id: "coinbase",
-    name: "Coinbase",
-    type: "oauth",
-    authorization:
-      "https://www.coinbase.com/oauth/authorize?scope=wallet:user:email+wallet:user:read",
-    token: "https://api.coinbase.com/oauth/token",
-    userinfo: "https://api.coinbase.com/v2/user",
-    profile(profile) {
-      return {
-        id: profile.data.id,
-        name: profile.data.name,
-        email: profile.data.email,
-        image: profile.data.avatar_url,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/credentials.ts b/node_modules/next-auth/src/providers/credentials.ts
deleted file mode 100644
index bd29360..0000000
--- a/node_modules/next-auth/src/providers/credentials.ts
+++ /dev/null
@@ -1,45 +0,0 @@
-import type { RequestInternal } from "../core"
-import type { CommonProviderOptions } from "."
-import type { User, Awaitable } from ".."
-
-export interface CredentialInput {
-  label?: string
-  type?: string
-  value?: string
-  placeholder?: string
-}
-
-export interface CredentialsConfig<
-  C extends Record<string, CredentialInput> = Record<string, CredentialInput>
-> extends CommonProviderOptions {
-  type: "credentials"
-  credentials: C
-  authorize: (
-    credentials: Record<keyof C, string> | undefined,
-    req: Pick<RequestInternal, "body" | "query" | "headers" | "method">
-  ) => Awaitable<User | null>
-}
-
-export type CredentialsProvider = <C extends Record<string, CredentialInput>>(
-  options: Partial<CredentialsConfig<C>>
-) => CredentialsConfig<C>
-
-export type CredentialsProviderType = "Credentials"
-
-type UserCredentialsConfig<C extends Record<string, CredentialInput>> = Partial<
-  Omit<CredentialsConfig<C>, "options">
-> &
-  Pick<CredentialsConfig<C>, "authorize" | "credentials">
-
-export default function Credentials<
-  C extends Record<string, CredentialInput> = Record<string, CredentialInput>
->(options: UserCredentialsConfig<C>): CredentialsConfig<C> {
-  return {
-    id: "credentials",
-    name: "Credentials",
-    type: "credentials",
-    credentials: {} as any,
-    authorize: () => null,
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/discord.ts b/node_modules/next-auth/src/providers/discord.ts
deleted file mode 100644
index f9f2801..0000000
--- a/node_modules/next-auth/src/providers/discord.ts
+++ /dev/null
@@ -1,57 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface DiscordProfile extends Record<string, any> {
-  accent_color: number
-  avatar: string
-  banner: string
-  banner_color: string
-  discriminator: string
-  email: string
-  flags: number
-  id: string
-  image_url: string
-  locale: string
-  mfa_enabled: boolean
-  premium_type: number
-  public_flags: number
-  username: string
-  verified: boolean
-}
-
-export default function Discord<P extends DiscordProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "discord",
-    name: "Discord",
-    type: "oauth",
-    authorization:
-      "https://discord.com/api/oauth2/authorize?scope=identify+email",
-    token: "https://discord.com/api/oauth2/token",
-    userinfo: "https://discord.com/api/users/@me",
-    profile(profile) {
-      if (profile.avatar === null) {
-        const defaultAvatarNumber = parseInt(profile.discriminator) % 5
-        profile.image_url = `https://cdn.discordapp.com/embed/avatars/${defaultAvatarNumber}.png`
-      } else {
-        const format = profile.avatar.startsWith("a_") ? "gif" : "png"
-        profile.image_url = `https://cdn.discordapp.com/avatars/${profile.id}/${profile.avatar}.${format}`
-      }
-      return {
-        id: profile.id,
-        name: profile.username,
-        email: profile.email,
-        image: profile.image_url,
-      }
-    },
-    style: {
-      logo: "/discord.svg",
-      logoDark: "/discord-dark.svg",
-      bg: "#fff",
-      text: "#7289DA",
-      bgDark: "#7289DA",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/dropbox.js b/node_modules/next-auth/src/providers/dropbox.js
deleted file mode 100644
index c1988a6..0000000
--- a/node_modules/next-auth/src/providers/dropbox.js
+++ /dev/null
@@ -1,51 +0,0 @@
-/**
- * @param {import("../core").Provider} options
- * @example
- *
- * ```js
- * // pages/api/auth/[...nextauth].js
- * import Providers from `next-auth/providers`
- * ...
- * providers: [
- *   Providers.Dropbox({
- *     clientId: process.env.DROPBOX_CLIENT_ID,
- *     clientSecret: process.env.DROPBOX_CLIENT_SECRET
- *   })
- * ]
- * ...
- *
- * // pages/index
- * import { signIn } from "next-auth/react"
- * ...
- * <button onClick={() => signIn("dropbox")}>
- *   Sign in
- * </button>
- * ...
- * ```
- * *Resources:*
- * - [NextAuth.js Documentation](https://next-auth.js.org/providers/dropbox)
- * - [Dropbox Documentation](https://developers.dropbox.com/oauth-guide)
- * - [Configuration](https://www.dropbox.com/developers/apps)
- */
-/** @type {import(".").OAuthProvider} */
-export default function Dropbox(options) {
-  return {
-    id: "dropbox",
-    name: "Dropbox",
-    type: "oauth",
-    authorization:
-      "https://www.dropbox.com/oauth2/authorize?token_access_type=offline&scope=account_info.read",
-    token: "https://api.dropboxapi.com/oauth2/token",
-    userinfo: "https://api.dropboxapi.com/2/users/get_current_account",
-    profile(profile) {
-      return {
-        id: profile.account_id,
-        name: profile.name.display_name,
-        email: profile.email,
-        image: profile.profile_photo_url,
-      }
-    },
-    checks: ["state", "pkce"],
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/duende-identity-server6.ts b/node_modules/next-auth/src/providers/duende-identity-server6.ts
deleted file mode 100644
index fd9f36f..0000000
--- a/node_modules/next-auth/src/providers/duende-identity-server6.ts
+++ /dev/null
@@ -1,31 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "./oauth"
-
-export interface DuendeISUser extends Record<string, any> {
-  email: string
-  id: string
-  name: string
-  verified: boolean
-}
-
-export default function DuendeIdentityServer6<P extends DuendeISUser>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "duende-identityserver6",
-    name: "DuendeIdentityServer6",
-    type: "oauth",
-    wellKnown: `${options.issuer}/.well-known/openid-configuration`,
-    authorization: { params: { scope: "openid profile email" } },
-    checks: ["pkce", "state"],
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name,
-        email: profile.email,
-        image: null,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/email.ts b/node_modules/next-auth/src/providers/email.ts
deleted file mode 100644
index b72cc84..0000000
--- a/node_modules/next-auth/src/providers/email.ts
+++ /dev/null
@@ -1,167 +0,0 @@
-import { createTransport } from "nodemailer"
-
-import type { CommonProviderOptions } from "."
-import type { Options as SMTPTransportOptions } from "nodemailer/lib/smtp-transport"
-import type { Awaitable } from ".."
-import type { Theme } from "../core/types"
-
-export interface SendVerificationRequestParams {
-  identifier: string
-  url: string
-  expires: Date
-  provider: EmailConfig
-  token: string
-  theme: Theme
-}
-
-export interface EmailConfig extends CommonProviderOptions {
-  type: "email"
-  // TODO: Make use of https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html
-  server: string | SMTPTransportOptions
-  /** @default "NextAuth <no-reply@example.com>" */
-  from?: string
-  /**
-   * How long until the e-mail can be used to log the user in,
-   * in seconds. Defaults to 1 day
-   * @default 86400
-   */
-  maxAge?: number
-  /** [Documentation](https://next-auth.js.org/providers/email#customizing-emails) */
-  sendVerificationRequest: (
-    params: SendVerificationRequestParams
-  ) => Awaitable<void>
-  /**
-   * By default, we are generating a random verification token.
-   * You can make it predictable or modify it as you like with this method.
-   * @example
-   * ```js
-   *  Providers.Email({
-   *    async generateVerificationToken() {
-   *      return "ABC123"
-   *    }
-   *  })
-   * ```
-   * [Documentation](https://next-auth.js.org/providers/email#customizing-the-verification-token)
-   */
-  generateVerificationToken?: () => Awaitable<string>
-  /** If defined, it is used to hash the verification token when saving to the database . */
-  secret?: string
-  /**
-   * Normalizes the user input before sending the verification request.
-   *
-   * ⚠️ Always make sure this method returns a single email address.
-   *
-   * @note Technically, the part of the email address local mailbox element
-   * (everything before the `@` symbol) should be treated as 'case sensitive'
-   * according to RFC 2821, but in practice this causes more problems than
-   * it solves, e.g.: when looking up users by e-mail from databases.
-   * By default, we treat email addresses as all lower case,
-   * but you can override this function to change this behavior.
-   *
-   * [Documentation](https://next-auth.js.org/providers/email#normalizing-the-e-mail-address) | [RFC 2821](https://tools.ietf.org/html/rfc2821) | [Email syntax](https://en.wikipedia.org/wiki/Email_address#Syntax)
-   */
-  normalizeIdentifier?: (identifier: string) => string
-  options: EmailUserConfig
-}
-
-export type EmailUserConfig = Partial<Omit<EmailConfig, "options">>
-
-export type EmailProvider = (options: EmailUserConfig) => EmailConfig
-
-// TODO: Rename to Token provider
-// when started working on https://github.com/nextauthjs/next-auth/discussions/1465
-export type EmailProviderType = "Email"
-
-export default function Email(options: EmailUserConfig): EmailConfig {
-  return {
-    id: "email",
-    type: "email",
-    name: "Email",
-    // Server can be an SMTP connection string or a nodemailer config object
-    server: { host: "localhost", port: 25, auth: { user: "", pass: "" } },
-    from: "NextAuth <no-reply@example.com>",
-    maxAge: 24 * 60 * 60,
-    async sendVerificationRequest(params) {
-      const { identifier, url, provider, theme } = params
-      const { host } = new URL(url)
-      const transport = createTransport(provider.server)
-      const result = await transport.sendMail({
-        to: identifier,
-        from: provider.from,
-        subject: `Sign in to ${host}`,
-        text: text({ url, host }),
-        html: html({ url, host, theme }),
-      })
-      const failed = result.rejected.concat(result.pending).filter(Boolean)
-      if (failed.length) {
-        throw new Error(`Email (${failed.join(", ")}) could not be sent`)
-      }
-    },
-    options,
-  }
-}
-
-/**
- * Email HTML body
- * Insert invisible space into domains from being turned into a hyperlink by email
- * clients like Outlook and Apple mail, as this is confusing because it seems
- * like they are supposed to click on it to sign in.
- *
- * @note We don't add the email address to avoid needing to escape it, if you do, remember to sanitize it!
- */
-function html(params: { url: string; host: string; theme: Theme }) {
-  const { url, host, theme } = params
-
-  const escapedHost = host.replace(/\./g, "&#8203;.")
-
-  // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
-  const brandColor = theme.brandColor || "#346df1"
-  // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
-  const buttonText = theme.buttonText || "#fff"
-
-  const color = {
-    background: "#f9f9f9",
-    text: "#444",
-    mainBackground: "#fff",
-    buttonBackground: brandColor,
-    buttonBorder: brandColor,
-    buttonText,
-  }
-
-  return `
-<body style="background: ${color.background};">
-  <table width="100%" border="0" cellspacing="20" cellpadding="0"
-    style="background: ${color.mainBackground}; max-width: 600px; margin: auto; border-radius: 10px;">
-    <tr>
-      <td align="center"
-        style="padding: 10px 0px; font-size: 22px; font-family: Helvetica, Arial, sans-serif; color: ${color.text};">
-        Sign in to <strong>${escapedHost}</strong>
-      </td>
-    </tr>
-    <tr>
-      <td align="center" style="padding: 20px 0;">
-        <table border="0" cellspacing="0" cellpadding="0">
-          <tr>
-            <td align="center" style="border-radius: 5px;" bgcolor="${color.buttonBackground}"><a href="${url}"
-                target="_blank"
-                style="font-size: 18px; font-family: Helvetica, Arial, sans-serif; color: ${color.buttonText}; text-decoration: none; border-radius: 5px; padding: 10px 20px; border: 1px solid ${color.buttonBorder}; display: inline-block; font-weight: bold;">Sign
-                in</a></td>
-          </tr>
-        </table>
-      </td>
-    </tr>
-    <tr>
-      <td align="center"
-        style="padding: 0px 0px 10px 0px; font-size: 16px; line-height: 22px; font-family: Helvetica, Arial, sans-serif; color: ${color.text};">
-        If you did not request this email you can safely ignore it.
-      </td>
-    </tr>
-  </table>
-</body>
-`
-}
-
-/** Email Text body (fallback for email clients that don't render HTML, e.g. feature phones) */
-function text({ url, host }: { url: string; host: string }) {
-  return `Sign in to ${host}\n${url}\n\n`
-}
diff --git a/node_modules/next-auth/src/providers/eveonline.ts b/node_modules/next-auth/src/providers/eveonline.ts
deleted file mode 100644
index c75bc9e..0000000
--- a/node_modules/next-auth/src/providers/eveonline.ts
+++ /dev/null
@@ -1,33 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface EVEOnlineProfile extends Record<string, any> {
-  CharacterID: number
-  CharacterName: string
-  ExpiresOn: string
-  Scopes: string
-  TokenType: string
-  CharacterOwnerHash: string
-  IntellectualProperty: string
-}
-
-export default function EVEOnline<P extends EVEOnlineProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "eveonline",
-    name: "EVE Online",
-    type: "oauth",
-    authorization: "https://login.eveonline.com/v2/oauth/authorize?scope=publicData",
-    token: "https://login.eveonline.com/v2/oauth/token",
-    userinfo: "https://login.eveonline.com/oauth/verify",
-    profile(profile) {
-      return {
-        id: String(profile.CharacterID),
-        name: profile.CharacterName,
-        email: null,
-        image: `https://image.eveonline.com/Character/${profile.CharacterID}_128.jpg`,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/facebook.ts b/node_modules/next-auth/src/providers/facebook.ts
deleted file mode 100644
index a337ecd..0000000
--- a/node_modules/next-auth/src/providers/facebook.ts
+++ /dev/null
@@ -1,54 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-interface FacebookPictureData {
-  url: string
-}
-
-interface FacebookPicture {
-  data: FacebookPictureData
-}
-export interface FacebookProfile extends Record<string, any> {
-  id: string
-  picture: FacebookPicture
-}
-
-export default function Facebook<P extends FacebookProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "facebook",
-    name: "Facebook",
-    type: "oauth",
-    authorization: "https://www.facebook.com/v11.0/dialog/oauth?scope=email",
-    token: "https://graph.facebook.com/oauth/access_token",
-    userinfo: {
-      url: "https://graph.facebook.com/me",
-      // https://developers.facebook.com/docs/graph-api/reference/user/#fields
-      params: { fields: "id,name,email,picture" },
-      async request({ tokens, client, provider }) {
-        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-        return await client.userinfo(tokens.access_token!, {
-          // @ts-expect-error
-          params: provider.userinfo?.params,
-        })
-      },
-    },
-    profile(profile: P) {
-      return {
-        id: profile.id,
-        name: profile.name,
-        email: profile.email,
-        image: profile.picture.data.url,
-      }
-    },
-    style: {
-      logo: "/facebook.svg",
-      logoDark: "/facebook-dark.svg",
-      bg: "#fff",
-      text: "#006aff",
-      bgDark: "#006aff",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/faceit.js b/node_modules/next-auth/src/providers/faceit.js
deleted file mode 100644
index 503d282..0000000
--- a/node_modules/next-auth/src/providers/faceit.js
+++ /dev/null
@@ -1,25 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function FACEIT(options) {
-  return {
-    id: "faceit",
-    name: "FACEIT",
-    type: "oauth",
-    authorization: "https://accounts.faceit.com/accounts?redirect_popup=true",
-    headers: {
-      Authorization: `Basic ${Buffer.from(
-        `${options.clientId}:${options.clientSecret}`
-      ).toString("base64")}`,
-    },
-    token: "https://api.faceit.com/auth/v1/oauth/token",
-    userinfo: "https://api.faceit.com/auth/v1/resources/userinfo",
-    profile(profile) {
-      return {
-        id: profile.guid,
-        name: profile.name,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/foursquare.js b/node_modules/next-auth/src/providers/foursquare.js
deleted file mode 100644
index d5a2068..0000000
--- a/node_modules/next-auth/src/providers/foursquare.js
+++ /dev/null
@@ -1,63 +0,0 @@
-import { get } from "https"
-import { once } from "events"
-
-/** @type {import("src/providers").OAuthProvider} */
-/** @type {import(".").OAuthProvider} */
-export default function Foursquare(options) {
-  const { apiVersion = "20210801" } = options
-  return {
-    id: "foursquare",
-    name: "Foursquare",
-    type: "oauth",
-    authorization: "https://foursquare.com/oauth2/authenticate",
-    token: "https://foursquare.com/oauth2/access_token",
-    userinfo: {
-      async request({ tokens }) {
-        const url = new URL("https://api.foursquare.com/v2/users/self")
-        url.searchParams.append("v", apiVersion)
-        url.searchParams.append("oauth_token", tokens.access_token)
-
-        const req = get(url, { timeout: 3500 })
-        const [response] = await Promise.race([
-          once(req, "response"),
-          once(req, "timeout"),
-        ])
-
-        // timeout reached
-        if (!response) {
-          req.destroy()
-          throw new Error("HTTP Request Timed Out")
-        }
-        if (response.statusCode !== 200) {
-          throw new Error("Expected 200 OK from the userinfo endpoint")
-        }
-
-        const parts = []
-        for await (const part of response) {
-          parts.push(part)
-        }
-
-        return JSON.parse(Buffer.concat(parts))
-      },
-    },
-    profile({ response: { profile } }) {
-      return {
-        id: profile.id,
-        name: `${profile.firstName} ${profile.lastName}`,
-        email: profile.contact.email,
-        image: profile.photo
-          ? `${profile.photo.prefix}original${profile.photo.suffix}`
-          : null,
-      }
-    },
-    style: {
-      logo: "/foursquare.svg",
-      logoDark: "/foursquare-dark.svg",
-      bg: "#fff",
-      text: "#000",
-      bgDark: "#000",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/freshbooks.js b/node_modules/next-auth/src/providers/freshbooks.js
deleted file mode 100644
index b253ed3..0000000
--- a/node_modules/next-auth/src/providers/freshbooks.js
+++ /dev/null
@@ -1,30 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function Freshbooks(options) {
-  return {
-    id: "freshbooks",
-    name: "Freshbooks",
-    type: "oauth",
-    version: "2.0",
-    params: { grant_type: "authorization_code" },
-    accessTokenUrl: "https://api.freshbooks.com/auth/oauth/token",
-    authorizationUrl:
-      "https://auth.freshbooks.com/service/auth/oauth/authorize?response_type=code",
-    profileUrl: "https://api.freshbooks.com/auth/api/v1/users/me",
-    async profile(profile) {
-      return {
-        id: profile.response.id,
-        name: `${profile.response.first_name} ${profile.response.last_name}`,
-        email: profile.response.email,
-      }
-    },
-    style: {
-      logo: "/freshbooks.svg",
-      logoDark: "/freshbooks-dark.svg",
-      bg: "#fff",
-      text: "#0075dd",
-      bgDark: "#0075dd",
-      textDark: "#fff",
-    },
-    ...options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/fusionauth.ts b/node_modules/next-auth/src/providers/fusionauth.ts
deleted file mode 100644
index 7b3ea6e..0000000
--- a/node_modules/next-auth/src/providers/fusionauth.ts
+++ /dev/null
@@ -1,50 +0,0 @@
-import { OAuthConfig, OAuthUserConfig } from "./oauth"
-
-/** This is the default openid signature returned from FusionAuth
- * it can be customized using [lambda functions](https://fusionauth.io/docs/v1/tech/lambdas)
- */
-export interface FusionAuthProfile extends Record<string, any> {
-  aud: string
-  exp: number
-  iat: number
-  iss: string
-  sub: string
-  jti: string
-  authenticationType: string
-  email: string
-  email_verified: boolean
-  preferred_username: string
-  at_hash: string
-  c_hash: string
-  scope: string
-  sid: string
-}
-
-export default function FusionAuth<P extends FusionAuthProfile>(
-  // tenantId only needed if there is more than one tenant configured on the server
-  options: OAuthUserConfig<P> & { tenantId?: string }
-): OAuthConfig<P> {
-  return {
-    id: "fusionauth",
-    name: "FusionAuth",
-    type: "oauth",
-    wellKnown: options?.tenantId
-      ? `${options.issuer}/.well-known/openid-configuration?tenantId=${options.tenantId}`
-      : `${options.issuer}/.well-known/openid-configuration`,
-    authorization: {
-      params: {
-        scope: "openid offline_access",
-        ...(options?.tenantId && { tenantId: options.tenantId }),
-      },
-    },
-    checks: ["pkce", "state"],
-    profile(profile) {
-      return {
-        id: profile.sub,
-        email: profile.email,
-        name: profile?.preferred_username,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/github.ts b/node_modules/next-auth/src/providers/github.ts
deleted file mode 100644
index 5591ab0..0000000
--- a/node_modules/next-auth/src/providers/github.ts
+++ /dev/null
@@ -1,111 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-/** @see https://docs.github.com/en/rest/users/users#get-the-authenticated-user */
-export interface GithubProfile extends Record<string, any> {
-  login: string
-  id: number
-  node_id: string
-  avatar_url: string
-  gravatar_id: string | null
-  url: string
-  html_url: string
-  followers_url: string
-  following_url: string
-  gists_url: string
-  starred_url: string
-  subscriptions_url: string
-  organizations_url: string
-  repos_url: string
-  events_url: string
-  received_events_url: string
-  type: string
-  site_admin: boolean
-  name: string | null
-  company: string | null
-  blog: string | null
-  location: string | null
-  email: string | null
-  hireable: boolean | null
-  bio: string | null
-  twitter_username?: string | null
-  public_repos: number
-  public_gists: number
-  followers: number
-  following: number
-  created_at: string
-  updated_at: string
-  private_gists?: number
-  total_private_repos?: number
-  owned_private_repos?: number
-  disk_usage?: number
-  suspended_at?: string | null
-  collaborators?: number
-  two_factor_authentication: boolean
-  plan?: {
-    collaborators: number
-    name: string
-    space: number
-    private_repos: number
-  }
-}
-
-export interface GithubEmail extends Record<string, any> {
-  email: string
-  primary: boolean
-  verified: boolean
-  visibility: "public" | "private"
-}
-
-export default function Github<P extends GithubProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "github",
-    name: "GitHub",
-    type: "oauth",
-    authorization: {
-      url: "https://github.com/login/oauth/authorize",
-      params: { scope: "read:user user:email" },
-    },
-    token: "https://github.com/login/oauth/access_token",
-    userinfo: {
-      url: "https://api.github.com/user",
-      async request({ client, tokens }) {
-        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-        const profile = await client.userinfo(tokens.access_token!)
-
-        if (!profile.email) {
-          // If the user does not have a public email, get another via the GitHub API
-          // See https://docs.github.com/en/rest/users/emails#list-public-email-addresses-for-the-authenticated-user
-          const res = await fetch("https://api.github.com/user/emails", {
-            headers: { Authorization: `token ${tokens.access_token}` },
-          })
-
-          if (res.ok) {
-            const emails: GithubEmail[] = await res.json()
-            profile.email = (emails.find((e) => e.primary) ?? emails[0]).email
-          }
-        }
-
-        return profile
-      },
-    },
-    profile(profile) {
-      return {
-        id: profile.id.toString(),
-        name: profile.name ?? profile.login,
-        email: profile.email,
-        image: profile.avatar_url,
-      }
-    },
-    style: {
-      logo: "/github.svg",
-      logoDark: "/github-dark.svg",
-      bg: "#fff",
-      bgDark: "#000",
-      text: "#000",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/gitlab.ts b/node_modules/next-auth/src/providers/gitlab.ts
deleted file mode 100644
index 65f0fd8..0000000
--- a/node_modules/next-auth/src/providers/gitlab.ts
+++ /dev/null
@@ -1,80 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface GitLabProfile extends Record<string, any> {
-  id: number
-  username: string
-  email: string
-  name: string
-  state: string
-  avatar_url: string
-  web_url: string
-  created_at: string
-  bio: string
-  location?: string
-  public_email: string
-  skype: string
-  linkedin: string
-  twitter: string
-  website_url: string
-  organization: string
-  job_title: string
-  pronouns: string
-  bot: boolean
-  work_information?: string
-  followers: number
-  following: number
-  local_time: string
-  last_sign_in_at: string
-  confirmed_at: string
-  theme_id: number
-  last_activity_on: string
-  color_scheme_id: number
-  projects_limit: number
-  current_sign_in_at: string
-  identities: Array<{
-    provider: string
-    extern_uid: string
-  }>
-  can_create_group: boolean
-  can_create_project: boolean
-  two_factor_enabled: boolean
-  external: boolean
-  private_profile: boolean
-  commit_email: string
-  shared_runners_minutes_limit: number
-  extra_shared_runners_minutes_limit: number
-}
-
-export default function GitLab<P extends GitLabProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "gitlab",
-    name: "GitLab",
-    type: "oauth",
-    authorization: {
-      url: "https://gitlab.com/oauth/authorize",
-      params: { scope: "read_user" },
-    },
-    token: "https://gitlab.com/oauth/token",
-    userinfo: "https://gitlab.com/api/v4/user",
-    checks: ["pkce", "state"],
-    profile(profile) {
-      return {
-        id: profile.id.toString(),
-        name: profile.name ?? profile.username,
-        email: profile.email,
-        image: profile.avatar_url,
-      }
-    },
-    style: {
-      logo: "/gitlab.svg",
-      logoDark: "/gitlab-dark.svg",
-      bg: "#fff",
-      text: "#FC6D26",
-      bgDark: "#FC6D26",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/google.ts b/node_modules/next-auth/src/providers/google.ts
deleted file mode 100644
index 49bcf29..0000000
--- a/node_modules/next-auth/src/providers/google.ts
+++ /dev/null
@@ -1,50 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface GoogleProfile extends Record<string, any> {
-  aud: string
-  azp: string
-  email: string
-  email_verified: boolean
-  exp: number
-  family_name: string
-  given_name: string
-  hd: string
-  iat: number
-  iss: string
-  jti: string
-  name: string
-  nbf: number
-  picture: string
-  sub: string
-}
-
-export default function Google<P extends GoogleProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "google",
-    name: "Google",
-    type: "oauth",
-    wellKnown: "https://accounts.google.com/.well-known/openid-configuration",
-    authorization: { params: { scope: "openid email profile" } },
-    idToken: true,
-    checks: ["pkce", "state"],
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    style: {
-      logo: "/google.svg",
-      logoDark: "/google.svg",
-      bgDark: "#fff",
-      bg: "#fff",
-      text: "#000",
-      textDark: "#000",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/hubspot.ts b/node_modules/next-auth/src/providers/hubspot.ts
deleted file mode 100644
index ed5d9b6..0000000
--- a/node_modules/next-auth/src/providers/hubspot.ts
+++ /dev/null
@@ -1,77 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-interface HubSpotProfile extends Record<string, any> {
-  // TODO: figure out additional fields, for now using
-  // https://legacydocs.hubspot.com/docs/methods/oauth2/get-access-token-information
-
-  user: string
-  user_id: string
-
-  hub_domain: string
-  hub_id: string
-}
-
-const HubSpotConfig = {
-  authorizationUrl: "https://app.hubspot.com/oauth/authorize",
-  tokenUrl: "https://api.hubapi.com/oauth/v1/token",
-  profileUrl: "https://api.hubapi.com/oauth/v1/access-tokens",
-}
-
-export default function HubSpot<P extends HubSpotProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "hubspot",
-    name: "HubSpot",
-    type: "oauth",
-
-    ...HubSpotConfig,
-
-    authorization: {
-      url: HubSpotConfig.authorizationUrl,
-      params: {
-        scope: "oauth",
-        client_id: options.clientId,
-      },
-    },
-    client: {
-      token_endpoint_auth_method: "client_secret_post",
-    },
-    token: HubSpotConfig.tokenUrl,
-    userinfo: {
-      url: HubSpotConfig.profileUrl,
-      async request(context) {
-        const url = `${HubSpotConfig.profileUrl}/${context.tokens.access_token}`
-
-        const response = await fetch(url, {
-          headers: {
-            "Content-Type": "application/json",
-          },
-          method: "GET",
-        })
-
-        return await response.json()
-      },
-    },
-    profile(profile) {
-      return {
-        id: profile.user_id,
-        name: profile.user,
-        email: profile.user,
-
-        // TODO: get image from profile once it's available
-        // Details available https://community.hubspot.com/t5/APIs-Integrations/Profile-photo-is-not-retrieved-with-User-API/m-p/325521
-        image: null,
-      }
-    },
-    style: {
-      logo: "/hubspot.svg",
-      logoDark: "/hubspot-dark.svg",
-      bg: "#fff",
-      text: "#ff7a59",
-      bgDark: "#ff7a59",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/identity-server4.js b/node_modules/next-auth/src/providers/identity-server4.js
deleted file mode 100644
index b105712..0000000
--- a/node_modules/next-auth/src/providers/identity-server4.js
+++ /dev/null
@@ -1,21 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function IdentityServer4(options) {
-  return {
-    id: "identity-server4",
-    name: "IdentityServer4",
-    type: "oauth",
-    wellKnown: `${options.issuer}/.well-known/openid-configuration`,
-    authorization: { params: { scope: "openid profile email" } },
-    checks: ["pkce", "state"],
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name,
-        email: profile.email,
-        image: null,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/index.ts b/node_modules/next-auth/src/providers/index.ts
deleted file mode 100644
index 96aaa95..0000000
--- a/node_modules/next-auth/src/providers/index.ts
+++ /dev/null
@@ -1,41 +0,0 @@
-import type { OAuthConfig, OAuthProvider, OAuthProviderType } from "./oauth"
-
-import type { EmailConfig, EmailProvider, EmailProviderType } from "./email"
-
-import type {
-  CredentialsConfig,
-  CredentialsProvider,
-  CredentialsProviderType,
-} from "./credentials"
-
-export * from "./oauth"
-export * from "./email"
-export * from "./credentials"
-
-export type ProviderType = "oauth" | "email" | "credentials"
-
-export interface CommonProviderOptions {
-  id: string
-  name: string
-  type: ProviderType
-  options?: Record<string, unknown>
-}
-
-export type Provider = OAuthConfig<any> | EmailConfig | CredentialsConfig
-
-export type BuiltInProviders = Record<OAuthProviderType, OAuthProvider> &
-  Record<CredentialsProviderType, CredentialsProvider> &
-  Record<EmailProviderType, EmailProvider>
-
-export type AppProviders = Array<
-  Provider | ReturnType<BuiltInProviders[keyof BuiltInProviders]>
->
-
-export interface AppProvider extends CommonProviderOptions {
-  signinUrl: string
-  callbackUrl: string
-}
-
-export type RedirectableProviderType = "email" | "credentials"
-
-export type BuiltInProviderType = RedirectableProviderType | OAuthProviderType
diff --git a/node_modules/next-auth/src/providers/instagram.js b/node_modules/next-auth/src/providers/instagram.js
deleted file mode 100644
index 41b5a79..0000000
--- a/node_modules/next-auth/src/providers/instagram.js
+++ /dev/null
@@ -1,59 +0,0 @@
-/**
- * @type {import("src/providers").OAuthProvider} options
- * @example
- *
- * ```js
- * // pages/api/auth/[...nextauth].js
- * import Providers from `next-auth/providers`
- * ...
- * providers: [
- *   Providers.Instagram({
- *     clientId: process.env.INSTAGRAM_CLIENT_ID,
- *     clientSecret: process.env.INSTAGRAM_CLIENT_SECRET
- *   })
- * ]
- * ...
- *
- * // pages/index
- * import { signIn } from "next-auth/react"
- * ...
- * <button onClick={() => signIn("instagram")}>
- *   Sign in
- * </button>
- * ...
- * ```
- * [NextAuth.js Documentation](https://next-auth.js.org/providers/instagram) | [Instagram Documentation](https://developers.facebook.com/docs/instagram-basic-display-api/getting-started) | [Configuration](https://developers.facebook.com/apps)
- */
-/** @type {import(".").OAuthProvider} */
-export default function Instagram(options) {
-  return {
-    id: "instagram",
-    name: "Instagram",
-    type: "oauth",
-    authorization:
-      "https://api.instagram.com/oauth/authorize?scope=user_profile",
-    token: "https://api.instagram.com/oauth/access_token",
-    userinfo:
-      "https://graph.instagram.com/me?fields=id,username,account_type,name",
-    client: {
-      token_endpoint_auth_method: "client_secret_post",
-    },
-    async profile(profile) {
-      return {
-        id: profile.id,
-        name: profile.username,
-        email: null,
-        image: null,
-      }
-    },
-    style: {
-      logo: "/instagram.svg",
-      logoDark: "/instagram.svg",
-      bg: "#fff",
-      text: "#000",
-      bgDark: "#fff",
-      textDark: "#000",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/kakao.ts b/node_modules/next-auth/src/providers/kakao.ts
deleted file mode 100644
index b82a923..0000000
--- a/node_modules/next-auth/src/providers/kakao.ts
+++ /dev/null
@@ -1,92 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export type DateTime = string
-export type Gender = "female" | "male"
-export type AgeRange =
-  | "1-9"
-  | "10-14"
-  | "15-19"
-  | "20-29"
-  | "30-39"
-  | "40-49"
-  | "50-59"
-  | "60-69"
-  | "70-79"
-  | "80-89"
-  | "90-"
-
-/**
- * https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api#req-user-info
- * type from : https://gist.github.com/ziponia/cdce1ebd88f979b2a6f3f53416b56a77
- */
-export interface KakaoProfile extends Record<string, any> {
-  id: number
-  has_signed_up?: boolean
-  connected_at?: DateTime
-  synched_at?: DateTime
-  properties?: {
-    id?: string
-    status?: string
-    registered_at?: DateTime
-    msg_blocked?: boolean
-    nickname?: string
-    profile_image?: string
-    thumbnail_image?: string
-  }
-  kakao_account?: {
-    profile_needs_agreement?: boolean
-    profile_nickname_needs_agreement?: boolean
-    profile_image_needs_agreement?: boolean
-    profile?: {
-      nickname?: string
-      thumbnail_image_url?: string
-      profile_image_url?: string
-      is_default_image?: boolean
-    }
-    name_needs_agreement?: boolean
-    name?: string
-    email_needs_agreement?: boolean
-    is_email_valid?: boolean
-    is_email_verified?: boolean
-    email?: string
-    age_range_needs_agreement?: boolean
-    age_range?: AgeRange
-    birthyear_needs_agreement?: boolean
-    birthyear?: string
-    birthday_needs_agreement?: boolean
-    birthday?: string
-    birthday_type?: string
-    gender_needs_agreement?: boolean
-    gender?: Gender
-    phone_number_needs_agreement?: boolean
-    phone_number?: string
-    ci_needs_agreement?: boolean
-    ci?: string
-    ci_authenticated_at?: DateTime
-  }
-}
-
-export default function Kakao<P extends KakaoProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "kakao",
-    name: "Kakao",
-    type: "oauth",
-    authorization: "https://kauth.kakao.com/oauth/authorize?scope",
-    token: "https://kauth.kakao.com/oauth/token",
-    userinfo: "https://kapi.kakao.com/v2/user/me",
-    client: {
-      token_endpoint_auth_method: "client_secret_post",
-    },
-    profile(profile) {
-      return {
-        id: String(profile.id),
-        name: profile.kakao_account?.profile?.nickname,
-        email: profile.kakao_account?.email,
-        image: profile.kakao_account?.profile?.profile_image_url,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/keycloak.ts b/node_modules/next-auth/src/providers/keycloak.ts
deleted file mode 100644
index e3cfb5b..0000000
--- a/node_modules/next-auth/src/providers/keycloak.ts
+++ /dev/null
@@ -1,56 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface KeycloakProfile extends Record<string, any> {
-  exp: number
-  iat: number
-  auth_time: number
-  jti: string
-  iss: string
-  aud: string
-  sub: string
-  typ: string
-  azp: string
-  session_state: string
-  at_hash: string
-  acr: string
-  sid: string
-  email_verified: boolean
-  name: string
-  preferred_username: string
-  given_name: string
-  family_name: string
-  email: string
-  picture: string
-  user: any
-}
-
-export default function Keycloak<P extends KeycloakProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "keycloak",
-    name: "Keycloak",
-    wellKnown: `${options.issuer}/.well-known/openid-configuration`,
-    type: "oauth",
-    authorization: { params: { scope: "openid email profile" } },
-    checks: ["pkce", "state"],
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name ?? profile.preferred_username,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    style: {
-      logo: "/keycloak.svg",
-      logoDark: "/keycloak.svg",
-      bg: "#fff",
-      text: "#000",
-      bgDark: "#fff",
-      textDark: "#000",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/line.ts b/node_modules/next-auth/src/providers/line.ts
deleted file mode 100644
index 417680e..0000000
--- a/node_modules/next-auth/src/providers/line.ts
+++ /dev/null
@@ -1,46 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface LineProfile extends Record<string, any> {
-  iss: string
-  sub: string
-  aud: string
-  exp: number
-  iat: number
-  amr: string[]
-  name: string
-  picture: string
-  user: any
-}
-
-export default function LINE<P extends LineProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "line",
-    name: "LINE",
-    type: "oauth",
-    authorization: { params: { scope: "openid profile" } },
-    idToken: true,
-    wellKnown: "https://access.line.me/.well-known/openid-configuration",
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    client: {
-      id_token_signed_response_alg: "HS256",
-    },
-    style: {
-      logo: "/line.svg",
-      logoDark: "/line.svg",
-      bg: "#fff",
-      text: "#00C300",
-      bgDark: "#00C300",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/linkedin.ts b/node_modules/next-auth/src/providers/linkedin.ts
deleted file mode 100644
index deb63cd..0000000
--- a/node_modules/next-auth/src/providers/linkedin.ts
+++ /dev/null
@@ -1,68 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-interface Identifier {
-  identifier: string
-}
-
-interface Element {
-  identifiers?: Identifier[]
-}
-
-export interface LinkedInProfile extends Record<string, any> {
-  id: string
-  localizedFirstName: string
-  localizedLastName: string
-  profilePicture: {
-    "displayImage~": {
-      elements?: Element[]
-    }
-  }
-}
-
-export default function LinkedIn<P extends LinkedInProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "linkedin",
-    name: "LinkedIn",
-    type: "oauth",
-    authorization: {
-      url: "https://www.linkedin.com/oauth/v2/authorization",
-      params: { scope: "r_liteprofile r_emailaddress" },
-    },
-    token: "https://www.linkedin.com/oauth/v2/accessToken",
-    client: {
-      token_endpoint_auth_method: "client_secret_post",
-    },
-    userinfo: {
-      url: "https://api.linkedin.com/v2/me",
-      params: {
-        projection: `(id,localizedFirstName,localizedLastName,profilePicture(displayImage~digitalmediaAsset:playableStreams))`,
-      },
-    },
-    async profile(profile, tokens) {
-      const emailResponse = await fetch(
-        "https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))",
-        { headers: { Authorization: `Bearer ${tokens.access_token}` } }
-      )
-      const emailData = await emailResponse.json()
-      return {
-        id: profile.id,
-        name: `${profile.localizedFirstName} ${profile.localizedLastName}`,
-        email: emailData?.elements?.[0]?.["handle~"]?.emailAddress,
-        image:
-          profile.profilePicture?.["displayImage~"]?.elements?.[0]
-            ?.identifiers?.[0]?.identifier,
-      }
-    },
-    style: {
-      logo: "/linkedin.svg",
-      logoDark: "/linkedin-dark.svg",
-      bg: "#fff",
-      text: "#069",
-      bgDark: "#069",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/mailchimp.js b/node_modules/next-auth/src/providers/mailchimp.js
deleted file mode 100644
index 4e4fac0..0000000
--- a/node_modules/next-auth/src/providers/mailchimp.js
+++ /dev/null
@@ -1,28 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function Mailchimp(options) {
-  return {
-    id: "mailchimp",
-    name: "Mailchimp",
-    type: "oauth",
-    authorization: "https://login.mailchimp.com/oauth2/authorize",
-    token: "https://login.mailchimp.com/oauth2/token",
-    userinfo: "https://login.mailchimp.com/oauth2/metadata",
-    profile(profile) {
-      return {
-        id: profile.login.login_id,
-        name: profile.accountname,
-        email: profile.login.email,
-        image: null,
-      }
-    },
-    style: {
-      logo: "/mailchimp.svg",
-      logoDark: "/mailchimp-dark.svg",
-      bg: "#fff",
-      text: "#000",
-      bgDark: "#000",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/mailru.js b/node_modules/next-auth/src/providers/mailru.js
deleted file mode 100644
index eee3cfd..0000000
--- a/node_modules/next-auth/src/providers/mailru.js
+++ /dev/null
@@ -1,20 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function MailRu(options) {
-  return {
-    id: "mailru",
-    name: "Mail.ru",
-    type: "oauth",
-    authorization: "https://oauth.mail.ru/login?scope=userinfo",
-    token: "https://oauth.mail.ru/token",
-    userinfo: "https://oauth.mail.ru/userinfo",
-    profile(profile) {
-      return {
-        id: profile.id,
-        name: profile.name,
-        email: profile.email,
-        image: profile.image,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/medium.js b/node_modules/next-auth/src/providers/medium.js
deleted file mode 100644
index 4ec8792..0000000
--- a/node_modules/next-auth/src/providers/medium.js
+++ /dev/null
@@ -1,20 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function Medium(options) {
-  return {
-    id: "medium",
-    name: "Medium",
-    type: "oauth",
-    authorization: "https://medium.com/m/oauth/authorize?scope=basicProfile",
-    token: "https://api.medium.com/v1/tokens",
-    userinfo: "https://api.medium.com/v1/me",
-    profile(profile) {
-      return {
-        id: profile.data.id,
-        name: profile.data.name,
-        email: null,
-        image: profile.data.imageUrl,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/naver.ts b/node_modules/next-auth/src/providers/naver.ts
deleted file mode 100644
index 301eff2..0000000
--- a/node_modules/next-auth/src/providers/naver.ts
+++ /dev/null
@@ -1,42 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-/** https://developers.naver.com/docs/login/profile/profile.md */
-export interface NaverProfile extends Record<string, any> {
-  resultcode: string
-  message: string
-  response: {
-    id: string
-    nickname?: string
-    name?: string
-    email?: string
-    gender?: "F" | "M" | "U"
-    age?: string
-    birthday?: string
-    profile_image?: string
-    birthyear?: string
-    mobile?: string
-  }
-}
-
-export default function Naver<P extends NaverProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "naver",
-    name: "Naver",
-    type: "oauth",
-    authorization: "https://nid.naver.com/oauth2.0/authorize",
-    token: "https://nid.naver.com/oauth2.0/token",
-    userinfo: "https://openapi.naver.com/v1/nid/me",
-    profile(profile) {
-      return {
-        id: profile.response.id,
-        name: profile.response.nickname,
-        email: profile.response.email,
-        image: profile.response.profile_image,
-      }
-    },
-    checks: ["state"],
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/netlify.js b/node_modules/next-auth/src/providers/netlify.js
deleted file mode 100644
index 7c31aed..0000000
--- a/node_modules/next-auth/src/providers/netlify.js
+++ /dev/null
@@ -1,20 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function Netlify(options) {
-  return {
-    id: "netlify",
-    name: "Netlify",
-    type: "oauth",
-    authorization: "https://app.netlify.com/authorize",
-    token: "https://api.netlify.com/oauth/token",
-    userinfo: "https://api.netlify.com/api/v1/user",
-    profile(profile) {
-      return {
-        id: profile.id,
-        name: profile.full_name,
-        email: profile.email,
-        image: profile.avatar_url,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/oauth-types.ts b/node_modules/next-auth/src/providers/oauth-types.ts
deleted file mode 100644
index df51525..0000000
--- a/node_modules/next-auth/src/providers/oauth-types.ts
+++ /dev/null
@@ -1,70 +0,0 @@
-
-// THIS FILE IS AUTOGENERATED. DO NOT EDIT.
-export type OAuthProviderType = 
-  | "42-school"
-  | "apple"
-  | "atlassian"
-  | "auth0"
-  | "authentik"
-  | "azure-ad-b2c"
-  | "azure-ad"
-  | "battlenet"
-  | "box"
-  | "boxyhq-saml"
-  | "bungie"
-  | "cognito"
-  | "coinbase"
-  | "credentials"
-  | "discord"
-  | "dropbox"
-  | "duende-identity-server6"
-  | "email"
-  | "eveonline"
-  | "facebook"
-  | "faceit"
-  | "foursquare"
-  | "freshbooks"
-  | "fusionauth"
-  | "github"
-  | "gitlab"
-  | "google"
-  | "hubspot"
-  | "identity-server4"
-  | "index"
-  | "instagram"
-  | "kakao"
-  | "keycloak"
-  | "line"
-  | "linkedin"
-  | "mailchimp"
-  | "mailru"
-  | "medium"
-  | "naver"
-  | "netlify"
-  | "oauth-types"
-  | "oauth"
-  | "okta"
-  | "onelogin"
-  | "osso"
-  | "osu"
-  | "patreon"
-  | "pinterest"
-  | "pipedrive"
-  | "reddit"
-  | "salesforce"
-  | "slack"
-  | "spotify"
-  | "strava"
-  | "todoist"
-  | "trakt"
-  | "twitch"
-  | "twitter"
-  | "united-effects"
-  | "vk"
-  | "wikimedia"
-  | "wordpress"
-  | "workos"
-  | "yandex"
-  | "zitadel"
-  | "zoho"
-  | "zoom"
\ No newline at end of file
diff --git a/node_modules/next-auth/src/providers/oauth.ts b/node_modules/next-auth/src/providers/oauth.ts
deleted file mode 100644
index e19d654..0000000
--- a/node_modules/next-auth/src/providers/oauth.ts
+++ /dev/null
@@ -1,171 +0,0 @@
-import type { CommonProviderOptions } from "../providers"
-import type { Profile, TokenSet, User, Awaitable } from ".."
-
-import type {
-  AuthorizationParameters,
-  CallbackParamsType,
-  Issuer,
-  ClientMetadata,
-  IssuerMetadata,
-  OAuthCallbackChecks,
-  OpenIDCallbackChecks,
-  HttpOptions,
-} from "openid-client"
-import type { JWK } from "jose"
-
-type Client = InstanceType<Issuer["Client"]>
-
-export type { OAuthProviderType } from "./oauth-types"
-
-type ChecksType = "pkce" | "state" | "none" | "nonce"
-
-export type OAuthChecks = OpenIDCallbackChecks | OAuthCallbackChecks
-
-type PartialIssuer = Partial<Pick<IssuerMetadata, "jwks_endpoint" | "issuer">>
-
-type UrlParams = Record<string, unknown>
-
-type EndpointRequest<C, R, P> = (
-  context: C & {
-    /** `openid-client` Client */
-    client: Client
-    /** Provider is passed for convenience, ans also contains the `callbackUrl`. */
-    provider: OAuthConfig<P> & {
-      signinUrl: string
-      callbackUrl: string
-    }
-  }
-) => Awaitable<R>
-
-/** Gives granular control of the request to the given endpoint */
-interface AdvancedEndpointHandler<P extends UrlParams, C, R> {
-  /** Endpoint URL. Can contain parameters. Optionally, you can use `params` */
-  url?: string
-  /** These will be prepended to the `url` */
-  params?: P
-  /**
-   * Control the corresponding OAuth endpoint request completely.
-   * Useful if your provider relies on some custom behaviour
-   * or it diverges from the OAuth spec.
-   *
-   * - ⚠ **This is an advanced option.**
-   * You should **try to avoid using advanced options** unless you are very comfortable using them.
-   */
-  request?: EndpointRequest<C, R, P>
-}
-
-/** Either an URL (containing all the parameters) or an object with more granular control. */
-export type EndpointHandler<
-  P extends UrlParams,
-  C = any,
-  R = any
-> = AdvancedEndpointHandler<P, C, R>
-
-export type AuthorizationEndpointHandler =
-  EndpointHandler<AuthorizationParameters>
-
-export type TokenEndpointHandler = EndpointHandler<
-  UrlParams,
-  {
-    /**
-     * Parameters extracted from the request to the `/api/auth/callback/:providerId` endpoint.
-     * Contains params like `state`.
-     */
-    params: CallbackParamsType
-    /**
-     * When using this custom flow, make sure to do all the necessary security checks.
-     * Thist object contains parameters you have to match against the request to make sure it is valid.
-     */
-    checks: OAuthChecks
-  },
-  {
-    tokens: TokenSet
-  }
->
-
-export type UserinfoEndpointHandler = EndpointHandler<
-  UrlParams,
-  { tokens: TokenSet },
-  Profile
->
-
-export interface OAuthProviderButtonStyles {
-  logo: string
-  logoDark: string
-  bg: string
-  bgDark: string
-  text: string
-  textDark: string
-}
-
-export interface OAuthConfig<P> extends CommonProviderOptions, PartialIssuer {
-  /**
-   * OpenID Connect (OIDC) compliant providers can configure
-   * this instead of `authorize`/`token`/`userinfo` options
-   * without further configuration needed in most cases.
-   * You can still use the `authorize`/`token`/`userinfo`
-   * options for advanced control.
-   *
-   * [Authorization Server Metadata](https://datatracker.ietf.org/doc/html/rfc8414#section-3)
-   */
-  wellKnown?: string
-  jwks_endpoint?: string
-  /**
-   * The login process will be initiated by sending the user to this URL.
-   *
-   * [Authorization endpoint](https://datatracker.ietf.org/doc/html/rfc6749#section-3.1)
-   */
-  authorization?: string | AuthorizationEndpointHandler
-  token?: string | TokenEndpointHandler
-  userinfo?: string | UserinfoEndpointHandler
-  type: "oauth"
-  version?: string
-  profile: (profile: P, tokens: TokenSet) => Awaitable<User>
-  checks?: ChecksType | ChecksType[]
-  client?: Partial<ClientMetadata>
-  jwks?: { keys: JWK[] }
-  clientId?: string
-  clientSecret?: string
-  /**
-   * If set to `true`, the user information will be extracted
-   * from the `id_token` claims, instead of
-   * making a request to the `userinfo` endpoint.
-   *
-   * `id_token` is usually present in OpenID Connect (OIDC) compliant providers.
-   *
-   * [`id_token` explanation](https://www.oauth.com/oauth2-servers/openid-connect/id-tokens)
-   */
-  idToken?: boolean
-  // TODO: only allow for BattleNet
-  region?: string
-  // TODO: only allow for some
-  issuer?: string
-  /** Read more at: https://github.com/panva/node-openid-client/tree/main/docs#customizing-http-requests */
-  httpOptions?: HttpOptions
-
-  style?: OAuthProviderButtonStyles
-
-  /**
-   * The options provided by the user.
-   * We will perform a deep-merge of these values
-   * with the default configuration.
-   */
-  options?: OAuthUserConfig<P>
-
-  // These are kept around for backwards compatibility with OAuth 1.x
-  accessTokenUrl?: string
-  requestTokenUrl?: string
-  profileUrl?: string
-  encoding?: string
-  allowDangerousEmailAccountLinking?: boolean
-}
-
-export type OAuthUserConfig<P> = Omit<
-  Partial<OAuthConfig<P>>,
-  "options" | "type"
-> &
-  Required<Pick<OAuthConfig<P>, "clientId" | "clientSecret">>
-
-export type OAuthProvider = (
-  options: Partial<OAuthConfig<any>>
-) => OAuthConfig<any>
diff --git a/node_modules/next-auth/src/providers/okta.ts b/node_modules/next-auth/src/providers/okta.ts
deleted file mode 100644
index de2f855..0000000
--- a/node_modules/next-auth/src/providers/okta.ts
+++ /dev/null
@@ -1,65 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface OktaProfile extends Record<string, any> {
-  iss: string
-  ver: string
-  sub: string
-  aud: string
-  iat: string
-  exp: string
-  jti: string
-  auth_time: string
-  amr: string
-  idp: string
-  nonce: string
-  name: string
-  nickname: string
-  preferred_username: string
-  given_name: string
-  middle_name: string
-  family_name: string
-  email: string
-  email_verified: string
-  profile: string
-  zoneinfo: string
-  locale: string
-  address: string
-  phone_number: string
-  picture: string
-  website: string
-  gender: string
-  birthdate: string
-  updated_at: string
-  at_hash: string
-  c_hash: string
-}
-
-export default function Okta<P extends OktaProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "okta",
-    name: "Okta",
-    type: "oauth",
-    wellKnown: `${options.issuer}/.well-known/openid-configuration`,
-    authorization: { params: { scope: "openid email profile" } },
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name ?? profile.preferred_username,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    style: {
-      logo: "/okta.svg",
-      logoDark: "/okta-dark.svg",
-      bg: "#fff",
-      text: "#000",
-      bgDark: "#000",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/onelogin.js b/node_modules/next-auth/src/providers/onelogin.js
deleted file mode 100644
index c8593ae..0000000
--- a/node_modules/next-auth/src/providers/onelogin.js
+++ /dev/null
@@ -1,20 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function OneLogin(options) {
-  return {
-    id: "onelogin",
-    name: "OneLogin",
-    type: "oauth",
-    wellKnown: `${options.issuer}/oidc/2/.well-known/openid-configuration`,
-    authorization: { params: { scope: "openid profile email" } },
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.nickname,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/osso.js b/node_modules/next-auth/src/providers/osso.js
deleted file mode 100644
index 6a1e001..0000000
--- a/node_modules/next-auth/src/providers/osso.js
+++ /dev/null
@@ -1,20 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function Osso(options) {
-  return {
-    id: "osso",
-    name: "Osso",
-    type: "oauth",
-    authorization: `${options.issuer}oauth/authorize`,
-    token: `${options.issuer}oauth/token`,
-    userinfo: `${options.issuer}oauth/me`,
-    profile(profile) {
-      return {
-        id: profile.id,
-        name: profile.name,
-        email: profile.email,
-        image: null,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/osu.ts b/node_modules/next-auth/src/providers/osu.ts
deleted file mode 100644
index c279000..0000000
--- a/node_modules/next-auth/src/providers/osu.ts
+++ /dev/null
@@ -1,77 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface OsuUserCompact {
-  avatar_url: string
-  country_code: string
-  default_group: string
-  id: string
-  is_active: boolean
-  is_bot: boolean
-  is_deleted: boolean
-  is_online: boolean
-  is_supporter: boolean
-  last_visit: Date | null
-  pm_friends_only: boolean
-  profile_colour: string | null
-  username: string
-}
-
-export interface OsuProfile extends OsuUserCompact, Record<string, any> {
-  discord: string | null
-  has_supported: boolean
-  interests: string | null
-  join_date: Date
-  kudosu: {
-    available: number
-    total: number
-  }
-  location: string | null
-  max_blocks: number
-  max_friends: number
-  occupation: string | null
-  playmode: string
-  playstyle: string[]
-  post_count: number
-  profile_order: string[]
-  title: string | null
-  title_url: string | null
-  twitter: string | null
-  website: string | null
-  country: {
-    code: string
-    name: string
-  }
-  cover: {
-    custom_url: string | null
-    url: string
-    id: number | null
-  }
-  is_restricted: boolean
-}
-
-export default function Osu<P extends OsuProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "osu",
-    name: "Osu!",
-    type: "oauth",
-    token: "https://osu.ppy.sh/oauth/token",
-    authorization: {
-      url: "https://osu.ppy.sh/oauth/authorize",
-      params: {
-        scope: "identify",
-      },
-    },
-    userinfo: "https://osu.ppy.sh/api/v2/me",
-    profile(profile) {
-      return {
-        id: profile.id,
-        email: null,
-        name: profile.username,
-        image: profile.avatar_url,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/patreon.ts b/node_modules/next-auth/src/providers/patreon.ts
deleted file mode 100644
index 63079f5..0000000
--- a/node_modules/next-auth/src/providers/patreon.ts
+++ /dev/null
@@ -1,42 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface PatreonProfile extends Record<string, any> {
-  sub: string
-  nickname: string
-  email: string
-  picture: string
-}
-
-export default function Patreon<P extends PatreonProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "patreon",
-    name: "Patreon",
-    type: "oauth",
-    version: "2.0",
-    authorization: {
-      url: "https://www.patreon.com/oauth2/authorize",
-      params: { scope: "identity identity[email]" },
-    },
-    token: "https://www.patreon.com/api/oauth2/token",
-    userinfo: "https://www.patreon.com/api/oauth2/api/current_user",
-    profile(profile) {
-      return {
-        id: profile.data.id,
-        name: profile.data.attributes.full_name,
-        email: profile.data.attributes.email,
-        image: profile.data.attributes.image_url,
-      }
-    },
-    style: {
-      logo: "/patreon.svg",
-      logoDark: "/patreon.svg",
-      bg: "#fff",
-      text: "#e85b46",
-      bgDark: "#000",
-      textDark: "#e85b46",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/pinterest.ts b/node_modules/next-auth/src/providers/pinterest.ts
deleted file mode 100644
index 891dbd1..0000000
--- a/node_modules/next-auth/src/providers/pinterest.ts
+++ /dev/null
@@ -1,34 +0,0 @@
-import { OAuthConfig, OAuthUserConfig } from "."
-
-export interface PinterestProfile extends Record<string, any> {
-  account_type: "BUSINESS" | "PINNER"
-  profile_image: string
-  website_url: string
-  username: string
-}
-
-export default function PinterestProvider<P extends PinterestProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "pinterest",
-    name: "Pinterest",
-    type: "oauth",
-    authorization: {
-      url: "https://www.pinterest.com/oauth",
-      params: { scope: "user_accounts:read" },
-    },
-    checks: ["state"],
-    token: "https://api.pinterest.com/v5/oauth/token",
-    userinfo: "https://api.pinterest.com/v5/user_account",
-    profile({ username, profile_image }) {
-      return {
-        id: username,
-        name: username,
-        image: profile_image,
-        email: null,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/pipedrive.ts b/node_modules/next-auth/src/providers/pipedrive.ts
deleted file mode 100644
index 5cdab2a..0000000
--- a/node_modules/next-auth/src/providers/pipedrive.ts
+++ /dev/null
@@ -1,59 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface PipedriveProfile extends Record<string, any> {
-  success: boolean
-  data: {
-    id: number
-    name: string
-    default_currency?: string
-    locale?: string
-    lang?: number
-    email: string
-    phone?: string
-    activated?: boolean
-    last_login?: Date
-    created?: Date
-    modified?: Date
-    signup_flow_variation?: string
-    has_created_company?: boolean
-    is_admin?: number
-    active_flag?: boolean
-    timezone_name?: string
-    timezone_offset?: string
-    role_id?: number
-    icon_url?: string
-    is_you?: boolean
-    company_id?: number
-    company_name?: string
-    company_domain?: string
-    company_country?: string
-    company_industry?: string
-    language?: {
-      language_code?: string
-      country_code?: string
-    }
-  }
-}
-
-export default function Pipedrive<P extends PipedriveProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "pipedrive",
-    name: "Pipedrive",
-    type: "oauth",
-    version: "2.0",
-    authorization: "https://oauth.pipedrive.com/oauth/authorize",
-    token: "https://oauth.pipedrive.com/oauth/token",
-    userinfo: "https://api.pipedrive.com/users/me",
-    profile: ({ data: profile }) => {
-      return {
-        id: String(profile.id),
-        name: profile.name,
-        email: profile.email,
-        image: profile.icon_url,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/reddit.js b/node_modules/next-auth/src/providers/reddit.js
deleted file mode 100644
index 814b32e..0000000
--- a/node_modules/next-auth/src/providers/reddit.js
+++ /dev/null
@@ -1,20 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function Reddit(options) {
-  return {
-    id: "reddit",
-    name: "Reddit",
-    type: "oauth",
-    authorization: "https://www.reddit.com/api/v1/authorize?scope=identity",
-    token: " https://www.reddit.com/api/v1/access_token",
-    userinfo: "https://oauth.reddit.com/api/v1/me",
-    profile(profile) {
-      return {
-        id: profile.id,
-        name: profile.name,
-        email: null,
-        image: null,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/salesforce.ts b/node_modules/next-auth/src/providers/salesforce.ts
deleted file mode 100644
index d4cd39c..0000000
--- a/node_modules/next-auth/src/providers/salesforce.ts
+++ /dev/null
@@ -1,32 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface SalesforceProfile extends Record<string, any> {
-  sub: string
-  nickname: string
-  email: string
-  picture: string
-}
-
-export default function Salesforce<P extends SalesforceProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  const { issuer = "https://login.salesforce.com" } = options
-  return {
-    id: "salesforce",
-    name: "Salesforce",
-    type: "oauth",
-    authorization: `${issuer}/services/oauth2/authorize?display=page`,
-    token: `${issuer}/services/oauth2/token`,
-    userinfo: `${issuer}/services/oauth2/userinfo`,
-    profile(profile) {
-      return {
-        id: profile.user_id,
-        name: null,
-        email: null,
-        image: profile.picture,
-      }
-    },
-    checks: ["none"],
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/slack.ts b/node_modules/next-auth/src/providers/slack.ts
deleted file mode 100644
index c1378da..0000000
--- a/node_modules/next-auth/src/providers/slack.ts
+++ /dev/null
@@ -1,62 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface SlackProfile extends Record<string, any> {
-  ok: boolean
-  sub: string
-  "https://slack.com/user_id": string
-  "https://slack.com/team_id": string
-  email: string
-  email_verified: boolean
-  date_email_verified: number
-  name: string
-  picture: string
-  given_name: string
-  family_name: string
-  locale: string
-  "https://slack.com/team_name": string
-  "https://slack.com/team_domain": string
-  "https://slack.com/user_image_24": string
-  "https://slack.com/user_image_32": string
-  "https://slack.com/user_image_48": string
-  "https://slack.com/user_image_72": string
-  "https://slack.com/user_image_192": string
-  "https://slack.com/user_image_512": string
-  "https://slack.com/user_image_1024": string
-  "https://slack.com/team_image_34": string
-  "https://slack.com/team_image_44": string
-  "https://slack.com/team_image_68": string
-  "https://slack.com/team_image_88": string
-  "https://slack.com/team_image_102": string
-  "https://slack.com/team_image_132": string
-  "https://slack.com/team_image_230": string
-  "https://slack.com/team_image_default": boolean
-}
-
-export default function Slack<P extends SlackProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "slack",
-    name: "Slack",
-    type: "oauth",
-    wellKnown: "https://slack.com/.well-known/openid-configuration",
-    authorization: { params: { scope: "openid profile email" } },
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    style: {
-      logo: "/slack.svg",
-      logoDark: "/slack.svg",
-      bg: "#fff",
-      text: "#000",
-      bgDark: "#000",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/spotify.ts b/node_modules/next-auth/src/providers/spotify.ts
deleted file mode 100644
index 6a535ac..0000000
--- a/node_modules/next-auth/src/providers/spotify.ts
+++ /dev/null
@@ -1,42 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface SpotifyImage {
-  url: string
-}
-
-export interface SpotifyProfile extends Record<string, any> {
-  id: string
-  display_name: string
-  email: string
-  images: SpotifyImage[]
-}
-export default function Spotify<P extends SpotifyProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "spotify",
-    name: "Spotify",
-    type: "oauth",
-    authorization:
-      "https://accounts.spotify.com/authorize?scope=user-read-email",
-    token: "https://accounts.spotify.com/api/token",
-    userinfo: "https://api.spotify.com/v1/me",
-    profile(profile) {
-      return {
-        id: profile.id,
-        name: profile.display_name,
-        email: profile.email,
-        image: profile.images?.[0]?.url,
-      }
-    },
-    style: {
-      logo: "/spotify.svg",
-      logoDark: "/spotify.svg",
-      bg: "#fff",
-      text: "#2ebd59",
-      bgDark: "#fff",
-      textDark: "#2ebd59",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/strava.ts b/node_modules/next-auth/src/providers/strava.ts
deleted file mode 100644
index ce20b33..0000000
--- a/node_modules/next-auth/src/providers/strava.ts
+++ /dev/null
@@ -1,42 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface StravaProfile extends Record<string, any> {
-  id: string // this is really a number
-  firstname: string
-  lastname: string
-  profile: string
-}
-
-export default function Strava<P extends StravaProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "strava",
-    name: "Strava",
-    type: "oauth",
-    authorization: {
-      url: "https://www.strava.com/api/v3/oauth/authorize",
-      params: {
-        scope: "read",
-        approval_prompt: "auto",
-        response_type: "code",
-      },
-    },
-    token: {
-      url: "https://www.strava.com/api/v3/oauth/token",
-    },
-    userinfo: "https://www.strava.com/api/v3/athlete",
-    client: {
-      token_endpoint_auth_method: "client_secret_post",
-    },
-    profile(profile) {
-      return {
-        id: profile.id,
-        name: `${profile.firstname} ${profile.lastname}`,
-        email: null,
-        image: profile.profile,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/todoist.ts b/node_modules/next-auth/src/providers/todoist.ts
deleted file mode 100644
index 576bca3..0000000
--- a/node_modules/next-auth/src/providers/todoist.ts
+++ /dev/null
@@ -1,66 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-/**
- * @see https://developer.todoist.com/sync/v9/#user
- */
-interface TodoistProfile extends Record<string, any> {
-  avatar_big: string
-  email: string
-  full_name: string
-  id: string
-}
-
-export default function TodoistProvider<P extends TodoistProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "todoist",
-    name: "Todoist",
-    type: "oauth",
-    authorization: {
-      url: "https://todoist.com/oauth/authorize",
-      params: { scope: "data:read" },
-    },
-    token: "https://todoist.com/oauth/access_token",
-    client: {
-      token_endpoint_auth_method: "client_secret_post",
-    },
-    userinfo: {
-      request: async ({ tokens }) => {
-        // To obtain Todoist user info, we need to call the Sync API
-        // See https://developer.todoist.com/sync/v9
-        const res = await fetch("https://api.todoist.com/sync/v9/sync", {
-          method: "POST",
-          headers: {
-            Authorization: `Bearer ${tokens.access_token}`,
-            "Content-Type": "application/json",
-          },
-          body: JSON.stringify({
-            sync_token: "*",
-            resource_types: '["user"]',
-          }),
-        })
-
-        const { user: profile } = await res.json()
-        return profile
-      },
-    },
-    profile: async (profile) => {
-      return {
-        id: profile.id,
-        email: profile.email,
-        name: profile.full_name,
-        image: profile.avatar_big,
-      }
-    },
-    style: {
-      logo: "/todoist.svg",
-      logoDark: "/todoist.svg",
-      bg: "#fff",
-      text: "#E44332",
-      bgDark: "#000",
-      textDark: "#E44332",
-    },
-    ...options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/trakt.ts b/node_modules/next-auth/src/providers/trakt.ts
deleted file mode 100644
index e3b720a..0000000
--- a/node_modules/next-auth/src/providers/trakt.ts
+++ /dev/null
@@ -1,64 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface TraktUser extends Record<string, any> {
-  username: string
-  private: boolean
-  name: string
-  vip: boolean
-  vip_ep: boolean
-  ids: { slug: string }
-  joined_at: string
-  location: string | null
-  about: string | null
-  gender: string | null
-  age: number | null
-  images: { avatar: { full: string } }
-}
-
-export default function Trakt<P extends TraktUser>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "trakt",
-    name: "Trakt",
-    type: "oauth",
-    authorization: {
-      url: "https://trakt.tv/oauth/authorize",
-      params: { scope: "" }, // when default, trakt returns auth error
-    },
-    token: "https://api.trakt.tv/oauth/token",
-
-    userinfo: {
-      async request(context) {
-        const res = await fetch("https://api.trakt.tv/users/me?extended=full", {
-          headers: {
-            Authorization: `Bearer ${context.tokens.access_token}`,
-            "trakt-api-version": "2",
-            "trakt-api-key": context.provider.clientId as string,
-          },
-        })
-
-        if (res.ok) return await res.json()
-
-        throw new Error("Expected 200 OK from the userinfo endpoint")
-      },
-    },
-    profile(profile) {
-      return {
-        id: profile.ids.slug,
-        name: profile.name,
-        email: null, // trakt does not provide user emails
-        image: profile.images.avatar.full, // trakt does not allow hotlinking
-      }
-    },
-    style: {
-      logo: "/trakt.svg",
-      logoDark: "/trakt-dark.svg",
-      bg: "#fff",
-      text: "#ED2224",
-      bgDark: "#ED2224",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/twitch.ts b/node_modules/next-auth/src/providers/twitch.ts
deleted file mode 100644
index 70fd6c5..0000000
--- a/node_modules/next-auth/src/providers/twitch.ts
+++ /dev/null
@@ -1,49 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface TwitchProfile extends Record<string, any> {
-  sub: string
-  preferred_username: string
-  email: string
-  picture: string
-}
-
-export default function Twitch<P extends TwitchProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    wellKnown: "https://id.twitch.tv/oauth2/.well-known/openid-configuration",
-    id: "twitch",
-    name: "Twitch",
-    type: "oauth",
-    authorization: {
-      params: {
-        scope: "openid user:read:email",
-        claims: {
-          id_token: {
-            email: null,
-            picture: null,
-            preferred_username: null,
-          },
-        },
-      },
-    },
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.preferred_username,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    style: {
-      logo: "/twitch.svg",
-      logoDark: "/twitch-dark.svg",
-      bg: "#fff",
-      text: "#65459B",
-      bgDark: "#65459B",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/twitter.ts b/node_modules/next-auth/src/providers/twitter.ts
deleted file mode 100644
index ce55c23..0000000
--- a/node_modules/next-auth/src/providers/twitter.ts
+++ /dev/null
@@ -1,230 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface TwitterLegacyProfile {
-  id: number
-  id_str: string
-  name: string
-  screen_name: string
-  location: string
-  description: string
-  url: string
-  entities: {
-    url: {
-      urls: Array<{
-        url: string
-        expanded_url: string
-        display_url: string
-        indices: number[]
-      }>
-    }
-    description: {
-      urls: any[]
-    }
-  }
-  protected: boolean
-  followers_count: number
-  friends_count: number
-  listed_count: number
-  created_at: string
-  favourites_count: number
-  utc_offset?: any
-  time_zone?: any
-  geo_enabled: boolean
-  verified: boolean
-  statuses_count: number
-  lang?: any
-  status: {
-    created_at: string
-    id: number
-    id_str: string
-    text: string
-    truncated: boolean
-    entities: {
-      hashtags: any[]
-      symbols: any[]
-      user_mentions: Array<{
-        screen_name: string
-        name: string
-        id: number
-        id_str: string
-        indices: number[]
-      }>
-      urls: any[]
-    }
-    source: string
-    in_reply_to_status_id: number
-    in_reply_to_status_id_str: string
-    in_reply_to_user_id: number
-    in_reply_to_user_id_str: string
-    in_reply_to_screen_name: string
-    geo?: any
-    coordinates?: any
-    place?: any
-    contributors?: any
-    is_quote_status: boolean
-    retweet_count: number
-    favorite_count: number
-    favorited: boolean
-    retweeted: boolean
-    lang: string
-  }
-  contributors_enabled: boolean
-  is_translator: boolean
-  is_translation_enabled: boolean
-  profile_background_color: string
-  profile_background_image_url: string
-  profile_background_image_url_https: string
-  profile_background_tile: boolean
-  profile_image_url: string
-  profile_image_url_https: string
-  profile_banner_url: string
-  profile_link_color: string
-  profile_sidebar_border_color: string
-  profile_sidebar_fill_color: string
-  profile_text_color: string
-  profile_use_background_image: boolean
-  has_extended_profile: boolean
-  default_profile: boolean
-  default_profile_image: boolean
-  following: boolean
-  follow_request_sent: boolean
-  notifications: boolean
-  translator_type: string
-  withheld_in_countries: any[]
-  suspended: boolean
-  needs_phone_verification: boolean
-}
-
-export function TwitterLegacy<
-  P extends Record<string, any> = TwitterLegacyProfile
->(options: OAuthUserConfig<P>): OAuthConfig<P> {
-  return {
-    id: "twitter",
-    name: "Twitter (Legacy)",
-    type: "oauth",
-    version: "1.0A",
-    authorization: "https://api.twitter.com/oauth/authenticate",
-    accessTokenUrl: "https://api.twitter.com/oauth/access_token",
-    requestTokenUrl: "https://api.twitter.com/oauth/request_token",
-    profileUrl:
-      "https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true",
-    profile(profile) {
-      return {
-        id: profile.id_str,
-        name: profile.name,
-        email: profile.email,
-        image: profile.profile_image_url_https.replace(
-          /_normal\.(jpg|png|gif)$/,
-          ".$1"
-        ),
-      }
-    },
-    style: {
-      logo: "/twitter.svg",
-      logoDark: "/twitter-dark.svg",
-      bg: "#fff",
-      text: "#1da1f2",
-      bgDark: "#1da1f2",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
-
-/**
- * [Documentation](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-me)
- */
-export interface TwitterProfile {
-  data: {
-    id: string
-    name: string
-    username: string
-    location?: string
-    entities?: {
-      url: {
-        urls: Array<{
-          start: number
-          end: number
-          url: string
-          expanded_url: string
-          display_url: string
-        }>
-      }
-      description: {
-        hashtags: Array<{
-          start: number
-          end: number
-          tag: string
-        }>
-      }
-    }
-    verified?: boolean
-    description?: string
-    url?: string
-    profile_image_url?: string
-    protected?: boolean
-    pinned_tweet_id?: string
-    created_at?: string
-  }
-  includes?: {
-    tweets?: Array<{
-      id: string
-      text: string
-    }>
-  }
-}
-
-export default function Twitter<
-  P extends Record<string, any> = TwitterLegacyProfile | TwitterProfile
->(options: OAuthUserConfig<P>): OAuthConfig<P> {
-  if (options.version === "2.0") {
-    return {
-      id: "twitter",
-      name: "Twitter",
-      version: "2.0",
-      type: "oauth",
-      authorization: {
-        url: "https://twitter.com/i/oauth2/authorize",
-        params: { scope: "users.read tweet.read offline.access" },
-      },
-      token: {
-        url: "https://api.twitter.com/2/oauth2/token",
-        // TODO: Remove this
-        async request({ client, params, checks, provider }) {
-          const response = await client.oauthCallback(
-            provider.callbackUrl,
-            params,
-            checks,
-            { exchangeBody: { client_id: options.clientId } }
-          )
-          return { tokens: response }
-        },
-      },
-      userinfo: {
-        url: "https://api.twitter.com/2/users/me",
-        params: { "user.fields": "profile_image_url" },
-      },
-      profile({ data }) {
-        return {
-          id: data.id,
-          name: data.name,
-          // NOTE: E-mail is currently unsupported by OAuth 2 Twitter.
-          email: null,
-          image: data.profile_image_url,
-        }
-      },
-      checks: ["pkce", "state"],
-      style: {
-        logo: "/twitter.svg",
-        logoDark: "/twitter-dark.svg",
-        bg: "#fff",
-        text: "#1da1f2",
-        bgDark: "#1da1f2",
-        textDark: "#fff",
-      },
-      options,
-    }
-  }
-
-  return TwitterLegacy(options)
-}
diff --git a/node_modules/next-auth/src/providers/united-effects.ts b/node_modules/next-auth/src/providers/united-effects.ts
deleted file mode 100644
index 61315f3..0000000
--- a/node_modules/next-auth/src/providers/united-effects.ts
+++ /dev/null
@@ -1,31 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface UnitedEffectsProfile extends Record<string, any> {
-  sub: string
-  email: string
-}
-
-export default function UnitedEffects<P extends UnitedEffectsProfile>(
-  options: OAuthUserConfig<P> & { issuer: string }
-): OAuthConfig<P> {
-  return {
-    id: "united-effects",
-    name: "United Effects",
-    wellKnown: `${options.issuer}/.well-known/openid-configuration`,
-    type: "oauth",
-    authorization: {
-      params: { scope: "openid email profile", resource: options.issuer },
-    },
-    checks: ["pkce", "state"],
-    idToken: true,
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: null,
-        email: profile.email,
-        image: null,
-      }
-    },
-    options,
-  }
-}
\ No newline at end of file
diff --git a/node_modules/next-auth/src/providers/vk.ts b/node_modules/next-auth/src/providers/vk.ts
deleted file mode 100644
index ee6aee9..0000000
--- a/node_modules/next-auth/src/providers/vk.ts
+++ /dev/null
@@ -1,318 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface VkProfile {
-  // https://dev.vk.com/reference/objects/user
-  response: Array<{
-    id: number
-    first_name: string
-    last_name: string
-    photo_100: string
-    can_access_closed: boolean
-    is_closed: boolean
-    deactivated?: string
-    sex?: 0 | 1 | 2
-    screen_name?: string
-    photo_50?: string
-    online?: 0 | 1
-    online_mobile?: 0 | 1
-    online_app?: number
-    verified?: 0 | 1
-    trending?: 0 | 1
-    friend_status?: 0 | 1 | 2 | 3
-    first_name_nom?: string
-    first_name_gen?: string
-    first_name_dat?: string
-    first_name_acc?: string
-    first_name_ins?: string
-    first_name_abl?: string
-    last_name_nom?: string
-    last_name_gen?: string
-    last_name_dat?: string
-    last_name_acc?: string
-    last_name_ins?: string
-    last_name_abl?: string
-    nickname?: string
-    maiden_name?: string
-    domain?: string
-    bdate?: string
-    city?: {
-      id: number
-      title: string
-    }
-    country?: {
-      id: number
-      title: string
-    }
-    timezone?: number
-    photo_200?: string
-    photo_max?: string
-    photo_200_orig?: string
-    photo_400_orig?: string
-    photo_max_orig?: string
-    photo_id?: string
-    has_photo?: 0 | 1
-    has_mobile?: 0 | 1
-    is_friend?: 0 | 1
-    can_post?: 0 | 1
-    can_see_all_posts?: 0 | 1
-    can_see_audio?: 0 | 1
-    connections?: {
-      facebook?: string
-      skype?: string
-      twitter?: string
-      livejournal?: string
-      instagram?: string
-    }
-    photo_400?: string
-    wall_default?: "owner" | "all"
-    interests?: string
-    books?: string
-    tv?: string
-    quotes?: string
-    about?: string
-    games?: string
-    movies?: string
-    activities?: string
-    music?: string
-    can_write_private_message?: 0 | 1
-    can_send_friend_request?: 0 | 1
-    contacts?: {
-      mobile_phone?: string
-      home_phone?: string
-    }
-    site?: string
-    status_audio?: {
-      access_key?: string
-      artist: string
-      id: number
-      owner_id: number
-      title: string
-      url?: string
-      duration: number
-      date?: number
-      album_id?: number
-      genre_id?: number
-      performer?: string
-    }
-    status?: string
-    last_seen?: {
-      platform?: 1 | 2 | 3 | 4 | 5 | 6 | 7
-      time?: number
-    }
-    exports?: {
-      facebook?: number
-      livejournal?: number
-      twitter?: number
-      instagram?: number
-    }
-    crop_photo?: {
-      photo: {
-        access_key?: string
-        album_id: number
-        date: number
-        height?: number
-        id: number
-        images?: Array<{
-          height?: number
-          type?: "s" | "m" | "x" | "l" | "o" | "p" | "q" | "r" | "y" | "z" | "w"
-          url?: string
-          width?: number
-        }>
-        lat?: number
-        long?: number
-        owner_id: number
-        photo_256?: string
-        can_comment?: 0 | 1
-        place?: string
-        post_id?: number
-        sizes?: Array<{
-          height: number
-          url: string
-          src?: string
-          type:
-            | "s"
-            | "m"
-            | "x"
-            | "o"
-            | "p"
-            | "q"
-            | "r"
-            | "k"
-            | "l"
-            | "y"
-            | "z"
-            | "c"
-            | "w"
-            | "a"
-            | "b"
-            | "e"
-            | "i"
-            | "d"
-            | "j"
-            | "temp"
-            | "h"
-            | "g"
-            | "n"
-            | "f"
-            | "max"
-          width: number
-        }>
-        text?: string
-        user_id?: number
-        width?: number
-        has_tags: boolean
-      }
-      crop: {
-        x: number
-        y: number
-        x2: number
-        y2: number
-      }
-      rect: {
-        x: number
-        y: number
-        x2: number
-        y2: number
-      }
-    }
-    followers_count?: number
-    blacklisted?: 0 | 1
-    blacklisted_by_me?: 0 | 1
-    is_favorite?: 0 | 1
-    is_hidden_from_feed?: 0 | 1
-    common_count?: number
-    occupation?: {
-      id?: number
-      name?: string
-      type?: "work" | "school" | "university"
-    }
-    career?: {
-      group_id?: number
-      company?: string
-      country_id?: number
-      city_id?: number
-      city_name?: string
-      from?: number
-      until?: number
-      position?: string
-    }
-    military?: {
-      country_id: number
-      from?: number
-      unit: string
-      unit_id: number
-      until?: number
-    }
-    education?: {
-      university?: number
-      university_name?: string
-      faculty?: number
-      faculty_name?: string
-      graduation?: number
-    }
-    home_town?: string
-    relation?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8
-    relation_partner?: {
-      deactivated?: string
-      first_name: string
-      hidden?: number
-      id: number
-      last_name: string
-      can_access_closed?: boolean
-      is_closed?: boolean
-    }
-    personal?: {
-      alcohol?: 1 | 2 | 3 | 4 | 5
-      inspired_by?: string
-      langs?: string[]
-      life_main?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8
-      people_main?: 1 | 2 | 3 | 4 | 5 | 6
-      political?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
-      religion?: string
-      smoking?: 1 | 2 | 3 | 4 | 5
-    }
-    universities?: Array<{
-      chair?: number
-      chair_name?: string
-      city?: number
-      country?: number
-      education_form?: string
-      education_status?: string
-      faculty?: number
-      faculty_name?: string
-      graduation?: number
-      id?: number
-      name?: string
-      university_group_id?: number
-    }>
-    schools?: Array<{
-      city?: number
-      class?: string
-      country?: number
-      id?: string
-      name?: string
-      type?: number
-      type_str?: string
-      year_from?: number
-      year_graduated?: number
-      year_to?: number
-      speciality?: string
-    }>
-    relatives?: Array<{
-      id?: number
-      name?: string
-      type: "parent" | "child" | "grandparent" | "grandchild" | "sibling"
-    }>
-    counters?: {
-      albums?: number
-      videos?: number
-      audios?: number
-      photos?: number
-      notes?: number
-      friends?: number
-      groups?: number
-      online_friends?: number
-      mutual_friends?: number
-      user_videos?: number
-      followers?: number
-      pages?: number
-    }
-    is_no_index?: 0 | 1
-  }>
-}
-
-export default function VK<P extends Record<string, any> = VkProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  const apiVersion = "5.131" // https://vk.com/dev/versions
-
-  return {
-    id: "vk",
-    name: "VK",
-    type: "oauth",
-    authorization: `https://oauth.vk.com/authorize?scope=email&v=${apiVersion}`,
-    client: {
-      token_endpoint_auth_method: "client_secret_post",
-    },
-    token: `https://oauth.vk.com/access_token?v=${apiVersion}`,
-    userinfo: `https://api.vk.com/method/users.get?fields=photo_100&v=${apiVersion}`,
-    profile(result: P) {
-      const profile = result.response?.[0] ?? {}
-      return {
-        id: profile.id,
-        name: [profile.first_name, profile.last_name].filter(Boolean).join(" "),
-        email: null,
-        image: profile.photo_100,
-      }
-    },
-    style: {
-      logo: "/vk.svg",
-      logoDark: "/vk-dark.svg",
-      bg: "#fff",
-      text: "#07F",
-      bgDark: "#07F",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/wikimedia.ts b/node_modules/next-auth/src/providers/wikimedia.ts
deleted file mode 100644
index a3666ea..0000000
--- a/node_modules/next-auth/src/providers/wikimedia.ts
+++ /dev/null
@@ -1,193 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export type WikimediaGroup =
-  | "*"
-  | "user"
-  | "autoconfirmed"
-  | "extendedconfirmed"
-  | "bot"
-  | "sysop"
-  | "bureaucrat"
-  | "steward"
-  | "accountcreator"
-  | "import"
-  | "transwiki"
-  | "ipblock-exempt"
-  | "oversight"
-  | "rollbacker"
-  | "propertycreator"
-  | "wikidata-staff"
-  | "flood"
-  | "translationadmin"
-  | "confirmed"
-  | "flow-bot"
-  | "checkuser"
-
-export type WikimediaGrant =
-  | "basic"
-  | "blockusers"
-  | "checkuser"
-  | "createaccount"
-  | "delete"
-  | "editinterface"
-  | "editmycssjs"
-  | "editmyoptions"
-  | "editmywatchlist"
-  | "editpage"
-  | "editprotected"
-  | "editsiteconfig"
-  | "globalblock"
-  | "highvolume"
-  | "import"
-  | "mergehistory"
-  | "oath"
-  | "oversight"
-  | "patrol"
-  | "privateinfo"
-  | "protect"
-  | "rollback"
-  | "sendemail"
-  | "shortenurls"
-  | "uploadfile"
-  | "viewdeleted"
-  | "viewmywatchlist"
-
-export type WikimediaRight =
-  | "abusefilter-log"
-  | "apihighlimits"
-  | "applychangetags"
-  | "autoconfirmed"
-  | "autopatrol"
-  | "autoreview"
-  | "bigdelete"
-  | "block"
-  | "blockemail"
-  | "bot"
-  | "browsearchive"
-  | "changetags"
-  | "checkuser"
-  | "checkuser-log"
-  | "createaccount"
-  | "createpage"
-  | "createpagemainns"
-  | "createtalk"
-  | "delete"
-  | "delete-redirect"
-  | "deletedhistory"
-  | "deletedtext"
-  | "deletelogentry"
-  | "deleterevision"
-  | "edit"
-  | "edit-legal"
-  | "editinterface"
-  | "editmyoptions"
-  | "editmyusercss"
-  | "editmyuserjs"
-  | "editmyuserjson"
-  | "editmywatchlist"
-  | "editprotected"
-  | "editsemiprotected"
-  | "editsitecss"
-  | "editsitejs"
-  | "editsitejson"
-  | "editusercss"
-  | "edituserjs"
-  | "edituserjson"
-  | "globalblock"
-  | "import"
-  | "importupload"
-  | "ipblock-exempt"
-  | "item-merge"
-  | "item-redirect"
-  | "item-term"
-  | "markbotedits"
-  | "massmessage"
-  | "mergehistory"
-  | "minoredit"
-  | "move"
-  | "move-subpages"
-  | "movefile"
-  | "movestable"
-  | "mwoauth-authonlyprivate"
-  | "nominornewtalk"
-  | "noratelimit"
-  | "nuke"
-  | "patrol"
-  | "patrolmarks"
-  | "property-create"
-  | "property-term"
-  | "protect"
-  | "purge"
-  | "read"
-  | "reupload"
-  | "reupload-own"
-  | "reupload-shared"
-  | "rollback"
-  | "sendemail"
-  | "skipcaptcha"
-  | "suppressionlog"
-  | "tboverride"
-  | "templateeditor"
-  | "torunblocked"
-  | "transcode-reset"
-  | "translate"
-  | "undelete"
-  | "unwatchedpages"
-  | "upload"
-  | "upload_by_url"
-  | "viewmywatchlist"
-  | "viewsuppressed"
-  | "writeapi"
-
-export interface WikimediaProfile extends Record<string, any> {
-  sub: string
-  username: string
-  editcount: number
-  confirmed_email: boolean
-  blocked: boolean
-  registered: string
-  groups: WikimediaGroup[]
-  rights: WikimediaRight[]
-  grants: WikimediaGrant[]
-  realname: string
-  email: string
-}
-
-/**
- * Wikimedia OAuth2 provider.
- * All Wikimedia wikis are supported. Wikipedia, Wikidata, etc...
- *
- * (Register)[https://meta.wikimedia.org/wiki/Special:OAuthConsumerRegistration]
- * (Documentation)[https://www.mediawiki.org/wiki/Extension:OAuth]
- */
-export default function Wikimedia<P extends WikimediaProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "wikimedia",
-    name: "Wikimedia",
-    type: "oauth",
-    token: "https://meta.wikimedia.org/w/rest.php/oauth2/access_token",
-    userinfo: "https://meta.wikimedia.org/w/rest.php/oauth2/resource/profile",
-    authorization: {
-      url: "https://meta.wikimedia.org/w/rest.php/oauth2/authorize",
-      params: { scope: "" },
-    },
-    profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.username,
-        email: profile.email,
-      }
-    },
-    style: {
-      logo: "/wikimedia.svg",
-      logoDark: "/wikimedia-dark.svg",
-      bg: "#fff",
-      text: "#000",
-      bgDark: "#000",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/wordpress.js b/node_modules/next-auth/src/providers/wordpress.js
deleted file mode 100644
index 22a7288..0000000
--- a/node_modules/next-auth/src/providers/wordpress.js
+++ /dev/null
@@ -1,21 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function WordPress(options) {
-  return {
-    id: "wordpress",
-    name: "WordPress.com",
-    type: "oauth",
-    authorization:
-      "https://public-api.wordpress.com/oauth2/authorize?scope=auth",
-    token: "https://public-api.wordpress.com/oauth2/token",
-    userinfo: "https://public-api.wordpress.com/rest/v1/me",
-    profile(profile) {
-      return {
-        id: profile.ID,
-        name: profile.display_name,
-        email: profile.email,
-        image: profile.avatar_URL,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/workos.ts b/node_modules/next-auth/src/providers/workos.ts
deleted file mode 100644
index 69e070b..0000000
--- a/node_modules/next-auth/src/providers/workos.ts
+++ /dev/null
@@ -1,57 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface WorkOSProfile extends Record<string, any> {
-  object: string
-  id: string
-  organization_id: string
-  connection_id: string
-  connection_type: string
-  idp_id: string
-  email: string
-  first_name: string
-  last_name: string
-  raw_attributes: {
-    id: string
-    email: string
-    lastName: string
-    firstName: string
-    picture: string
-  }
-}
-
-export default function WorkOS<P extends WorkOSProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  const { issuer = "https://api.workos.com/" } = options
-
-  return {
-    id: "workos",
-    name: "WorkOS",
-    type: "oauth",
-    authorization: `${issuer}sso/authorize`,
-    token: {
-      url: `${issuer}sso/token`,
-    },
-    client: {
-      token_endpoint_auth_method: "client_secret_post",
-    },
-    userinfo: `${issuer}sso/profile`,
-    profile(profile) {
-      return {
-        id: profile.id,
-        name: `${profile.first_name} ${profile.last_name}`,
-        email: profile.email,
-        image: profile.raw_attributes.picture ?? null,
-      }
-    },
-    style: {
-      logo: "/workos.svg",
-      logoDark: "/workos-dark.svg",
-      bg: "#fff",
-      text: "#6363f1",
-      bgDark: "#6363f1",
-      textDark: "#fff",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/yandex.ts b/node_modules/next-auth/src/providers/yandex.ts
deleted file mode 100644
index 3d84ae8..0000000
--- a/node_modules/next-auth/src/providers/yandex.ts
+++ /dev/null
@@ -1,155 +0,0 @@
-/**
- * <div style={{backgroundColor: "#ffcc00", display: "flex", justifyContent: "space-between", color: "#000", padding: 16}}>
- * <span>Built-in <b>Yandex</b> integration.</span>
- * <a href="https://github.com">
- *   <img style={{display: "block"}} src="https://authjs.dev/img/providers/yandex.svg" height="48" width="48"/>
- * </a>
- * </div>
- *
- * ---
- * @module providers/yandex
- */
-
-import { OAuthConfig, OAuthUserConfig } from "."
-
-/**
- * @see [Getting information about the user](https://yandex.com/dev/id/doc/en/user-information)
- * @see [Access to email address](https://yandex.com/dev/id/doc/en/user-information#email-access)
- * @see [Access to the user's profile picture](https://yandex.com/dev/id/doc/en/user-information#avatar-access)
- * @see [Access to the date of birth](https://yandex.com/dev/id/doc/en/user-information#birthday-access)
- * @see [Access to login, first name, last name, and gender](https://yandex.com/dev/id/doc/en/user-information#name-access)
- * @see [Access to the phone number](https://yandex.com/dev/id/doc/en/user-information#phone-access)
- */
-export interface YandexProfile {
-  /** User's Yandex login. */
-  login: string
-  /** Yandex user's unique ID. */
-  id: string
-  /**
-   * The ID of the app the OAuth token in the request was issued for.
-   * Available in the [app properties](https://oauth.yandex.com/). To open properties, click the app name.
-   */
-  client_id: string
-  /** Authorized Yandex user ID. It is formed on the Yandex side based on the `client_id` and `user_id` pair. */
-  psuid: string
-  /** An array of the user's email addresses. Currently only includes the default email address. */
-  emails?: string[]
-  /** The default email address for contacting the user. */
-  default_email?: string
-  /**
-   * Indicates that the stub (profile picture that is automatically assigned when registering in Yandex)
-   * ID is specified in the `default_avatar_id` field.
-   */
-  is_avatar_empty?: boolean
-  /**
-   * ID of the Yandex user's profile picture.
-   * The profile picture with this ID can be downloaded via a link that looks like this:
-   * @example "https://avatars.yandex.net/get-yapic/31804/BYkogAC6AoB17bN1HKRFAyKiM4-1/islands-200"
-   */
-  default_avatar_id?:
-    | "islands-small"
-    | "islands-34"
-    | "islands-middle"
-    | "islands-50"
-    | "islands-retina-small"
-    | "islands-68"
-    | "islands-75"
-    | "islands-retina-middle"
-    | "islands-retina-50"
-    | "islands-200"
-  /**
-   * The user's date of birth in YYYY-MM-DD format.
-   * Unknown elements of the date are filled in with zeros, such as: `0000-12-23`.
-   * If the user's date of birth is unknow, birthday will be `null`
-   */
-  birthday?: string | null
-  first_name?: string
-  last_name?: string
-  display_name?: string
-  /**
-   * The first and last name that the user specified in Yandex ID.
-   * Non-Latin characters of the first and last names are presented in Unicode format.
-   */
-  real_name?: string
-  /** User's gender. Possible values: Male: `male', Female: `female`, Unknown gender: `null` */
-  sex?: string
-  /**
-   * The default phone number for contacting the user.
-   * The API can exclude the user's phone number from the response at its discretion.
-   * The field contains the following parameters:
-   * id: Phone number ID.
-   * number: The user's phone number.
-   */
-  default_phone?: { id: number; number: string }
-}
-
-/**
- * Add Yandex login to your page
- *
- * ## Example
- *
- * ```ts
- * import { Auth } from "@auth/core"
- * import Yandex from "@auth/core/providers/yandex"
- *
- * const request = new Request("https://example.com")
- * const response = await Auth(request, {
- *  providers: [Yandex({ clientId: "", clientSecret: "" })],
- * })
- * ```
- *
- * ## Resources
- *
- * @see [Yandex - Creating an OAuth app](https://yandex.com/dev/id/doc/en/register-client#create)
- * @see [Yandex - Manage OAuth apps](https://oauth.yandex.com/)
- * @see [Yandex - OAuth documentation](https://yandex.com/dev/id/doc/en/)
- * @see [Learn more about OAuth](https://authjs.dev/concepts/oauth)
- * @see [Source code](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/yandex.ts)
- *
- *:::tip
- * The Yandex provider comes with a [default configuration](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/yandex.ts).
- * To override the defaults for your use case, check out [customizing a built-in OAuth provider](https://authjs.dev/guides/providers/custom-provider#override-default-options).
- * :::
- *
- * :::info **Disclaimer**
- * If you think you found a bug in the default configuration, you can [open an issue](https://authjs.dev/new/provider-issue).
- *
- * Auth.js strictly adheres to the specification and it cannot take responsibility for any deviation from
- * the spec by the provider. You can open an issue, but if the problem is non-compliance with the spec,
- * we might not pursue a resolution. You can ask for more help in [Discussions](https://authjs.dev/new/github-discussions).
- * :::
- */
-export default function Yandex(
-  options: OAuthUserConfig<YandexProfile>
-): OAuthConfig<YandexProfile> {
-  return {
-    id: "yandex",
-    name: "Yandex",
-    type: "oauth",
-    /** @see [Data access](https://yandex.com/dev/id/doc/en/register-client#access) */
-    authorization:
-      "https://oauth.yandex.ru/authorize?scope=login:info+login:email+login:avatar",
-    token: "https://oauth.yandex.ru/token",
-    userinfo: "https://login.yandex.ru/info?format=json",
-    profile(profile) {
-      return {
-        id: profile.id,
-        name: profile.display_name ?? profile.real_name ?? profile.first_name,
-        email: profile.default_email ?? profile.emails?.[0] ?? null,
-        image:
-          !profile.is_avatar_empty && profile.default_avatar_id
-            ? `https://avatars.yandex.net/get-yapic/${profile.default_avatar_id}/islands-200`
-            : null,
-      }
-    },
-    style: {
-      logo: "/yandex.svg",
-      logoDark: "/yandex.svg",
-      bg: "#ffcc00",
-      text: "#000",
-      bgDark: "#ffcc00",
-      textDark: "#000",
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/zitadel.ts b/node_modules/next-auth/src/providers/zitadel.ts
deleted file mode 100644
index 57ecbd2..0000000
--- a/node_modules/next-auth/src/providers/zitadel.ts
+++ /dev/null
@@ -1,51 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface ZitadelProfile extends Record<string, any> {
-  amr: string // Authentication Method References as defined in RFC8176
-  aud: string // The audience of the token, by default all client id's and the project id are included
-  auth_time: number // Unix time of the authentication
-  azp: string // Client id of the client who requested the token
-  email: string // Email Address of the subject
-  email_verified: boolean // if the email was verified by ZITADEL
-  exp: number // Time the token expires (as unix time)
-  family_name: string // The subjects family name
-  given_name: string // Given name of the subject
-  gender: string // Gender of the subject
-  iat: number // Time of the token was issued at (as unix time)
-  iss: string // Issuing domain of a token
-  jti: string // Unique id of the token
-  locale: string // Language from the subject
-  name: string // The subjects full name
-  nbf: number // Time the token must not be used before (as unix time)
-  picture: string // The subjects profile picture
-  phone: string // Phone number provided by the user
-  phone_verified: boolean // if the phonenumber was verified by ZITADEL
-  preferred_username: string // ZITADEL's login name of the user. Consist of username@primarydomain
-  sub: string // Subject ID of the user
-}
-
-export default function Zitadel<P extends ZitadelProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  const { issuer } = options
-
-  return {
-    id: "zitadel",
-    name: "ZITADEL",
-    type: "oauth",
-    version: "2",
-    wellKnown: `${issuer}/.well-known/openid-configuration`,
-    authorization: { params: { scope: "openid email profile" } },
-    idToken: true,
-    checks: ["pkce", "state"],
-    async profile(profile) {
-      return {
-        id: profile.sub,
-        name: profile.name,
-        email: profile.email,
-        image: profile.picture,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/zoho.js b/node_modules/next-auth/src/providers/zoho.js
deleted file mode 100644
index 27c3eca..0000000
--- a/node_modules/next-auth/src/providers/zoho.js
+++ /dev/null
@@ -1,21 +0,0 @@
-/** @type {import(".").OAuthProvider} */
-export default function Zoho(options) {
-  return {
-    id: "zoho",
-    name: "Zoho",
-    type: "oauth",
-    authorization:
-      "https://accounts.zoho.com/oauth/v2/auth?scope=AaaServer.profile.Read",
-    token: "https://accounts.zoho.com/oauth/v2/token",
-    userinfo: "https://accounts.zoho.com/oauth/user/info",
-    profile(profile) {
-      return {
-        id: profile.ZUID,
-        name: `${profile.First_Name} ${profile.Last_Name}`,
-        email: profile.Email,
-        image: null,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/providers/zoom.ts b/node_modules/next-auth/src/providers/zoom.ts
deleted file mode 100644
index 6c9b1a5..0000000
--- a/node_modules/next-auth/src/providers/zoom.ts
+++ /dev/null
@@ -1,52 +0,0 @@
-import type { OAuthConfig, OAuthUserConfig } from "."
-
-export interface ZoomProfile extends Record<string, any> {
-  id: string
-  first_name: string
-  last_name: string
-  email: string
-  type: number
-  role_name: string
-  pmi: number
-  use_pmi: boolean
-  vanity_url: string
-  personal_meeting_url: string
-  timezone: string
-  verified: number
-  dept: string
-  created_at: string
-  last_login_time: string
-  last_client_version: string
-  pic_url: string
-  host_key: string
-  jid: string
-  group_ids: string[]
-  im_group_ids: string[]
-  account_id: string
-  language: string
-  phone_country: string
-  phone_number: string
-  status: string
-}
-
-export default function Zoom<P extends ZoomProfile>(
-  options: OAuthUserConfig<P>
-): OAuthConfig<P> {
-  return {
-    id: "zoom",
-    name: "Zoom",
-    type: "oauth",
-    authorization: "https://zoom.us/oauth/authorize?scope",
-    token: "https://zoom.us/oauth/token",
-    userinfo: "https://api.zoom.us/v2/users/me",
-    profile(profile) {
-      return {
-        id: profile.id,
-        name: `${profile.first_name} ${profile.last_name}`,
-        email: profile.email,
-        image: profile.pic_url,
-      }
-    },
-    options,
-  }
-}
diff --git a/node_modules/next-auth/src/react/index.tsx b/node_modules/next-auth/src/react/index.tsx
deleted file mode 100644
index 24fae2c..0000000
--- a/node_modules/next-auth/src/react/index.tsx
+++ /dev/null
@@ -1,494 +0,0 @@
-// Note about signIn() and signOut() methods:
-//
-// On signIn() and signOut() we pass 'json: true' to request a response in JSON
-// instead of HTTP as redirect URLs on other domains are not returned to
-// requests made using the fetch API in the browser, and we need to ask the API
-// to return the response as a JSON object (the end point still defaults to
-// returning an HTTP response with a redirect for non-JavaScript clients).
-//
-// We use HTTP POST requests with CSRF Tokens to protect against CSRF attacks.
-
-import * as React from "react"
-import _logger, { proxyLogger } from "../utils/logger"
-import parseUrl from "../utils/parse-url"
-import { Session } from ".."
-import {
-  BroadcastChannel,
-  CtxOrReq,
-  apiBaseUrl,
-  fetchData,
-  now,
-  AuthClientConfig,
-} from "../client/_utils"
-
-import type {
-  ClientSafeProvider,
-  LiteralUnion,
-  SessionProviderProps,
-  SignInAuthorizationParams,
-  SignInOptions,
-  SignInResponse,
-  SignOutParams,
-  SignOutResponse,
-  UseSessionOptions,
-} from "./types"
-
-import type {
-  BuiltInProviderType,
-  RedirectableProviderType,
-} from "../providers"
-
-export * from "./types"
-
-// This behaviour mirrors the default behaviour for getting the site name that
-// happens server side in server/index.js
-// 1. An empty value is legitimate when the code is being invoked client side as
-//    relative URLs are valid in that context and so defaults to empty.
-// 2. When invoked server side the value is picked up from an environment
-//    variable and defaults to 'http://localhost:3000'.
-const __NEXTAUTH: AuthClientConfig = {
-  baseUrl: parseUrl(process.env.NEXTAUTH_URL ?? process.env.VERCEL_URL).origin,
-  basePath: parseUrl(process.env.NEXTAUTH_URL).path,
-  baseUrlServer: parseUrl(
-    process.env.NEXTAUTH_URL_INTERNAL ??
-      process.env.NEXTAUTH_URL ??
-      process.env.VERCEL_URL
-  ).origin,
-  basePathServer: parseUrl(
-    process.env.NEXTAUTH_URL_INTERNAL ?? process.env.NEXTAUTH_URL
-  ).path,
-  _lastSync: 0,
-  _session: undefined,
-  _getSession: () => {},
-}
-
-const broadcast = BroadcastChannel()
-
-const logger = proxyLogger(_logger, __NEXTAUTH.basePath)
-
-function useOnline() {
-  const [isOnline, setIsOnline] = React.useState(
-    typeof navigator !== "undefined" ? navigator.onLine : false
-  )
-
-  const setOnline = () => setIsOnline(true)
-  const setOffline = () => setIsOnline(false)
-
-  React.useEffect(() => {
-    window.addEventListener("online", setOnline)
-    window.addEventListener("offline", setOffline)
-
-    return () => {
-      window.removeEventListener("online", setOnline)
-      window.removeEventListener("offline", setOffline)
-    }
-  }, [])
-
-  return isOnline
-}
-
-type UpdateSession = (data?: any) => Promise<Session | null>
-
-export type SessionContextValue<R extends boolean = false> = R extends true
-  ?
-      | { update: UpdateSession; data: Session; status: "authenticated" }
-      | { update: UpdateSession; data: null; status: "loading" }
-  :
-      | { update: UpdateSession; data: Session; status: "authenticated" }
-      | {
-          update: UpdateSession
-          data: null
-          status: "unauthenticated" | "loading"
-        }
-
-export const SessionContext = React.createContext?.<
-  SessionContextValue | undefined
->(undefined)
-
-/**
- * React Hook that gives you access
- * to the logged in user's session data.
- *
- * [Documentation](https://next-auth.js.org/getting-started/client#usesession)
- */
-export function useSession<R extends boolean>(
-  options?: UseSessionOptions<R>
-): SessionContextValue<R> {
-  if (!SessionContext) {
-    throw new Error("React Context is unavailable in Server Components")
-  }
-
-  // @ts-expect-error Satisfy TS if branch on line below
-  const value: SessionContextValue<R> = React.useContext(SessionContext)
-  if (!value && process.env.NODE_ENV !== "production") {
-    throw new Error(
-      "[next-auth]: `useSession` must be wrapped in a <SessionProvider />"
-    )
-  }
-
-  const { required, onUnauthenticated } = options ?? {}
-
-  const requiredAndNotLoading = required && value.status === "unauthenticated"
-
-  React.useEffect(() => {
-    if (requiredAndNotLoading) {
-      const url = `/api/auth/signin?${new URLSearchParams({
-        error: "SessionRequired",
-        callbackUrl: window.location.href,
-      })}`
-      if (onUnauthenticated) onUnauthenticated()
-      else window.location.href = url
-    }
-  }, [requiredAndNotLoading, onUnauthenticated])
-
-  if (requiredAndNotLoading) {
-    return {
-      data: value.data,
-      update: value.update,
-      status: "loading",
-    }
-  }
-
-  return value
-}
-
-export type GetSessionParams = CtxOrReq & {
-  event?: "storage" | "timer" | "hidden" | string
-  triggerEvent?: boolean
-  broadcast?: boolean
-}
-
-export async function getSession(params?: GetSessionParams) {
-  const session = await fetchData<Session>(
-    "session",
-    __NEXTAUTH,
-    logger,
-    params
-  )
-  if (params?.broadcast ?? true) {
-    broadcast.post({ event: "session", data: { trigger: "getSession" } })
-  }
-  return session
-}
-
-/**
- * Returns the current Cross Site Request Forgery Token (CSRF Token)
- * required to make POST requests (e.g. for signing in and signing out).
- * You likely only need to use this if you are not using the built-in
- * `signIn()` and `signOut()` methods.
- *
- * [Documentation](https://next-auth.js.org/getting-started/client#getcsrftoken)
- */
-export async function getCsrfToken(params?: CtxOrReq) {
-  const response = await fetchData<{ csrfToken: string }>(
-    "csrf",
-    __NEXTAUTH,
-    logger,
-    params
-  )
-  return response?.csrfToken
-}
-
-/**
- * It calls `/api/auth/providers` and returns
- * a list of the currently configured authentication providers.
- * It can be useful if you are creating a dynamic custom sign in page.
- *
- * [Documentation](https://next-auth.js.org/getting-started/client#getproviders)
- */
-export async function getProviders() {
-  return await fetchData<
-    Record<LiteralUnion<BuiltInProviderType>, ClientSafeProvider>
-  >("providers", __NEXTAUTH, logger)
-}
-
-/**
- * Client-side method to initiate a signin flow
- * or send the user to the signin page listing all possible providers.
- * Automatically adds the CSRF token to the request.
- *
- * [Documentation](https://next-auth.js.org/getting-started/client#signin)
- */
-export async function signIn<
-  P extends RedirectableProviderType | undefined = undefined
->(
-  provider?: LiteralUnion<
-    P extends RedirectableProviderType
-      ? P | BuiltInProviderType
-      : BuiltInProviderType
-  >,
-  options?: SignInOptions,
-  authorizationParams?: SignInAuthorizationParams
-): Promise<
-  P extends RedirectableProviderType ? SignInResponse | undefined : undefined
-> {
-  const { callbackUrl = window.location.href, redirect = true } = options ?? {}
-
-  const baseUrl = apiBaseUrl(__NEXTAUTH)
-  const providers = await getProviders()
-
-  if (!providers) {
-    window.location.href = `${baseUrl}/error`
-    return
-  }
-
-  if (!provider || !(provider in providers)) {
-    window.location.href = `${baseUrl}/signin?${new URLSearchParams({
-      callbackUrl,
-    })}`
-    return
-  }
-
-  const isCredentials = providers[provider].type === "credentials"
-  const isEmail = providers[provider].type === "email"
-  const isSupportingReturn = isCredentials || isEmail
-
-  const signInUrl = `${baseUrl}/${
-    isCredentials ? "callback" : "signin"
-  }/${provider}`
-
-  const _signInUrl = `${signInUrl}?${new URLSearchParams(authorizationParams)}`
-
-  const res = await fetch(_signInUrl, {
-    method: "post",
-    headers: {
-      "Content-Type": "application/x-www-form-urlencoded",
-    },
-    // @ts-expect-error
-    body: new URLSearchParams({
-      ...options,
-      csrfToken: await getCsrfToken(),
-      callbackUrl,
-      json: true,
-    }),
-  })
-
-  const data = await res.json()
-
-  // TODO: Do not redirect for Credentials and Email providers by default in next major
-  if (redirect || !isSupportingReturn) {
-    const url = data.url ?? callbackUrl
-    window.location.href = url
-    // If url contains a hash, the browser does not reload the page. We reload manually
-    if (url.includes("#")) window.location.reload()
-    return
-  }
-
-  const error = new URL(data.url).searchParams.get("error")
-
-  if (res.ok) {
-    await __NEXTAUTH._getSession({ event: "storage" })
-  }
-
-  return {
-    error,
-    status: res.status,
-    ok: res.ok,
-    url: error ? null : data.url,
-  } as any
-}
-
-/**
- * Signs the user out, by removing the session cookie.
- * Automatically adds the CSRF token to the request.
- *
- * [Documentation](https://next-auth.js.org/getting-started/client#signout)
- */
-export async function signOut<R extends boolean = true>(
-  options?: SignOutParams<R>
-): Promise<R extends true ? undefined : SignOutResponse> {
-  const { callbackUrl = window.location.href } = options ?? {}
-  const baseUrl = apiBaseUrl(__NEXTAUTH)
-  const fetchOptions = {
-    method: "post",
-    headers: {
-      "Content-Type": "application/x-www-form-urlencoded",
-    },
-    // @ts-expect-error
-    body: new URLSearchParams({
-      csrfToken: await getCsrfToken(),
-      callbackUrl,
-      json: true,
-    }),
-  }
-  const res = await fetch(`${baseUrl}/signout`, fetchOptions)
-  const data = await res.json()
-
-  broadcast.post({ event: "session", data: { trigger: "signout" } })
-
-  if (options?.redirect ?? true) {
-    const url = data.url ?? callbackUrl
-    window.location.href = url
-    // If url contains a hash, the browser does not reload the page. We reload manually
-    if (url.includes("#")) window.location.reload()
-    // @ts-expect-error
-    return
-  }
-
-  await __NEXTAUTH._getSession({ event: "storage" })
-
-  return data
-}
-
-/**
- * Provider to wrap the app in to make session data available globally.
- * Can also be used to throttle the number of requests to the endpoint
- * `/api/auth/session`.
- *
- * [Documentation](https://next-auth.js.org/getting-started/client#sessionprovider)
- */
-export function SessionProvider(props: SessionProviderProps) {
-  if (!SessionContext) {
-    throw new Error("React Context is unavailable in Server Components")
-  }
-
-  const { children, basePath, refetchInterval, refetchWhenOffline } = props
-
-  if (basePath) __NEXTAUTH.basePath = basePath
-
-  /**
-   * If session was `null`, there was an attempt to fetch it,
-   * but it failed, but we still treat it as a valid initial value.
-   */
-  const hasInitialSession = props.session !== undefined
-
-  /** If session was passed, initialize as already synced */
-  __NEXTAUTH._lastSync = hasInitialSession ? now() : 0
-
-  const [session, setSession] = React.useState(() => {
-    if (hasInitialSession) __NEXTAUTH._session = props.session
-    return props.session
-  })
-
-  /** If session was passed, initialize as not loading */
-  const [loading, setLoading] = React.useState(!hasInitialSession)
-
-  React.useEffect(() => {
-    __NEXTAUTH._getSession = async ({ event } = {}) => {
-      try {
-        const storageEvent = event === "storage"
-        // We should always update if we don't have a client session yet
-        // or if there are events from other tabs/windows
-        if (storageEvent || __NEXTAUTH._session === undefined) {
-          __NEXTAUTH._lastSync = now()
-          __NEXTAUTH._session = await getSession({
-            broadcast: !storageEvent,
-          })
-          setSession(__NEXTAUTH._session)
-          return
-        }
-
-        if (
-          // If there is no time defined for when a session should be considered
-          // stale, then it's okay to use the value we have until an event is
-          // triggered which updates it
-          !event ||
-          // If the client doesn't have a session then we don't need to call
-          // the server to check if it does (if they have signed in via another
-          // tab or window that will come through as a "stroage" event
-          // event anyway)
-          __NEXTAUTH._session === null ||
-          // Bail out early if the client session is not stale yet
-          now() < __NEXTAUTH._lastSync
-        ) {
-          return
-        }
-
-        // An event or session staleness occurred, update the client session.
-        __NEXTAUTH._lastSync = now()
-        __NEXTAUTH._session = await getSession()
-        setSession(__NEXTAUTH._session)
-      } catch (error) {
-        logger.error("CLIENT_SESSION_ERROR", error as Error)
-      } finally {
-        setLoading(false)
-      }
-    }
-
-    __NEXTAUTH._getSession()
-
-    return () => {
-      __NEXTAUTH._lastSync = 0
-      __NEXTAUTH._session = undefined
-      __NEXTAUTH._getSession = () => {}
-    }
-  }, [])
-
-  React.useEffect(() => {
-    // Listen for storage events and update session if event fired from
-    // another window (but suppress firing another event to avoid a loop)
-    // Fetch new session data but tell it to not to fire another event to
-    // avoid an infinite loop.
-    // Note: We could pass session data through and do something like
-    // `setData(message.data)` but that can cause problems depending
-    // on how the session object is being used in the client; it is
-    // more robust to have each window/tab fetch it's own copy of the
-    // session object rather than share it across instances.
-    const unsubscribe = broadcast.receive(() =>
-      __NEXTAUTH._getSession({ event: "storage" })
-    )
-
-    return () => unsubscribe()
-  }, [])
-
-  React.useEffect(() => {
-    const { refetchOnWindowFocus = true } = props
-    // Listen for when the page is visible, if the user switches tabs
-    // and makes our tab visible again, re-fetch the session, but only if
-    // this feature is not disabled.
-    const visibilityHandler = () => {
-      if (refetchOnWindowFocus && document.visibilityState === "visible")
-        __NEXTAUTH._getSession({ event: "visibilitychange" })
-    }
-    document.addEventListener("visibilitychange", visibilityHandler, false)
-    return () =>
-      document.removeEventListener("visibilitychange", visibilityHandler, false)
-  }, [props.refetchOnWindowFocus])
-
-  const isOnline = useOnline()
-  // TODO: Flip this behavior in next major version
-  const shouldRefetch = refetchWhenOffline !== false || isOnline
-
-  React.useEffect(() => {
-    if (refetchInterval && shouldRefetch) {
-      const refetchIntervalTimer = setInterval(() => {
-        if (__NEXTAUTH._session) {
-          __NEXTAUTH._getSession({ event: "poll" })
-        }
-      }, refetchInterval * 1000)
-      return () => clearInterval(refetchIntervalTimer)
-    }
-  }, [refetchInterval, shouldRefetch])
-
-  const value: any = React.useMemo(
-    () => ({
-      data: session,
-      status: loading
-        ? "loading"
-        : session
-        ? "authenticated"
-        : "unauthenticated",
-      async update(data) {
-        if (loading || !session) return
-        setLoading(true)
-        const newSession = await fetchData<Session>(
-          "session",
-          __NEXTAUTH,
-          logger,
-          { req: { body: { csrfToken: await getCsrfToken(), data } } }
-        )
-        setLoading(false)
-        if (newSession) {
-          setSession(newSession)
-          broadcast.post({ event: "session", data: { trigger: "getSession" } })
-        }
-        return newSession
-      },
-    }),
-    [session, loading]
-  )
-
-  return (
-    <SessionContext.Provider value={value}>{children}</SessionContext.Provider>
-  )
-}
diff --git a/node_modules/next-auth/src/react/types.ts b/node_modules/next-auth/src/react/types.ts
deleted file mode 100644
index 4d74838..0000000
--- a/node_modules/next-auth/src/react/types.ts
+++ /dev/null
@@ -1,85 +0,0 @@
-import type { Session } from ".."
-import type { BuiltInProviderType, ProviderType } from "../providers"
-
-export interface UseSessionOptions<R extends boolean> {
-  required: R
-  /** Defaults to `signIn` */
-  onUnauthenticated?: () => void
-}
-
-/**
- * Util type that matches some strings literally, but allows any other string as well.
- * @source https://github.com/microsoft/TypeScript/issues/29729#issuecomment-832522611
- */
-export type LiteralUnion<T extends U, U = string> =
-  | T
-  | (U & Record<never, never>)
-
-export interface ClientSafeProvider {
-  id: LiteralUnion<BuiltInProviderType>
-  name: string
-  type: ProviderType
-  signinUrl: string
-  callbackUrl: string
-}
-
-export interface SignInOptions extends Record<string, unknown> {
-  /**
-   * Specify to which URL the user will be redirected after signing in. Defaults to the page URL the sign-in is initiated from.
-   *
-   * [Documentation](https://next-auth.js.org/getting-started/client#specifying-a-callbackurl)
-   */
-  callbackUrl?: string
-  /** [Documentation](https://next-auth.js.org/getting-started/client#using-the-redirect-false-option) */
-  redirect?: boolean
-}
-
-export interface SignInResponse {
-  error: string | undefined
-  status: number
-  ok: boolean
-  url: string | null
-}
-
-/** Match `inputType` of `new URLSearchParams(inputType)` */
-export type SignInAuthorizationParams =
-  | string
-  | string[][]
-  | Record<string, string>
-  | URLSearchParams
-
-/** [Documentation](https://next-auth.js.org/getting-started/client#using-the-redirect-false-option-1) */
-export interface SignOutResponse {
-  url: string
-}
-
-export interface SignOutParams<R extends boolean = true> {
-  /** [Documentation](https://next-auth.js.org/getting-started/client#specifying-a-callbackurl-1) */
-  callbackUrl?: string
-  /** [Documentation](https://next-auth.js.org/getting-started/client#using-the-redirect-false-option-1 */
-  redirect?: R
-}
-
-/** [Documentation](https://next-auth.js.org/getting-started/client#options) */
-export interface SessionProviderProps {
-  children: React.ReactNode
-  session?: Session | null
-  baseUrl?: string
-  basePath?: string
-  /**
-   * A time interval (in seconds) after which the session will be re-fetched.
-   * If set to `0` (default), the session is not polled.
-   */
-  refetchInterval?: number
-  /**
-   * `SessionProvider` automatically refetches the session when the user switches between windows.
-   * This option activates this behaviour if set to `true` (default).
-   */
-  refetchOnWindowFocus?: boolean
-  /**
-   * Set to `false` to stop polling when the device has no internet access offline (determined by `navigator.onLine`)
-   *
-   * [`navigator.onLine` documentation](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorOnLine/onLine)
-   */
-  refetchWhenOffline?: false
-}
diff --git a/node_modules/next-auth/src/utils/detect-origin.ts b/node_modules/next-auth/src/utils/detect-origin.ts
deleted file mode 100644
index 6fc99b9..0000000
--- a/node_modules/next-auth/src/utils/detect-origin.ts
+++ /dev/null
@@ -1,9 +0,0 @@
-/** Extract the origin from the environment */
-export function detectOrigin(forwardedHost: any, protocol: any) {
-  // If we detect a Vercel environment, we can trust the host
-  if (process.env.VERCEL ?? process.env.AUTH_TRUST_HOST)
-    return `${protocol === "http" ? "http" : "https"}://${forwardedHost}`
-
-  // If `NEXTAUTH_URL` is `undefined` we fall back to "http://localhost:3000"
-  return process.env.NEXTAUTH_URL
-}
diff --git a/node_modules/next-auth/src/utils/logger.ts b/node_modules/next-auth/src/utils/logger.ts
deleted file mode 100644
index 278a501..0000000
--- a/node_modules/next-auth/src/utils/logger.ts
+++ /dev/null
@@ -1,117 +0,0 @@
-import { UnknownError } from "../core/errors"
-
-// TODO: better typing
-/** Makes sure that error is always serializable */
-function formatError(o: unknown): unknown {
-  if (o instanceof Error && !(o instanceof UnknownError)) {
-    return { message: o.message, stack: o.stack, name: o.name }
-  }
-  if (hasErrorProperty(o)) {
-    o.error = formatError(o.error) as Error
-    o.message = o.message ?? o.error.message
-  }
-  return o
-}
-
-function hasErrorProperty(
-  x: unknown
-): x is { error: Error; [key: string]: unknown } {
-  return !!(x as any)?.error
-}
-
-export type WarningCode =
-  | "NEXTAUTH_URL"
-  | "NO_SECRET"
-  | "TWITTER_OAUTH_2_BETA"
-  | "DEBUG_ENABLED"
-
-/**
- * Override any of the methods, and the rest will use the default logger.
- *
- * [Documentation](https://next-auth.js.org/configuration/options#logger)
- */
-export interface LoggerInstance extends Record<string, Function> {
-  warn: (code: WarningCode) => void
-  error: (
-    code: string,
-    /**
-     * Either an instance of (JSON serializable) Error
-     * or an object that contains some debug information.
-     * (Error is still available through `metadata.error`)
-     */
-    metadata: Error | { error: Error; [key: string]: unknown }
-  ) => void
-  debug: (code: string, metadata: unknown) => void
-}
-
-const _logger: LoggerInstance = {
-  error(code, metadata) {
-    metadata = formatError(metadata) as Error
-    console.error(
-      `[next-auth][error][${code}]`,
-      `\nhttps://next-auth.js.org/errors#${code.toLowerCase()}`,
-      metadata.message,
-      metadata
-    )
-  },
-  warn(code) {
-    console.warn(
-      `[next-auth][warn][${code}]`,
-      `\nhttps://next-auth.js.org/warnings#${code.toLowerCase()}`
-    )
-  },
-  debug(code, metadata) {
-    console.log(`[next-auth][debug][${code}]`, metadata)
-  },
-}
-
-/**
- * Override the built-in logger with user's implementation.
- * Any `undefined` level will use the default logger.
- */
-export function setLogger(
-  newLogger: Partial<LoggerInstance> = {},
-  debug?: boolean
-) {
-  // Turn off debug logging if `debug` isn't set to `true`
-  if (!debug) _logger.debug = () => {}
-
-  if (newLogger.error) _logger.error = newLogger.error
-  if (newLogger.warn) _logger.warn = newLogger.warn
-  if (newLogger.debug) _logger.debug = newLogger.debug
-}
-
-export default _logger
-
-/** Serializes client-side log messages and sends them to the server */
-export function proxyLogger(
-  logger: LoggerInstance = _logger,
-  basePath?: string
-): LoggerInstance {
-  try {
-    if (typeof window === "undefined") {
-      return logger
-    }
-
-    const clientLogger: Record<string, unknown> = {}
-    for (const level in logger) {
-      clientLogger[level] = (code: string, metadata: Error) => {
-        _logger[level](code, metadata) // Logs to console
-
-        if (level === "error") {
-          metadata = formatError(metadata) as Error
-        }
-        ;(metadata as any).client = true
-        const url = `${basePath}/_log`
-        const body = new URLSearchParams({ level, code, ...(metadata as any) })
-        if (navigator.sendBeacon) {
-          return navigator.sendBeacon(url, body)
-        }
-        return fetch(url, { method: "POST", body, keepalive: true })
-      }
-    }
-    return clientLogger as unknown as LoggerInstance
-  } catch {
-    return _logger
-  }
-}
diff --git a/node_modules/next-auth/src/utils/merge.ts b/node_modules/next-auth/src/utils/merge.ts
deleted file mode 100644
index ad75850..0000000
--- a/node_modules/next-auth/src/utils/merge.ts
+++ /dev/null
@@ -1,25 +0,0 @@
-// Source: https://stackoverflow.com/a/34749873/5364135
-
-/** Simple object check */
-function isObject(item: any): boolean {
-  return item && typeof item === "object" && !Array.isArray(item)
-}
-
-/** Deep merge two objects */
-export function merge(target: any, ...sources: any[]): any {
-  if (!sources.length) return target
-  const source = sources.shift()
-
-  if (isObject(target) && isObject(source)) {
-    for (const key in source) {
-      if (isObject(source[key])) {
-        if (!target[key]) Object.assign(target, { [key]: {} })
-        merge(target[key], source[key])
-      } else {
-        Object.assign(target, { [key]: source[key] })
-      }
-    }
-  }
-
-  return merge(target, ...sources)
-}
diff --git a/node_modules/next-auth/src/utils/parse-url.ts b/node_modules/next-auth/src/utils/parse-url.ts
deleted file mode 100644
index 6494c09..0000000
--- a/node_modules/next-auth/src/utils/parse-url.ts
+++ /dev/null
@@ -1,36 +0,0 @@
-export interface InternalUrl {
-  /** @default "http://localhost:3000" */
-  origin: string
-  /** @default "localhost:3000" */
-  host: string
-  /** @default "/api/auth" */
-  path: string
-  /** @default "http://localhost:3000/api/auth" */
-  base: string
-  /** @default "http://localhost:3000/api/auth" */
-  toString: () => string
-}
-
-/** Returns an `URL` like object to make requests/redirects from server-side */
-export default function parseUrl(url?: string): InternalUrl {
-  const defaultUrl = new URL("http://localhost:3000/api/auth")
-
-  if (url && !url.startsWith("http")) {
-    url = `https://${url}`
-  }
-
-  const _url = new URL(url ?? defaultUrl)
-  const path = (_url.pathname === "/" ? defaultUrl.pathname : _url.pathname)
-    // Remove trailing slash
-    .replace(/\/$/, "")
-
-  const base = `${_url.origin}${path}`
-
-  return {
-    origin: _url.origin,
-    host: _url.host,
-    path,
-    base,
-    toString: () => base,
-  }
-}
diff --git a/node_modules/next-auth/utils/detect-host.d.ts b/node_modules/next-auth/utils/detect-host.d.ts
new file mode 100644
index 0000000..732556d
--- /dev/null
+++ b/node_modules/next-auth/utils/detect-host.d.ts
@@ -0,0 +1,2 @@
+/** Extract the host from the environment */
+export declare function detectHost(forwardedHost: any): any;
diff --git a/node_modules/next-auth/utils/detect-origin.js b/node_modules/next-auth/utils/detect-host.js
similarity index 57%
rename from node_modules/next-auth/utils/detect-origin.js
rename to node_modules/next-auth/utils/detect-host.js
index cf2a333..368f8c9 100644
--- a/node_modules/next-auth/utils/detect-origin.js
+++ b/node_modules/next-auth/utils/detect-host.js
@@ -3,11 +3,15 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.detectOrigin = detectOrigin;
+exports.detectHost = detectHost;
 
-function detectOrigin(forwardedHost, protocol) {
+function detectHost(forwardedHost) {
   var _process$env$VERCEL;
 
-  if ((_process$env$VERCEL = process.env.VERCEL) !== null && _process$env$VERCEL !== void 0 ? _process$env$VERCEL : process.env.AUTH_TRUST_HOST) return `${protocol === "http" ? "http" : "https"}://${forwardedHost}`;
+  if (process.env.NEXTAUTH_URL_INTERNAL) {
+    return process.env.NEXTAUTH_URL_INTERNAL;
+  }
+
+  if ((_process$env$VERCEL = process.env.VERCEL) !== null && _process$env$VERCEL !== void 0 ? _process$env$VERCEL : process.env.AUTH_TRUST_HOST) return forwardedHost;
   return process.env.NEXTAUTH_URL;
 }
\ No newline at end of file
diff --git a/node_modules/next-auth/utils/detect-origin.d.ts b/node_modules/next-auth/utils/detect-origin.d.ts
deleted file mode 100644
index 115da05..0000000
--- a/node_modules/next-auth/utils/detect-origin.d.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-/** Extract the origin from the environment */
-export declare function detectOrigin(forwardedHost: any, protocol: any): string | undefined;
-//# sourceMappingURL=detect-origin.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/utils/detect-origin.d.ts.map b/node_modules/next-auth/utils/detect-origin.d.ts.map
deleted file mode 100644
index e458ebd..0000000
--- a/node_modules/next-auth/utils/detect-origin.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"detect-origin.d.ts","sourceRoot":"","sources":["../src/utils/detect-origin.ts"],"names":[],"mappings":"AAAA,8CAA8C;AAC9C,wBAAgB,YAAY,CAAC,aAAa,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,sBAO7D"}
\ No newline at end of file
diff --git a/node_modules/next-auth/utils/logger.d.ts b/node_modules/next-auth/utils/logger.d.ts
index 38d14af..5d4e777 100644
--- a/node_modules/next-auth/utils/logger.d.ts
+++ b/node_modules/next-auth/utils/logger.d.ts
@@ -1,4 +1,4 @@
-export type WarningCode = "NEXTAUTH_URL" | "NO_SECRET" | "TWITTER_OAUTH_2_BETA" | "DEBUG_ENABLED";
+export declare type WarningCode = "NEXTAUTH_URL" | "NO_SECRET" | "TWITTER_OAUTH_2_BETA" | "DEBUG_ENABLED";
 /**
  * Override any of the methods, and the rest will use the default logger.
  *
@@ -27,4 +27,3 @@ export declare function setLogger(newLogger?: Partial<LoggerInstance>, debug?: b
 export default _logger;
 /** Serializes client-side log messages and sends them to the server */
 export declare function proxyLogger(logger?: LoggerInstance, basePath?: string): LoggerInstance;
-//# sourceMappingURL=logger.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/utils/logger.d.ts.map b/node_modules/next-auth/utils/logger.d.ts.map
deleted file mode 100644
index 8a6511c..0000000
--- a/node_modules/next-auth/utils/logger.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"logger.d.ts","sourceRoot":"","sources":["../src/utils/logger.ts"],"names":[],"mappings":"AAqBA,MAAM,MAAM,WAAW,GACnB,cAAc,GACd,WAAW,GACX,sBAAsB,GACtB,eAAe,CAAA;AAEnB;;;;GAIG;AACH,MAAM,WAAW,cAAe,SAAQ,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC;IAC9D,IAAI,EAAE,CAAC,IAAI,EAAE,WAAW,KAAK,IAAI,CAAA;IACjC,KAAK,EAAE,CACL,IAAI,EAAE,MAAM;IACZ;;;;OAIG;IACH,QAAQ,EAAE,KAAK,GAAG;QAAE,KAAK,EAAE,KAAK,CAAC;QAAC,CAAC,GAAG,EAAE,MAAM,GAAG,OAAO,CAAA;KAAE,KACvD,IAAI,CAAA;IACT,KAAK,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,KAAK,IAAI,CAAA;CACjD;AAED,QAAA,MAAM,OAAO,EAAE,cAmBd,CAAA;AAED;;;GAGG;AACH,wBAAgB,SAAS,CACvB,SAAS,GAAE,OAAO,CAAC,cAAc,CAAM,EACvC,KAAK,CAAC,EAAE,OAAO,QAQhB;AAED,eAAe,OAAO,CAAA;AAEtB,uEAAuE;AACvE,wBAAgB,WAAW,CACzB,MAAM,GAAE,cAAwB,EAChC,QAAQ,CAAC,EAAE,MAAM,GAChB,cAAc,CA2BhB"}
\ No newline at end of file
diff --git a/node_modules/next-auth/utils/merge.d.ts b/node_modules/next-auth/utils/merge.d.ts
index 90e66d9..374ba4c 100644
--- a/node_modules/next-auth/utils/merge.d.ts
+++ b/node_modules/next-auth/utils/merge.d.ts
@@ -1,3 +1,2 @@
 /** Deep merge two objects */
 export declare function merge(target: any, ...sources: any[]): any;
-//# sourceMappingURL=merge.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/utils/merge.d.ts.map b/node_modules/next-auth/utils/merge.d.ts.map
deleted file mode 100644
index 02d30da..0000000
--- a/node_modules/next-auth/utils/merge.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"merge.d.ts","sourceRoot":"","sources":["../src/utils/merge.ts"],"names":[],"mappings":"AAOA,6BAA6B;AAC7B,wBAAgB,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,OAAO,EAAE,GAAG,EAAE,GAAG,GAAG,CAgBzD"}
\ No newline at end of file
diff --git a/node_modules/next-auth/utils/parse-url.d.ts b/node_modules/next-auth/utils/parse-url.d.ts
index ac6a600..88830dd 100644
--- a/node_modules/next-auth/utils/parse-url.d.ts
+++ b/node_modules/next-auth/utils/parse-url.d.ts
@@ -12,4 +12,3 @@ export interface InternalUrl {
 }
 /** Returns an `URL` like object to make requests/redirects from server-side */
 export default function parseUrl(url?: string): InternalUrl;
-//# sourceMappingURL=parse-url.d.ts.map
\ No newline at end of file
diff --git a/node_modules/next-auth/utils/parse-url.d.ts.map b/node_modules/next-auth/utils/parse-url.d.ts.map
deleted file mode 100644
index 5c0693b..0000000
--- a/node_modules/next-auth/utils/parse-url.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"parse-url.d.ts","sourceRoot":"","sources":["../src/utils/parse-url.ts"],"names":[],"mappings":"AAAA,MAAM,WAAW,WAAW;IAC1B,uCAAuC;IACvC,MAAM,EAAE,MAAM,CAAA;IACd,gCAAgC;IAChC,IAAI,EAAE,MAAM,CAAA;IACZ,2BAA2B;IAC3B,IAAI,EAAE,MAAM,CAAA;IACZ,gDAAgD;IAChD,IAAI,EAAE,MAAM,CAAA;IACZ,gDAAgD;IAChD,QAAQ,EAAE,MAAM,MAAM,CAAA;CACvB;AAED,+EAA+E;AAC/E,MAAM,CAAC,OAAO,UAAU,QAAQ,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,WAAW,CAqB1D"}
\ No newline at end of file
